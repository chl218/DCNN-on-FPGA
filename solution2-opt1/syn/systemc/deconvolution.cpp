// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2017.1
// Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "deconvolution.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic deconvolution::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic deconvolution::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<9> deconvolution::ap_ST_fsm_state1 = "1";
const sc_lv<9> deconvolution::ap_ST_fsm_state2 = "10";
const sc_lv<9> deconvolution::ap_ST_fsm_state3 = "100";
const sc_lv<9> deconvolution::ap_ST_fsm_pp0_stage0 = "1000";
const sc_lv<9> deconvolution::ap_ST_fsm_pp0_stage1 = "10000";
const sc_lv<9> deconvolution::ap_ST_fsm_pp0_stage2 = "100000";
const sc_lv<9> deconvolution::ap_ST_fsm_pp0_stage3 = "1000000";
const sc_lv<9> deconvolution::ap_ST_fsm_pp0_stage4 = "10000000";
const sc_lv<9> deconvolution::ap_ST_fsm_state11 = "100000000";
const sc_lv<32> deconvolution::ap_const_lv32_0 = "00000000000000000000000000000000";
const bool deconvolution::ap_const_boolean_1 = true;
const sc_lv<32> deconvolution::ap_const_lv32_4 = "100";
const bool deconvolution::ap_const_boolean_0 = false;
const sc_lv<1> deconvolution::ap_const_lv1_0 = "0";
const sc_lv<32> deconvolution::ap_const_lv32_5 = "101";
const sc_lv<32> deconvolution::ap_const_lv32_6 = "110";
const sc_lv<32> deconvolution::ap_const_lv32_7 = "111";
const sc_lv<32> deconvolution::ap_const_lv32_3 = "11";
const sc_lv<32> deconvolution::ap_const_lv32_1 = "1";
const sc_lv<32> deconvolution::ap_const_lv32_2 = "10";
const sc_lv<1> deconvolution::ap_const_lv1_1 = "1";
const sc_lv<8> deconvolution::ap_const_lv8_0 = "00000000";
const sc_lv<4> deconvolution::ap_const_lv4_0 = "0000";
const sc_lv<5> deconvolution::ap_const_lv5_0 = "00000";
const sc_lv<32> deconvolution::ap_const_lv32_8 = "1000";
const sc_lv<8> deconvolution::ap_const_lv8_80 = "10000000";
const sc_lv<8> deconvolution::ap_const_lv8_1 = "1";
const sc_lv<4> deconvolution::ap_const_lv4_1 = "1";
const sc_lv<5> deconvolution::ap_const_lv5_10 = "10000";
const sc_lv<5> deconvolution::ap_const_lv5_1 = "1";
const sc_lv<5> deconvolution::ap_const_lv5_2 = "10";
const sc_lv<3> deconvolution::ap_const_lv3_0 = "000";
const sc_lv<12> deconvolution::ap_const_lv12_1 = "1";
const sc_lv<12> deconvolution::ap_const_lv12_2 = "10";
const sc_lv<12> deconvolution::ap_const_lv12_3 = "11";
const sc_lv<12> deconvolution::ap_const_lv12_4 = "100";
const sc_lv<12> deconvolution::ap_const_lv12_5 = "101";
const sc_lv<12> deconvolution::ap_const_lv12_6 = "110";
const sc_lv<12> deconvolution::ap_const_lv12_7 = "111";
const sc_lv<12> deconvolution::ap_const_lv12_8 = "1000";

deconvolution::deconvolution(sc_module_name name) : sc_module(name), mVcdFile(0) {

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_ap_CS_fsm_pp0_stage0);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_pp0_stage1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_pp0_stage2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_pp0_stage3);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_pp0_stage4);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state11);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state3);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_block_pp0_stage0);

    SC_METHOD(thread_ap_block_pp0_stage0_11001);

    SC_METHOD(thread_ap_block_pp0_stage0_subdone);

    SC_METHOD(thread_ap_block_pp0_stage1);

    SC_METHOD(thread_ap_block_pp0_stage1_11001);

    SC_METHOD(thread_ap_block_pp0_stage1_subdone);

    SC_METHOD(thread_ap_block_pp0_stage2);

    SC_METHOD(thread_ap_block_pp0_stage2_11001);

    SC_METHOD(thread_ap_block_pp0_stage2_subdone);

    SC_METHOD(thread_ap_block_pp0_stage3);

    SC_METHOD(thread_ap_block_pp0_stage3_11001);

    SC_METHOD(thread_ap_block_pp0_stage3_subdone);

    SC_METHOD(thread_ap_block_pp0_stage4);

    SC_METHOD(thread_ap_block_pp0_stage4_11001);

    SC_METHOD(thread_ap_block_pp0_stage4_subdone);

    SC_METHOD(thread_ap_block_state10_pp0_stage1_iter1);

    SC_METHOD(thread_ap_block_state4_pp0_stage0_iter0);

    SC_METHOD(thread_ap_block_state5_pp0_stage1_iter0);

    SC_METHOD(thread_ap_block_state6_pp0_stage2_iter0);

    SC_METHOD(thread_ap_block_state7_pp0_stage3_iter0);

    SC_METHOD(thread_ap_block_state8_pp0_stage4_iter0);

    SC_METHOD(thread_ap_block_state9_pp0_stage0_iter1);

    SC_METHOD(thread_ap_condition_pp0_exit_iter0_state4);
    sensitive << ( tmp_5_fu_483_p2 );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( exitcond_flatten_fu_341_p2 );

    SC_METHOD(thread_ap_enable_pp0);
    sensitive << ( ap_idle_pp0 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_idle_pp0);
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( exitcond_flatten_fu_341_p2 );

    SC_METHOD(thread_exitcond_flatten_fu_341_p2);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( indvar_flatten_reg_263 );

    SC_METHOD(thread_grp_fu_318_p0);
    sensitive << ( kernel_V_q0 );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( ap_CS_fsm_pp0_stage3 );
    sensitive << ( ap_CS_fsm_pp0_stage4 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage1 );
    sensitive << ( ap_block_pp0_stage2 );
    sensitive << ( ap_block_pp0_stage3 );
    sensitive << ( ap_block_pp0_stage4 );

    SC_METHOD(thread_grp_fu_318_p1);
    sensitive << ( ifeat_V_q0 );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( ap_CS_fsm_pp0_stage3 );
    sensitive << ( ap_CS_fsm_pp0_stage4 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ifeat_V_load_reg_941 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage1 );
    sensitive << ( ap_block_pp0_stage2 );
    sensitive << ( ap_block_pp0_stage3 );
    sensitive << ( ap_block_pp0_stage4 );

    SC_METHOD(thread_grp_fu_318_p2);
    sensitive << ( grp_fu_318_p0 );
    sensitive << ( grp_fu_318_p1 );

    SC_METHOD(thread_grp_fu_324_p0);
    sensitive << ( kernel_V_q1 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( ap_CS_fsm_pp0_stage3 );
    sensitive << ( ap_CS_fsm_pp0_stage4 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage2 );
    sensitive << ( ap_block_pp0_stage3 );
    sensitive << ( ap_block_pp0_stage4 );

    SC_METHOD(thread_grp_fu_324_p2);
    sensitive << ( ifeat_V_load_reg_941 );
    sensitive << ( grp_fu_324_p0 );

    SC_METHOD(thread_ic_1_fu_445_p2);
    sensitive << ( ic_reg_296 );

    SC_METHOD(thread_ic_cast2_cast1_fu_451_p1);
    sensitive << ( ic_reg_296 );

    SC_METHOD(thread_ic_cast2_cast_fu_455_p1);
    sensitive << ( ic_reg_296 );

    SC_METHOD(thread_id_1_fu_353_p2);
    sensitive << ( id_reg_274 );

    SC_METHOD(thread_id_cast4_mid2_cast_fu_381_p1);
    sensitive << ( id_cast4_mid2_v_fu_373_p3 );

    SC_METHOD(thread_id_cast4_mid2_v_fu_373_p3);
    sensitive << ( id_reg_274 );
    sensitive << ( tmp_1_8_fu_359_p2 );
    sensitive << ( id_1_fu_353_p2 );

    SC_METHOD(thread_ifeat_V_address0);
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ifeat_V_addr_reg_873 );
    sensitive << ( ap_block_pp0_stage0 );

    SC_METHOD(thread_ifeat_V_ce0);
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_indvar_flatten_next_fu_347_p2);
    sensitive << ( indvar_flatten_reg_263 );

    SC_METHOD(thread_ir_1_fu_419_p2);
    sensitive << ( ir_mid2_fu_365_p3 );

    SC_METHOD(thread_ir_cast3_cast1_fu_397_p1);
    sensitive << ( ir_mid2_fu_365_p3 );

    SC_METHOD(thread_ir_cast3_cast_fu_401_p1);
    sensitive << ( ir_mid2_fu_365_p3 );

    SC_METHOD(thread_ir_mid2_fu_365_p3);
    sensitive << ( ir_reg_285 );
    sensitive << ( tmp_1_8_fu_359_p2 );

    SC_METHOD(thread_kernel_V_address0);
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( ap_CS_fsm_pp0_stage3 );
    sensitive << ( ap_CS_fsm_pp0_stage4 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( tmp_16_cast_fu_530_p1 );
    sensitive << ( tmp_17_cast_fu_570_p1 );
    sensitive << ( ap_block_pp0_stage1 );
    sensitive << ( ap_block_pp0_stage2 );
    sensitive << ( tmp_20_cast_fu_604_p1 );
    sensitive << ( ap_block_pp0_stage3 );
    sensitive << ( tmp_22_cast_fu_658_p1 );
    sensitive << ( ap_block_pp0_stage4 );
    sensitive << ( tmp_24_cast_fu_704_p1 );

    SC_METHOD(thread_kernel_V_address1);
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( ap_CS_fsm_pp0_stage3 );
    sensitive << ( ap_CS_fsm_pp0_stage4 );
    sensitive << ( ap_block_pp0_stage1 );
    sensitive << ( tmp_18_cast_fu_580_p1 );
    sensitive << ( tmp_19_cast_fu_594_p1 );
    sensitive << ( ap_block_pp0_stage2 );
    sensitive << ( tmp_21_cast_fu_648_p1 );
    sensitive << ( ap_block_pp0_stage3 );
    sensitive << ( tmp_23_cast_fu_694_p1 );
    sensitive << ( ap_block_pp0_stage4 );

    SC_METHOD(thread_kernel_V_ce0);
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_block_pp0_stage1_11001 );
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( ap_block_pp0_stage2_11001 );
    sensitive << ( ap_CS_fsm_pp0_stage3 );
    sensitive << ( ap_block_pp0_stage3_11001 );
    sensitive << ( ap_CS_fsm_pp0_stage4 );
    sensitive << ( ap_block_pp0_stage4_11001 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_kernel_V_ce1);
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_block_pp0_stage1_11001 );
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( ap_block_pp0_stage2_11001 );
    sensitive << ( ap_CS_fsm_pp0_stage3 );
    sensitive << ( ap_block_pp0_stage3_11001 );
    sensitive << ( ap_CS_fsm_pp0_stage4 );
    sensitive << ( ap_block_pp0_stage4_11001 );

    SC_METHOD(thread_oc_1_fu_489_p2);
    sensitive << ( oc_phi_fu_311_p4 );

    SC_METHOD(thread_oc_phi_fu_311_p4);
    sensitive << ( oc_reg_307 );
    sensitive << ( tmp_5_reg_892 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( oc_1_reg_896 );
    sensitive << ( ap_block_pp0_stage0 );

    SC_METHOD(thread_ofeat_V_address0);
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( ap_CS_fsm_pp0_stage3 );
    sensitive << ( ap_CS_fsm_pp0_stage4 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage1 );
    sensitive << ( ap_block_pp0_stage2 );
    sensitive << ( tmp_32_cast_fu_638_p1 );
    sensitive << ( ap_block_pp0_stage3 );
    sensitive << ( tmp_34_cast_fu_676_p1 );
    sensitive << ( ap_block_pp0_stage4 );
    sensitive << ( tmp_40_cast_fu_748_p1 );
    sensitive << ( tmp_41_cast_fu_757_p1 );
    sensitive << ( tmp_47_cast_fu_800_p1 );

    SC_METHOD(thread_ofeat_V_address1);
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_CS_fsm_pp0_stage3 );
    sensitive << ( ap_CS_fsm_pp0_stage4 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage1 );
    sensitive << ( ap_block_pp0_stage3 );
    sensitive << ( tmp_33_cast_fu_667_p1 );
    sensitive << ( ap_block_pp0_stage4 );
    sensitive << ( tmp_39_cast_fu_738_p1 );
    sensitive << ( tmp_46_cast_fu_791_p1 );
    sensitive << ( tmp_48_cast_fu_809_p1 );

    SC_METHOD(thread_ofeat_V_ce0);
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_block_pp0_stage1_11001 );
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( ap_block_pp0_stage2_11001 );
    sensitive << ( ap_CS_fsm_pp0_stage3 );
    sensitive << ( ap_block_pp0_stage3_11001 );
    sensitive << ( ap_CS_fsm_pp0_stage4 );
    sensitive << ( ap_block_pp0_stage4_11001 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_ofeat_V_ce1);
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_block_pp0_stage1_11001 );
    sensitive << ( ap_CS_fsm_pp0_stage3 );
    sensitive << ( ap_block_pp0_stage3_11001 );
    sensitive << ( ap_CS_fsm_pp0_stage4 );
    sensitive << ( ap_block_pp0_stage4_11001 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_ofeat_V_d0);
    sensitive << ( reg_329 );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( ap_CS_fsm_pp0_stage3 );
    sensitive << ( ap_CS_fsm_pp0_stage4 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( reg_335 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage1 );
    sensitive << ( ap_block_pp0_stage2 );
    sensitive << ( ap_block_pp0_stage3 );
    sensitive << ( ap_block_pp0_stage4 );

    SC_METHOD(thread_ofeat_V_d1);
    sensitive << ( reg_329 );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_CS_fsm_pp0_stage3 );
    sensitive << ( ap_CS_fsm_pp0_stage4 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( reg_335 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage1 );
    sensitive << ( ap_block_pp0_stage3 );
    sensitive << ( ap_block_pp0_stage4 );

    SC_METHOD(thread_ofeat_V_we0);
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_block_pp0_stage1_11001 );
    sensitive << ( tmp_5_reg_892 );
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( ap_block_pp0_stage2_11001 );
    sensitive << ( ap_CS_fsm_pp0_stage3 );
    sensitive << ( ap_block_pp0_stage3_11001 );
    sensitive << ( ap_CS_fsm_pp0_stage4 );
    sensitive << ( ap_block_pp0_stage4_11001 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_reg_pp0_iter1_tmp_5_reg_892 );

    SC_METHOD(thread_ofeat_V_we1);
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_block_pp0_stage1_11001 );
    sensitive << ( tmp_5_reg_892 );
    sensitive << ( ap_CS_fsm_pp0_stage3 );
    sensitive << ( ap_block_pp0_stage3_11001 );
    sensitive << ( ap_CS_fsm_pp0_stage4 );
    sensitive << ( ap_block_pp0_stage4_11001 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_reg_pp0_iter1_tmp_5_reg_892 );

    SC_METHOD(thread_p_oc_0_1_cast_cast_fu_469_p1);
    sensitive << ( ic_1_fu_445_p2 );

    SC_METHOD(thread_p_oc_0_2_cast_cast_fu_479_p1);
    sensitive << ( p_oc_0_2_fu_473_p2 );

    SC_METHOD(thread_p_oc_0_2_fu_473_p2);
    sensitive << ( ic_reg_296 );

    SC_METHOD(thread_p_or_1_cast_cast_fu_425_p1);
    sensitive << ( ir_1_fu_419_p2 );

    SC_METHOD(thread_p_or_2_cast_cast_fu_435_p1);
    sensitive << ( p_or_2_fu_429_p2 );

    SC_METHOD(thread_p_or_2_fu_429_p2);
    sensitive << ( ir_mid2_fu_365_p3 );

    SC_METHOD(thread_p_shl1_cast_fu_776_p1);
    sensitive << ( tmp_36_fu_769_p3 );

    SC_METHOD(thread_p_shl2_cast_fu_709_p3);
    sensitive << ( tmp_29_reg_973 );

    SC_METHOD(thread_p_shl3_cast_fu_723_p1);
    sensitive << ( tmp_30_fu_716_p3 );

    SC_METHOD(thread_p_shl4_cast_fu_609_p3);
    sensitive << ( tmp_23_reg_935 );

    SC_METHOD(thread_p_shl5_cast_fu_623_p1);
    sensitive << ( tmp_24_fu_616_p3 );

    SC_METHOD(thread_p_shl6_cast_fu_543_p1);
    sensitive << ( tmp_20_fu_535_p3 );

    SC_METHOD(thread_p_shl7_cast_fu_555_p1);
    sensitive << ( tmp_21_fu_547_p3 );

    SC_METHOD(thread_p_shl8_cast_fu_516_p3);
    sensitive << ( tmp_10_fu_507_p2 );

    SC_METHOD(thread_p_shl_cast_fu_762_p3);
    sensitive << ( tmp_35_reg_979 );

    SC_METHOD(thread_tmp_10_cast_fu_411_p3);
    sensitive << ( tmp_8_fu_405_p2 );

    SC_METHOD(thread_tmp_10_fu_507_p2);
    sensitive << ( id_cast4_mid2_cast_reg_827 );
    sensitive << ( tmp_13_cast_fu_503_p1 );

    SC_METHOD(thread_tmp_11_cast_fu_464_p1);
    sensitive << ( tmp_2_fu_459_p2 );

    SC_METHOD(thread_tmp_11_fu_524_p2);
    sensitive << ( p_shl8_cast_fu_516_p3 );
    sensitive << ( tmp_14_cast_fu_512_p1 );

    SC_METHOD(thread_tmp_12_fu_565_p2);
    sensitive << ( tmp_11_reg_901 );

    SC_METHOD(thread_tmp_13_cast_fu_503_p1);
    sensitive << ( tmp_9_fu_495_p3 );

    SC_METHOD(thread_tmp_13_fu_575_p2);
    sensitive << ( tmp_11_reg_901 );

    SC_METHOD(thread_tmp_14_cast_fu_512_p1);
    sensitive << ( tmp_10_fu_507_p2 );

    SC_METHOD(thread_tmp_14_fu_589_p2);
    sensitive << ( tmp_11_reg_901 );

    SC_METHOD(thread_tmp_15_fu_599_p2);
    sensitive << ( tmp_11_reg_901 );

    SC_METHOD(thread_tmp_16_cast_fu_530_p1);
    sensitive << ( tmp_11_fu_524_p2 );

    SC_METHOD(thread_tmp_16_fu_643_p2);
    sensitive << ( tmp_11_reg_901 );

    SC_METHOD(thread_tmp_17_cast_fu_570_p1);
    sensitive << ( tmp_12_fu_565_p2 );

    SC_METHOD(thread_tmp_17_fu_653_p2);
    sensitive << ( tmp_11_reg_901 );

    SC_METHOD(thread_tmp_18_cast_fu_580_p1);
    sensitive << ( tmp_13_fu_575_p2 );

    SC_METHOD(thread_tmp_18_fu_689_p2);
    sensitive << ( tmp_11_reg_901 );

    SC_METHOD(thread_tmp_19_cast_fu_594_p1);
    sensitive << ( tmp_14_fu_589_p2 );

    SC_METHOD(thread_tmp_19_fu_699_p2);
    sensitive << ( tmp_11_reg_901 );

    SC_METHOD(thread_tmp_1_8_fu_359_p2);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( exitcond_flatten_fu_341_p2 );
    sensitive << ( ir_reg_285 );

    SC_METHOD(thread_tmp_20_cast_fu_604_p1);
    sensitive << ( tmp_15_fu_599_p2 );

    SC_METHOD(thread_tmp_20_fu_535_p3);
    sensitive << ( oc_phi_fu_311_p4 );

    SC_METHOD(thread_tmp_21_cast_fu_648_p1);
    sensitive << ( tmp_16_fu_643_p2 );

    SC_METHOD(thread_tmp_21_fu_547_p3);
    sensitive << ( oc_phi_fu_311_p4 );

    SC_METHOD(thread_tmp_22_cast_fu_658_p1);
    sensitive << ( tmp_17_fu_653_p2 );

    SC_METHOD(thread_tmp_22_fu_559_p2);
    sensitive << ( p_shl6_cast_fu_543_p1 );
    sensitive << ( p_shl7_cast_fu_555_p1 );

    SC_METHOD(thread_tmp_23_cast_fu_694_p1);
    sensitive << ( tmp_18_fu_689_p2 );

    SC_METHOD(thread_tmp_23_fu_585_p2);
    sensitive << ( ir_cast3_cast1_reg_832 );
    sensitive << ( tmp_22_reg_918 );

    SC_METHOD(thread_tmp_24_cast_fu_704_p1);
    sensitive << ( tmp_19_fu_699_p2 );

    SC_METHOD(thread_tmp_24_fu_616_p3);
    sensitive << ( tmp_23_reg_935 );

    SC_METHOD(thread_tmp_25_fu_627_p2);
    sensitive << ( p_shl4_cast_fu_609_p3 );
    sensitive << ( p_shl5_cast_fu_623_p1 );

    SC_METHOD(thread_tmp_26_fu_633_p2);
    sensitive << ( ic_cast2_cast1_reg_866 );
    sensitive << ( tmp_25_fu_627_p2 );

    SC_METHOD(thread_tmp_27_fu_663_p2);
    sensitive << ( p_oc_0_1_cast_cast_reg_878 );
    sensitive << ( tmp_25_reg_957 );

    SC_METHOD(thread_tmp_28_fu_672_p2);
    sensitive << ( p_oc_0_2_cast_cast_reg_885 );
    sensitive << ( tmp_25_reg_957 );

    SC_METHOD(thread_tmp_29_fu_681_p2);
    sensitive << ( p_or_1_cast_cast_reg_847 );
    sensitive << ( tmp_22_reg_918 );

    SC_METHOD(thread_tmp_2_cast_fu_393_p1);
    sensitive << ( tmp_fu_385_p3 );

    SC_METHOD(thread_tmp_2_fu_459_p2);
    sensitive << ( tmp_10_cast_reg_837 );
    sensitive << ( ic_cast2_cast_fu_455_p1 );

    SC_METHOD(thread_tmp_30_fu_716_p3);
    sensitive << ( tmp_29_reg_973 );

    SC_METHOD(thread_tmp_31_fu_727_p2);
    sensitive << ( p_shl2_cast_fu_709_p3 );
    sensitive << ( p_shl3_cast_fu_723_p1 );

    SC_METHOD(thread_tmp_32_cast_fu_638_p1);
    sensitive << ( tmp_26_fu_633_p2 );

    SC_METHOD(thread_tmp_32_fu_733_p2);
    sensitive << ( ic_cast2_cast1_reg_866 );
    sensitive << ( tmp_31_fu_727_p2 );

    SC_METHOD(thread_tmp_33_cast_fu_667_p1);
    sensitive << ( tmp_27_fu_663_p2 );

    SC_METHOD(thread_tmp_33_fu_743_p2);
    sensitive << ( p_oc_0_1_cast_cast_reg_878 );
    sensitive << ( tmp_31_fu_727_p2 );

    SC_METHOD(thread_tmp_34_cast_fu_676_p1);
    sensitive << ( tmp_28_fu_672_p2 );

    SC_METHOD(thread_tmp_34_fu_753_p2);
    sensitive << ( p_oc_0_2_cast_cast_reg_885 );
    sensitive << ( tmp_31_reg_995 );

    SC_METHOD(thread_tmp_35_fu_685_p2);
    sensitive << ( p_or_2_cast_cast_reg_852 );
    sensitive << ( tmp_22_reg_918 );

    SC_METHOD(thread_tmp_36_fu_769_p3);
    sensitive << ( tmp_35_reg_979 );

    SC_METHOD(thread_tmp_37_fu_780_p2);
    sensitive << ( p_shl_cast_fu_762_p3 );
    sensitive << ( p_shl1_cast_fu_776_p1 );

    SC_METHOD(thread_tmp_38_fu_786_p2);
    sensitive << ( ic_cast2_cast1_reg_866 );
    sensitive << ( tmp_37_fu_780_p2 );

    SC_METHOD(thread_tmp_39_cast_fu_738_p1);
    sensitive << ( tmp_32_fu_733_p2 );

    SC_METHOD(thread_tmp_39_fu_796_p2);
    sensitive << ( p_oc_0_1_cast_cast_reg_878 );
    sensitive << ( tmp_37_reg_1000 );

    SC_METHOD(thread_tmp_3_fu_439_p2);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ic_reg_296 );

    SC_METHOD(thread_tmp_40_cast_fu_748_p1);
    sensitive << ( tmp_33_fu_743_p2 );

    SC_METHOD(thread_tmp_40_fu_805_p2);
    sensitive << ( p_oc_0_2_cast_cast_reg_885 );
    sensitive << ( tmp_37_reg_1000 );

    SC_METHOD(thread_tmp_41_cast_fu_757_p1);
    sensitive << ( tmp_34_fu_753_p2 );

    SC_METHOD(thread_tmp_46_cast_fu_791_p1);
    sensitive << ( tmp_38_fu_786_p2 );

    SC_METHOD(thread_tmp_47_cast_fu_800_p1);
    sensitive << ( tmp_39_fu_796_p2 );

    SC_METHOD(thread_tmp_48_cast_fu_809_p1);
    sensitive << ( tmp_40_fu_805_p2 );

    SC_METHOD(thread_tmp_5_fu_483_p2);
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( oc_phi_fu_311_p4 );

    SC_METHOD(thread_tmp_8_fu_405_p2);
    sensitive << ( ir_cast3_cast_fu_401_p1 );
    sensitive << ( tmp_2_cast_fu_393_p1 );

    SC_METHOD(thread_tmp_9_fu_495_p3);
    sensitive << ( oc_phi_fu_311_p4 );

    SC_METHOD(thread_tmp_fu_385_p3);
    sensitive << ( id_cast4_mid2_v_fu_373_p3 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( exitcond_flatten_fu_341_p2 );
    sensitive << ( tmp_3_fu_439_p2 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( tmp_5_fu_483_p2 );
    sensitive << ( ap_block_pp0_stage0_subdone );
    sensitive << ( ap_block_pp0_stage4_subdone );
    sensitive << ( ap_block_pp0_stage1_subdone );
    sensitive << ( ap_block_pp0_stage2_subdone );
    sensitive << ( ap_block_pp0_stage3_subdone );

    SC_THREAD(thread_hdltv_gen);
    sensitive << ( ap_clk.pos() );

    ap_CS_fsm = "000000001";
    ap_enable_reg_pp0_iter0 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter1 = SC_LOGIC_0;
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "deconvolution_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, kernel_V_address0, "(port)kernel_V_address0");
    sc_trace(mVcdFile, kernel_V_ce0, "(port)kernel_V_ce0");
    sc_trace(mVcdFile, kernel_V_q0, "(port)kernel_V_q0");
    sc_trace(mVcdFile, kernel_V_address1, "(port)kernel_V_address1");
    sc_trace(mVcdFile, kernel_V_ce1, "(port)kernel_V_ce1");
    sc_trace(mVcdFile, kernel_V_q1, "(port)kernel_V_q1");
    sc_trace(mVcdFile, ifeat_V_address0, "(port)ifeat_V_address0");
    sc_trace(mVcdFile, ifeat_V_ce0, "(port)ifeat_V_ce0");
    sc_trace(mVcdFile, ifeat_V_q0, "(port)ifeat_V_q0");
    sc_trace(mVcdFile, ofeat_V_address0, "(port)ofeat_V_address0");
    sc_trace(mVcdFile, ofeat_V_ce0, "(port)ofeat_V_ce0");
    sc_trace(mVcdFile, ofeat_V_we0, "(port)ofeat_V_we0");
    sc_trace(mVcdFile, ofeat_V_d0, "(port)ofeat_V_d0");
    sc_trace(mVcdFile, ofeat_V_address1, "(port)ofeat_V_address1");
    sc_trace(mVcdFile, ofeat_V_ce1, "(port)ofeat_V_ce1");
    sc_trace(mVcdFile, ofeat_V_we1, "(port)ofeat_V_we1");
    sc_trace(mVcdFile, ofeat_V_d1, "(port)ofeat_V_d1");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, oc_reg_307, "oc_reg_307");
    sc_trace(mVcdFile, grp_fu_318_p2, "grp_fu_318_p2");
    sc_trace(mVcdFile, reg_329, "reg_329");
    sc_trace(mVcdFile, ap_CS_fsm_pp0_stage1, "ap_CS_fsm_pp0_stage1");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter0, "ap_enable_reg_pp0_iter0");
    sc_trace(mVcdFile, ap_block_state5_pp0_stage1_iter0, "ap_block_state5_pp0_stage1_iter0");
    sc_trace(mVcdFile, ap_block_state10_pp0_stage1_iter1, "ap_block_state10_pp0_stage1_iter1");
    sc_trace(mVcdFile, ap_block_pp0_stage1_11001, "ap_block_pp0_stage1_11001");
    sc_trace(mVcdFile, tmp_5_reg_892, "tmp_5_reg_892");
    sc_trace(mVcdFile, ap_CS_fsm_pp0_stage2, "ap_CS_fsm_pp0_stage2");
    sc_trace(mVcdFile, ap_block_state6_pp0_stage2_iter0, "ap_block_state6_pp0_stage2_iter0");
    sc_trace(mVcdFile, ap_block_pp0_stage2_11001, "ap_block_pp0_stage2_11001");
    sc_trace(mVcdFile, ap_CS_fsm_pp0_stage3, "ap_CS_fsm_pp0_stage3");
    sc_trace(mVcdFile, ap_block_state7_pp0_stage3_iter0, "ap_block_state7_pp0_stage3_iter0");
    sc_trace(mVcdFile, ap_block_pp0_stage3_11001, "ap_block_pp0_stage3_11001");
    sc_trace(mVcdFile, ap_CS_fsm_pp0_stage4, "ap_CS_fsm_pp0_stage4");
    sc_trace(mVcdFile, ap_block_state8_pp0_stage4_iter0, "ap_block_state8_pp0_stage4_iter0");
    sc_trace(mVcdFile, ap_block_pp0_stage4_11001, "ap_block_pp0_stage4_11001");
    sc_trace(mVcdFile, ap_CS_fsm_pp0_stage0, "ap_CS_fsm_pp0_stage0");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter1, "ap_enable_reg_pp0_iter1");
    sc_trace(mVcdFile, ap_block_state4_pp0_stage0_iter0, "ap_block_state4_pp0_stage0_iter0");
    sc_trace(mVcdFile, ap_block_state9_pp0_stage0_iter1, "ap_block_state9_pp0_stage0_iter1");
    sc_trace(mVcdFile, ap_block_pp0_stage0_11001, "ap_block_pp0_stage0_11001");
    sc_trace(mVcdFile, grp_fu_324_p2, "grp_fu_324_p2");
    sc_trace(mVcdFile, reg_335, "reg_335");
    sc_trace(mVcdFile, indvar_flatten_next_fu_347_p2, "indvar_flatten_next_fu_347_p2");
    sc_trace(mVcdFile, indvar_flatten_next_reg_817, "indvar_flatten_next_reg_817");
    sc_trace(mVcdFile, ap_CS_fsm_state2, "ap_CS_fsm_state2");
    sc_trace(mVcdFile, id_cast4_mid2_v_fu_373_p3, "id_cast4_mid2_v_fu_373_p3");
    sc_trace(mVcdFile, id_cast4_mid2_v_reg_822, "id_cast4_mid2_v_reg_822");
    sc_trace(mVcdFile, exitcond_flatten_fu_341_p2, "exitcond_flatten_fu_341_p2");
    sc_trace(mVcdFile, id_cast4_mid2_cast_fu_381_p1, "id_cast4_mid2_cast_fu_381_p1");
    sc_trace(mVcdFile, id_cast4_mid2_cast_reg_827, "id_cast4_mid2_cast_reg_827");
    sc_trace(mVcdFile, ir_cast3_cast1_fu_397_p1, "ir_cast3_cast1_fu_397_p1");
    sc_trace(mVcdFile, ir_cast3_cast1_reg_832, "ir_cast3_cast1_reg_832");
    sc_trace(mVcdFile, tmp_10_cast_fu_411_p3, "tmp_10_cast_fu_411_p3");
    sc_trace(mVcdFile, tmp_10_cast_reg_837, "tmp_10_cast_reg_837");
    sc_trace(mVcdFile, ir_1_fu_419_p2, "ir_1_fu_419_p2");
    sc_trace(mVcdFile, ir_1_reg_842, "ir_1_reg_842");
    sc_trace(mVcdFile, p_or_1_cast_cast_fu_425_p1, "p_or_1_cast_cast_fu_425_p1");
    sc_trace(mVcdFile, p_or_1_cast_cast_reg_847, "p_or_1_cast_cast_reg_847");
    sc_trace(mVcdFile, p_or_2_cast_cast_fu_435_p1, "p_or_2_cast_cast_fu_435_p1");
    sc_trace(mVcdFile, p_or_2_cast_cast_reg_852, "p_or_2_cast_cast_reg_852");
    sc_trace(mVcdFile, tmp_3_fu_439_p2, "tmp_3_fu_439_p2");
    sc_trace(mVcdFile, ap_CS_fsm_state3, "ap_CS_fsm_state3");
    sc_trace(mVcdFile, ic_1_fu_445_p2, "ic_1_fu_445_p2");
    sc_trace(mVcdFile, ic_1_reg_861, "ic_1_reg_861");
    sc_trace(mVcdFile, ic_cast2_cast1_fu_451_p1, "ic_cast2_cast1_fu_451_p1");
    sc_trace(mVcdFile, ic_cast2_cast1_reg_866, "ic_cast2_cast1_reg_866");
    sc_trace(mVcdFile, ifeat_V_addr_reg_873, "ifeat_V_addr_reg_873");
    sc_trace(mVcdFile, p_oc_0_1_cast_cast_fu_469_p1, "p_oc_0_1_cast_cast_fu_469_p1");
    sc_trace(mVcdFile, p_oc_0_1_cast_cast_reg_878, "p_oc_0_1_cast_cast_reg_878");
    sc_trace(mVcdFile, p_oc_0_2_cast_cast_fu_479_p1, "p_oc_0_2_cast_cast_fu_479_p1");
    sc_trace(mVcdFile, p_oc_0_2_cast_cast_reg_885, "p_oc_0_2_cast_cast_reg_885");
    sc_trace(mVcdFile, tmp_5_fu_483_p2, "tmp_5_fu_483_p2");
    sc_trace(mVcdFile, ap_reg_pp0_iter1_tmp_5_reg_892, "ap_reg_pp0_iter1_tmp_5_reg_892");
    sc_trace(mVcdFile, oc_1_fu_489_p2, "oc_1_fu_489_p2");
    sc_trace(mVcdFile, oc_1_reg_896, "oc_1_reg_896");
    sc_trace(mVcdFile, tmp_11_fu_524_p2, "tmp_11_fu_524_p2");
    sc_trace(mVcdFile, tmp_11_reg_901, "tmp_11_reg_901");
    sc_trace(mVcdFile, tmp_22_fu_559_p2, "tmp_22_fu_559_p2");
    sc_trace(mVcdFile, tmp_22_reg_918, "tmp_22_reg_918");
    sc_trace(mVcdFile, tmp_23_fu_585_p2, "tmp_23_fu_585_p2");
    sc_trace(mVcdFile, tmp_23_reg_935, "tmp_23_reg_935");
    sc_trace(mVcdFile, ifeat_V_load_reg_941, "ifeat_V_load_reg_941");
    sc_trace(mVcdFile, tmp_25_fu_627_p2, "tmp_25_fu_627_p2");
    sc_trace(mVcdFile, tmp_25_reg_957, "tmp_25_reg_957");
    sc_trace(mVcdFile, tmp_29_fu_681_p2, "tmp_29_fu_681_p2");
    sc_trace(mVcdFile, tmp_29_reg_973, "tmp_29_reg_973");
    sc_trace(mVcdFile, tmp_35_fu_685_p2, "tmp_35_fu_685_p2");
    sc_trace(mVcdFile, tmp_35_reg_979, "tmp_35_reg_979");
    sc_trace(mVcdFile, tmp_31_fu_727_p2, "tmp_31_fu_727_p2");
    sc_trace(mVcdFile, tmp_31_reg_995, "tmp_31_reg_995");
    sc_trace(mVcdFile, tmp_37_fu_780_p2, "tmp_37_fu_780_p2");
    sc_trace(mVcdFile, tmp_37_reg_1000, "tmp_37_reg_1000");
    sc_trace(mVcdFile, ap_block_pp0_stage0_subdone, "ap_block_pp0_stage0_subdone");
    sc_trace(mVcdFile, ap_condition_pp0_exit_iter0_state4, "ap_condition_pp0_exit_iter0_state4");
    sc_trace(mVcdFile, ap_block_pp0_stage4_subdone, "ap_block_pp0_stage4_subdone");
    sc_trace(mVcdFile, ap_block_pp0_stage1_subdone, "ap_block_pp0_stage1_subdone");
    sc_trace(mVcdFile, indvar_flatten_reg_263, "indvar_flatten_reg_263");
    sc_trace(mVcdFile, id_reg_274, "id_reg_274");
    sc_trace(mVcdFile, ir_reg_285, "ir_reg_285");
    sc_trace(mVcdFile, ic_reg_296, "ic_reg_296");
    sc_trace(mVcdFile, ap_CS_fsm_state11, "ap_CS_fsm_state11");
    sc_trace(mVcdFile, oc_phi_fu_311_p4, "oc_phi_fu_311_p4");
    sc_trace(mVcdFile, ap_block_pp0_stage0, "ap_block_pp0_stage0");
    sc_trace(mVcdFile, tmp_11_cast_fu_464_p1, "tmp_11_cast_fu_464_p1");
    sc_trace(mVcdFile, tmp_16_cast_fu_530_p1, "tmp_16_cast_fu_530_p1");
    sc_trace(mVcdFile, tmp_17_cast_fu_570_p1, "tmp_17_cast_fu_570_p1");
    sc_trace(mVcdFile, ap_block_pp0_stage1, "ap_block_pp0_stage1");
    sc_trace(mVcdFile, tmp_18_cast_fu_580_p1, "tmp_18_cast_fu_580_p1");
    sc_trace(mVcdFile, tmp_19_cast_fu_594_p1, "tmp_19_cast_fu_594_p1");
    sc_trace(mVcdFile, ap_block_pp0_stage2, "ap_block_pp0_stage2");
    sc_trace(mVcdFile, tmp_20_cast_fu_604_p1, "tmp_20_cast_fu_604_p1");
    sc_trace(mVcdFile, tmp_32_cast_fu_638_p1, "tmp_32_cast_fu_638_p1");
    sc_trace(mVcdFile, tmp_21_cast_fu_648_p1, "tmp_21_cast_fu_648_p1");
    sc_trace(mVcdFile, ap_block_pp0_stage3, "ap_block_pp0_stage3");
    sc_trace(mVcdFile, tmp_22_cast_fu_658_p1, "tmp_22_cast_fu_658_p1");
    sc_trace(mVcdFile, tmp_33_cast_fu_667_p1, "tmp_33_cast_fu_667_p1");
    sc_trace(mVcdFile, tmp_34_cast_fu_676_p1, "tmp_34_cast_fu_676_p1");
    sc_trace(mVcdFile, tmp_23_cast_fu_694_p1, "tmp_23_cast_fu_694_p1");
    sc_trace(mVcdFile, ap_block_pp0_stage4, "ap_block_pp0_stage4");
    sc_trace(mVcdFile, tmp_24_cast_fu_704_p1, "tmp_24_cast_fu_704_p1");
    sc_trace(mVcdFile, tmp_39_cast_fu_738_p1, "tmp_39_cast_fu_738_p1");
    sc_trace(mVcdFile, tmp_40_cast_fu_748_p1, "tmp_40_cast_fu_748_p1");
    sc_trace(mVcdFile, tmp_41_cast_fu_757_p1, "tmp_41_cast_fu_757_p1");
    sc_trace(mVcdFile, tmp_46_cast_fu_791_p1, "tmp_46_cast_fu_791_p1");
    sc_trace(mVcdFile, tmp_47_cast_fu_800_p1, "tmp_47_cast_fu_800_p1");
    sc_trace(mVcdFile, tmp_48_cast_fu_809_p1, "tmp_48_cast_fu_809_p1");
    sc_trace(mVcdFile, grp_fu_318_p0, "grp_fu_318_p0");
    sc_trace(mVcdFile, grp_fu_318_p1, "grp_fu_318_p1");
    sc_trace(mVcdFile, grp_fu_324_p0, "grp_fu_324_p0");
    sc_trace(mVcdFile, tmp_1_8_fu_359_p2, "tmp_1_8_fu_359_p2");
    sc_trace(mVcdFile, id_1_fu_353_p2, "id_1_fu_353_p2");
    sc_trace(mVcdFile, tmp_fu_385_p3, "tmp_fu_385_p3");
    sc_trace(mVcdFile, ir_mid2_fu_365_p3, "ir_mid2_fu_365_p3");
    sc_trace(mVcdFile, ir_cast3_cast_fu_401_p1, "ir_cast3_cast_fu_401_p1");
    sc_trace(mVcdFile, tmp_2_cast_fu_393_p1, "tmp_2_cast_fu_393_p1");
    sc_trace(mVcdFile, tmp_8_fu_405_p2, "tmp_8_fu_405_p2");
    sc_trace(mVcdFile, p_or_2_fu_429_p2, "p_or_2_fu_429_p2");
    sc_trace(mVcdFile, ic_cast2_cast_fu_455_p1, "ic_cast2_cast_fu_455_p1");
    sc_trace(mVcdFile, tmp_2_fu_459_p2, "tmp_2_fu_459_p2");
    sc_trace(mVcdFile, p_oc_0_2_fu_473_p2, "p_oc_0_2_fu_473_p2");
    sc_trace(mVcdFile, tmp_9_fu_495_p3, "tmp_9_fu_495_p3");
    sc_trace(mVcdFile, tmp_13_cast_fu_503_p1, "tmp_13_cast_fu_503_p1");
    sc_trace(mVcdFile, tmp_10_fu_507_p2, "tmp_10_fu_507_p2");
    sc_trace(mVcdFile, p_shl8_cast_fu_516_p3, "p_shl8_cast_fu_516_p3");
    sc_trace(mVcdFile, tmp_14_cast_fu_512_p1, "tmp_14_cast_fu_512_p1");
    sc_trace(mVcdFile, tmp_20_fu_535_p3, "tmp_20_fu_535_p3");
    sc_trace(mVcdFile, tmp_21_fu_547_p3, "tmp_21_fu_547_p3");
    sc_trace(mVcdFile, p_shl6_cast_fu_543_p1, "p_shl6_cast_fu_543_p1");
    sc_trace(mVcdFile, p_shl7_cast_fu_555_p1, "p_shl7_cast_fu_555_p1");
    sc_trace(mVcdFile, tmp_12_fu_565_p2, "tmp_12_fu_565_p2");
    sc_trace(mVcdFile, tmp_13_fu_575_p2, "tmp_13_fu_575_p2");
    sc_trace(mVcdFile, tmp_14_fu_589_p2, "tmp_14_fu_589_p2");
    sc_trace(mVcdFile, tmp_15_fu_599_p2, "tmp_15_fu_599_p2");
    sc_trace(mVcdFile, tmp_24_fu_616_p3, "tmp_24_fu_616_p3");
    sc_trace(mVcdFile, p_shl4_cast_fu_609_p3, "p_shl4_cast_fu_609_p3");
    sc_trace(mVcdFile, p_shl5_cast_fu_623_p1, "p_shl5_cast_fu_623_p1");
    sc_trace(mVcdFile, tmp_26_fu_633_p2, "tmp_26_fu_633_p2");
    sc_trace(mVcdFile, tmp_16_fu_643_p2, "tmp_16_fu_643_p2");
    sc_trace(mVcdFile, tmp_17_fu_653_p2, "tmp_17_fu_653_p2");
    sc_trace(mVcdFile, tmp_27_fu_663_p2, "tmp_27_fu_663_p2");
    sc_trace(mVcdFile, tmp_28_fu_672_p2, "tmp_28_fu_672_p2");
    sc_trace(mVcdFile, tmp_18_fu_689_p2, "tmp_18_fu_689_p2");
    sc_trace(mVcdFile, tmp_19_fu_699_p2, "tmp_19_fu_699_p2");
    sc_trace(mVcdFile, tmp_30_fu_716_p3, "tmp_30_fu_716_p3");
    sc_trace(mVcdFile, p_shl2_cast_fu_709_p3, "p_shl2_cast_fu_709_p3");
    sc_trace(mVcdFile, p_shl3_cast_fu_723_p1, "p_shl3_cast_fu_723_p1");
    sc_trace(mVcdFile, tmp_32_fu_733_p2, "tmp_32_fu_733_p2");
    sc_trace(mVcdFile, tmp_33_fu_743_p2, "tmp_33_fu_743_p2");
    sc_trace(mVcdFile, tmp_34_fu_753_p2, "tmp_34_fu_753_p2");
    sc_trace(mVcdFile, tmp_36_fu_769_p3, "tmp_36_fu_769_p3");
    sc_trace(mVcdFile, p_shl_cast_fu_762_p3, "p_shl_cast_fu_762_p3");
    sc_trace(mVcdFile, p_shl1_cast_fu_776_p1, "p_shl1_cast_fu_776_p1");
    sc_trace(mVcdFile, tmp_38_fu_786_p2, "tmp_38_fu_786_p2");
    sc_trace(mVcdFile, tmp_39_fu_796_p2, "tmp_39_fu_796_p2");
    sc_trace(mVcdFile, tmp_40_fu_805_p2, "tmp_40_fu_805_p2");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
    sc_trace(mVcdFile, ap_block_pp0_stage2_subdone, "ap_block_pp0_stage2_subdone");
    sc_trace(mVcdFile, ap_block_pp0_stage3_subdone, "ap_block_pp0_stage3_subdone");
    sc_trace(mVcdFile, ap_idle_pp0, "ap_idle_pp0");
    sc_trace(mVcdFile, ap_enable_pp0, "ap_enable_pp0");
#endif

    }
    mHdltvinHandle.open("deconvolution.hdltvin.dat");
    mHdltvoutHandle.open("deconvolution.hdltvout.dat");
}

deconvolution::~deconvolution() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    mHdltvinHandle << "] " << endl;
    mHdltvoutHandle << "] " << endl;
    mHdltvinHandle.close();
    mHdltvoutHandle.close();
}

void deconvolution::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter0 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
             esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_condition_pp0_exit_iter0_state4.read()))) {
            ap_enable_reg_pp0_iter0 = ap_const_logic_0;
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
                    esl_seteq<1,1,1>(ap_const_lv1_0, tmp_3_fu_439_p2.read()))) {
            ap_enable_reg_pp0_iter0 = ap_const_logic_1;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter1 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_condition_pp0_exit_iter0_state4.read()) && 
             ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage4.read()) && 
               esl_seteq<1,1,1>(ap_block_pp0_stage4_subdone.read(), ap_const_boolean_0)) || 
              (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
               esl_seteq<1,1,1>(ap_block_pp0_stage1_subdone.read(), ap_const_boolean_0))))) {
            ap_enable_reg_pp0_iter1 = (ap_condition_pp0_exit_iter0_state4.read() ^ ap_const_logic_1);
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage4.read()) && 
                     esl_seteq<1,1,1>(ap_block_pp0_stage4_subdone.read(), ap_const_boolean_0)) || 
                    (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
                     esl_seteq<1,1,1>(ap_block_pp0_stage1_subdone.read(), ap_const_boolean_0)))) {
            ap_enable_reg_pp0_iter1 = ap_enable_reg_pp0_iter0.read();
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
                    esl_seteq<1,1,1>(ap_const_lv1_0, tmp_3_fu_439_p2.read()))) {
            ap_enable_reg_pp0_iter1 = ap_const_logic_0;
        }
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read())) {
        ic_reg_296 = ic_1_reg_861.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten_fu_341_p2.read()))) {
        ic_reg_296 = ap_const_lv5_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
         esl_seteq<1,1,1>(tmp_3_fu_439_p2.read(), ap_const_lv1_1))) {
        id_reg_274 = id_cast4_mid2_v_reg_822.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        id_reg_274 = ap_const_lv4_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
         esl_seteq<1,1,1>(tmp_3_fu_439_p2.read(), ap_const_lv1_1))) {
        indvar_flatten_reg_263 = indvar_flatten_next_reg_817.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        indvar_flatten_reg_263 = ap_const_lv8_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
         esl_seteq<1,1,1>(tmp_3_fu_439_p2.read(), ap_const_lv1_1))) {
        ir_reg_285 = ir_1_reg_842.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        ir_reg_285 = ap_const_lv5_0;
    }
    if ((esl_seteq<1,1,1>(tmp_5_reg_892.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        oc_reg_307 = oc_1_reg_896.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, tmp_3_fu_439_p2.read()))) {
        oc_reg_307 = ap_const_lv5_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        ap_reg_pp0_iter1_tmp_5_reg_892 = tmp_5_reg_892.read();
        tmp_5_reg_892 = tmp_5_fu_483_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        ic_1_reg_861 = ic_1_fu_445_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, tmp_3_fu_439_p2.read()))) {
        ic_cast2_cast1_reg_866 = ic_cast2_cast1_fu_451_p1.read();
        ifeat_V_addr_reg_873 =  (sc_lv<11>) (tmp_11_cast_fu_464_p1.read());
        p_oc_0_1_cast_cast_reg_878 = p_oc_0_1_cast_cast_fu_469_p1.read();
        p_oc_0_2_cast_cast_reg_885 = p_oc_0_2_cast_cast_fu_479_p1.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten_fu_341_p2.read()))) {
        id_cast4_mid2_cast_reg_827 = id_cast4_mid2_cast_fu_381_p1.read();
        id_cast4_mid2_v_reg_822 = id_cast4_mid2_v_fu_373_p3.read();
        ir_1_reg_842 = ir_1_fu_419_p2.read();
        ir_cast3_cast1_reg_832 = ir_cast3_cast1_fu_397_p1.read();
        p_or_1_cast_cast_reg_847 = p_or_1_cast_cast_fu_425_p1.read();
        p_or_2_cast_cast_reg_852 = p_or_2_cast_cast_fu_435_p1.read();
        tmp_10_cast_reg_837 = tmp_10_cast_fu_411_p3.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage1_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(tmp_5_reg_892.read(), ap_const_lv1_0))) {
        ifeat_V_load_reg_941 = ifeat_V_q0.read();
        tmp_23_reg_935 = tmp_23_fu_585_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        indvar_flatten_next_reg_817 = indvar_flatten_next_fu_347_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        oc_1_reg_896 = oc_1_fu_489_p2.read();
    }
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
  esl_seteq<1,1,1>(ap_block_pp0_stage1_11001.read(), ap_const_boolean_0) && 
  esl_seteq<1,1,1>(tmp_5_reg_892.read(), ap_const_lv1_0)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
  esl_seteq<1,1,1>(tmp_5_reg_892.read(), ap_const_lv1_0) && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && 
  esl_seteq<1,1,1>(ap_block_pp0_stage2_11001.read(), ap_const_boolean_0)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
  esl_seteq<1,1,1>(tmp_5_reg_892.read(), ap_const_lv1_0) && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage3.read()) && 
  esl_seteq<1,1,1>(ap_block_pp0_stage3_11001.read(), ap_const_boolean_0)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
  esl_seteq<1,1,1>(tmp_5_reg_892.read(), ap_const_lv1_0) && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage4.read()) && 
  esl_seteq<1,1,1>(ap_block_pp0_stage4_11001.read(), ap_const_boolean_0)) || (esl_seteq<1,1,1>(tmp_5_reg_892.read(), ap_const_lv1_0) && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
  esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0)))) {
        reg_329 = grp_fu_318_p2.read();
    }
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
  esl_seteq<1,1,1>(tmp_5_reg_892.read(), ap_const_lv1_0) && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && 
  esl_seteq<1,1,1>(ap_block_pp0_stage2_11001.read(), ap_const_boolean_0)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
  esl_seteq<1,1,1>(tmp_5_reg_892.read(), ap_const_lv1_0) && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage3.read()) && 
  esl_seteq<1,1,1>(ap_block_pp0_stage3_11001.read(), ap_const_boolean_0)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
  esl_seteq<1,1,1>(tmp_5_reg_892.read(), ap_const_lv1_0) && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage4.read()) && 
  esl_seteq<1,1,1>(ap_block_pp0_stage4_11001.read(), ap_const_boolean_0)) || (esl_seteq<1,1,1>(tmp_5_reg_892.read(), ap_const_lv1_0) && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
  esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0)))) {
        reg_335 = grp_fu_324_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_lv1_0, tmp_5_fu_483_p2.read()))) {
        tmp_11_reg_901 = tmp_11_fu_524_p2.read();
        tmp_22_reg_918 = tmp_22_fu_559_p2.read();
    }
    if ((esl_seteq<1,1,1>(tmp_5_reg_892.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage2_11001.read(), ap_const_boolean_0))) {
        tmp_25_reg_957 = tmp_25_fu_627_p2.read();
    }
    if ((esl_seteq<1,1,1>(tmp_5_reg_892.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage3.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage3_11001.read(), ap_const_boolean_0))) {
        tmp_29_reg_973 = tmp_29_fu_681_p2.read();
        tmp_35_reg_979 = tmp_35_fu_685_p2.read();
    }
    if ((esl_seteq<1,1,1>(tmp_5_reg_892.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage4.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage4_11001.read(), ap_const_boolean_0))) {
        tmp_31_reg_995 = tmp_31_fu_727_p2.read();
    }
    if ((esl_seteq<1,1,1>(tmp_5_reg_892.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        tmp_37_reg_1000 = tmp_37_fu_780_p2.read();
    }
}

void deconvolution::thread_ap_CS_fsm_pp0_stage0() {
    ap_CS_fsm_pp0_stage0 = ap_CS_fsm.read()[3];
}

void deconvolution::thread_ap_CS_fsm_pp0_stage1() {
    ap_CS_fsm_pp0_stage1 = ap_CS_fsm.read()[4];
}

void deconvolution::thread_ap_CS_fsm_pp0_stage2() {
    ap_CS_fsm_pp0_stage2 = ap_CS_fsm.read()[5];
}

void deconvolution::thread_ap_CS_fsm_pp0_stage3() {
    ap_CS_fsm_pp0_stage3 = ap_CS_fsm.read()[6];
}

void deconvolution::thread_ap_CS_fsm_pp0_stage4() {
    ap_CS_fsm_pp0_stage4 = ap_CS_fsm.read()[7];
}

void deconvolution::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void deconvolution::thread_ap_CS_fsm_state11() {
    ap_CS_fsm_state11 = ap_CS_fsm.read()[8];
}

void deconvolution::thread_ap_CS_fsm_state2() {
    ap_CS_fsm_state2 = ap_CS_fsm.read()[1];
}

void deconvolution::thread_ap_CS_fsm_state3() {
    ap_CS_fsm_state3 = ap_CS_fsm.read()[2];
}

void deconvolution::thread_ap_block_pp0_stage0() {
    ap_block_pp0_stage0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void deconvolution::thread_ap_block_pp0_stage0_11001() {
    ap_block_pp0_stage0_11001 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void deconvolution::thread_ap_block_pp0_stage0_subdone() {
    ap_block_pp0_stage0_subdone = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void deconvolution::thread_ap_block_pp0_stage1() {
    ap_block_pp0_stage1 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void deconvolution::thread_ap_block_pp0_stage1_11001() {
    ap_block_pp0_stage1_11001 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void deconvolution::thread_ap_block_pp0_stage1_subdone() {
    ap_block_pp0_stage1_subdone = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void deconvolution::thread_ap_block_pp0_stage2() {
    ap_block_pp0_stage2 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void deconvolution::thread_ap_block_pp0_stage2_11001() {
    ap_block_pp0_stage2_11001 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void deconvolution::thread_ap_block_pp0_stage2_subdone() {
    ap_block_pp0_stage2_subdone = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void deconvolution::thread_ap_block_pp0_stage3() {
    ap_block_pp0_stage3 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void deconvolution::thread_ap_block_pp0_stage3_11001() {
    ap_block_pp0_stage3_11001 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void deconvolution::thread_ap_block_pp0_stage3_subdone() {
    ap_block_pp0_stage3_subdone = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void deconvolution::thread_ap_block_pp0_stage4() {
    ap_block_pp0_stage4 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void deconvolution::thread_ap_block_pp0_stage4_11001() {
    ap_block_pp0_stage4_11001 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void deconvolution::thread_ap_block_pp0_stage4_subdone() {
    ap_block_pp0_stage4_subdone = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void deconvolution::thread_ap_block_state10_pp0_stage1_iter1() {
    ap_block_state10_pp0_stage1_iter1 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void deconvolution::thread_ap_block_state4_pp0_stage0_iter0() {
    ap_block_state4_pp0_stage0_iter0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void deconvolution::thread_ap_block_state5_pp0_stage1_iter0() {
    ap_block_state5_pp0_stage1_iter0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void deconvolution::thread_ap_block_state6_pp0_stage2_iter0() {
    ap_block_state6_pp0_stage2_iter0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void deconvolution::thread_ap_block_state7_pp0_stage3_iter0() {
    ap_block_state7_pp0_stage3_iter0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void deconvolution::thread_ap_block_state8_pp0_stage4_iter0() {
    ap_block_state8_pp0_stage4_iter0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void deconvolution::thread_ap_block_state9_pp0_stage0_iter1() {
    ap_block_state9_pp0_stage0_iter1 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void deconvolution::thread_ap_condition_pp0_exit_iter0_state4() {
    if (esl_seteq<1,1,1>(tmp_5_fu_483_p2.read(), ap_const_lv1_1)) {
        ap_condition_pp0_exit_iter0_state4 = ap_const_logic_1;
    } else {
        ap_condition_pp0_exit_iter0_state4 = ap_const_logic_0;
    }
}

void deconvolution::thread_ap_done() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(exitcond_flatten_fu_341_p2.read(), ap_const_lv1_1))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void deconvolution::thread_ap_enable_pp0() {
    ap_enable_pp0 = (ap_idle_pp0.read() ^ ap_const_logic_1);
}

void deconvolution::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void deconvolution::thread_ap_idle_pp0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter1.read()))) {
        ap_idle_pp0 = ap_const_logic_1;
    } else {
        ap_idle_pp0 = ap_const_logic_0;
    }
}

void deconvolution::thread_ap_ready() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(exitcond_flatten_fu_341_p2.read(), ap_const_lv1_1))) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void deconvolution::thread_exitcond_flatten_fu_341_p2() {
    exitcond_flatten_fu_341_p2 = (!indvar_flatten_reg_263.read().is_01() || !ap_const_lv8_80.is_01())? sc_lv<1>(): sc_lv<1>(indvar_flatten_reg_263.read() == ap_const_lv8_80);
}

void deconvolution::thread_grp_fu_318_p0() {
    grp_fu_318_p0 = kernel_V_q0.read();
}

void deconvolution::thread_grp_fu_318_p1() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage2.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage3.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage3.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage4.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage4.read(), ap_const_boolean_0)))) {
        grp_fu_318_p1 = ifeat_V_load_reg_941.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
                esl_seteq<1,1,1>(ap_block_pp0_stage1.read(), ap_const_boolean_0))) {
        grp_fu_318_p1 = ifeat_V_q0.read();
    } else {
        grp_fu_318_p1 = "XXXXXXXX";
    }
}

void deconvolution::thread_grp_fu_318_p2() {
    grp_fu_318_p2 = (!grp_fu_318_p0.read().is_01() || !grp_fu_318_p1.read().is_01())? sc_lv<8>(): sc_bigint<8>(grp_fu_318_p0.read()) * sc_bigint<8>(grp_fu_318_p1.read());
}

void deconvolution::thread_grp_fu_324_p0() {
    grp_fu_324_p0 = kernel_V_q1.read();
}

void deconvolution::thread_grp_fu_324_p2() {
    grp_fu_324_p2 = (!grp_fu_324_p0.read().is_01() || !ifeat_V_load_reg_941.read().is_01())? sc_lv<8>(): sc_bigint<8>(grp_fu_324_p0.read()) * sc_bigint<8>(ifeat_V_load_reg_941.read());
}

void deconvolution::thread_ic_1_fu_445_p2() {
    ic_1_fu_445_p2 = (!ic_reg_296.read().is_01() || !ap_const_lv5_1.is_01())? sc_lv<5>(): (sc_biguint<5>(ic_reg_296.read()) + sc_biguint<5>(ap_const_lv5_1));
}

void deconvolution::thread_ic_cast2_cast1_fu_451_p1() {
    ic_cast2_cast1_fu_451_p1 = esl_zext<14,5>(ic_reg_296.read());
}

void deconvolution::thread_ic_cast2_cast_fu_455_p1() {
    ic_cast2_cast_fu_455_p1 = esl_zext<13,5>(ic_reg_296.read());
}

void deconvolution::thread_id_1_fu_353_p2() {
    id_1_fu_353_p2 = (!id_reg_274.read().is_01() || !ap_const_lv4_1.is_01())? sc_lv<4>(): (sc_biguint<4>(id_reg_274.read()) + sc_biguint<4>(ap_const_lv4_1));
}

void deconvolution::thread_id_cast4_mid2_cast_fu_381_p1() {
    id_cast4_mid2_cast_fu_381_p1 = esl_zext<9,4>(id_cast4_mid2_v_fu_373_p3.read());
}

void deconvolution::thread_id_cast4_mid2_v_fu_373_p3() {
    id_cast4_mid2_v_fu_373_p3 = (!tmp_1_8_fu_359_p2.read()[0].is_01())? sc_lv<4>(): ((tmp_1_8_fu_359_p2.read()[0].to_bool())? id_1_fu_353_p2.read(): id_reg_274.read());
}

void deconvolution::thread_ifeat_V_address0() {
    ifeat_V_address0 = ifeat_V_addr_reg_873.read();
}

void deconvolution::thread_ifeat_V_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        ifeat_V_ce0 = ap_const_logic_1;
    } else {
        ifeat_V_ce0 = ap_const_logic_0;
    }
}

void deconvolution::thread_indvar_flatten_next_fu_347_p2() {
    indvar_flatten_next_fu_347_p2 = (!indvar_flatten_reg_263.read().is_01() || !ap_const_lv8_1.is_01())? sc_lv<8>(): (sc_biguint<8>(indvar_flatten_reg_263.read()) + sc_biguint<8>(ap_const_lv8_1));
}

void deconvolution::thread_ir_1_fu_419_p2() {
    ir_1_fu_419_p2 = (!ir_mid2_fu_365_p3.read().is_01() || !ap_const_lv5_1.is_01())? sc_lv<5>(): (sc_biguint<5>(ir_mid2_fu_365_p3.read()) + sc_biguint<5>(ap_const_lv5_1));
}

void deconvolution::thread_ir_cast3_cast1_fu_397_p1() {
    ir_cast3_cast1_fu_397_p1 = esl_zext<10,5>(ir_mid2_fu_365_p3.read());
}

void deconvolution::thread_ir_cast3_cast_fu_401_p1() {
    ir_cast3_cast_fu_401_p1 = esl_zext<9,5>(ir_mid2_fu_365_p3.read());
}

void deconvolution::thread_ir_mid2_fu_365_p3() {
    ir_mid2_fu_365_p3 = (!tmp_1_8_fu_359_p2.read()[0].is_01())? sc_lv<5>(): ((tmp_1_8_fu_359_p2.read()[0].to_bool())? ap_const_lv5_0: ir_reg_285.read());
}

void deconvolution::thread_kernel_V_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read())) {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage4.read()) && 
             esl_seteq<1,1,1>(ap_block_pp0_stage4.read(), ap_const_boolean_0))) {
            kernel_V_address0 =  (sc_lv<11>) (tmp_24_cast_fu_704_p1.read());
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage3.read()) && 
                    esl_seteq<1,1,1>(ap_block_pp0_stage3.read(), ap_const_boolean_0))) {
            kernel_V_address0 =  (sc_lv<11>) (tmp_22_cast_fu_658_p1.read());
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && 
                    esl_seteq<1,1,1>(ap_block_pp0_stage2.read(), ap_const_boolean_0))) {
            kernel_V_address0 =  (sc_lv<11>) (tmp_20_cast_fu_604_p1.read());
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
                    esl_seteq<1,1,1>(ap_block_pp0_stage1.read(), ap_const_boolean_0))) {
            kernel_V_address0 =  (sc_lv<11>) (tmp_17_cast_fu_570_p1.read());
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
                    esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0))) {
            kernel_V_address0 =  (sc_lv<11>) (tmp_16_cast_fu_530_p1.read());
        } else {
            kernel_V_address0 =  (sc_lv<11>) ("XXXXXXXXXXX");
        }
    } else {
        kernel_V_address0 =  (sc_lv<11>) ("XXXXXXXXXXX");
    }
}

void deconvolution::thread_kernel_V_address1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read())) {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage4.read()) && 
             esl_seteq<1,1,1>(ap_block_pp0_stage4.read(), ap_const_boolean_0))) {
            kernel_V_address1 =  (sc_lv<11>) (tmp_23_cast_fu_694_p1.read());
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage3.read()) && 
                    esl_seteq<1,1,1>(ap_block_pp0_stage3.read(), ap_const_boolean_0))) {
            kernel_V_address1 =  (sc_lv<11>) (tmp_21_cast_fu_648_p1.read());
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && 
                    esl_seteq<1,1,1>(ap_block_pp0_stage2.read(), ap_const_boolean_0))) {
            kernel_V_address1 =  (sc_lv<11>) (tmp_19_cast_fu_594_p1.read());
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
                    esl_seteq<1,1,1>(ap_block_pp0_stage1.read(), ap_const_boolean_0))) {
            kernel_V_address1 =  (sc_lv<11>) (tmp_18_cast_fu_580_p1.read());
        } else {
            kernel_V_address1 =  (sc_lv<11>) ("XXXXXXXXXXX");
        }
    } else {
        kernel_V_address1 =  (sc_lv<11>) ("XXXXXXXXXXX");
    }
}

void deconvolution::thread_kernel_V_ce0() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage1_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage2_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage3.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage3_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage4.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage4_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0)))) {
        kernel_V_ce0 = ap_const_logic_1;
    } else {
        kernel_V_ce0 = ap_const_logic_0;
    }
}

void deconvolution::thread_kernel_V_ce1() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage1_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage2_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage3.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage3_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage4.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage4_11001.read(), ap_const_boolean_0)))) {
        kernel_V_ce1 = ap_const_logic_1;
    } else {
        kernel_V_ce1 = ap_const_logic_0;
    }
}

void deconvolution::thread_oc_1_fu_489_p2() {
    oc_1_fu_489_p2 = (!oc_phi_fu_311_p4.read().is_01() || !ap_const_lv5_1.is_01())? sc_lv<5>(): (sc_biguint<5>(oc_phi_fu_311_p4.read()) + sc_biguint<5>(ap_const_lv5_1));
}

void deconvolution::thread_oc_phi_fu_311_p4() {
    if ((esl_seteq<1,1,1>(tmp_5_reg_892.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0))) {
        oc_phi_fu_311_p4 = oc_1_reg_896.read();
    } else {
        oc_phi_fu_311_p4 = oc_reg_307.read();
    }
}

void deconvolution::thread_ofeat_V_address0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage1.read(), ap_const_boolean_0))) {
        ofeat_V_address0 =  (sc_lv<13>) (tmp_47_cast_fu_800_p1.read());
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
                esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0))) {
        ofeat_V_address0 =  (sc_lv<13>) (tmp_41_cast_fu_757_p1.read());
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage4.read()) && 
                esl_seteq<1,1,1>(ap_block_pp0_stage4.read(), ap_const_boolean_0))) {
        ofeat_V_address0 =  (sc_lv<13>) (tmp_40_cast_fu_748_p1.read());
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage3.read()) && 
                esl_seteq<1,1,1>(ap_block_pp0_stage3.read(), ap_const_boolean_0))) {
        ofeat_V_address0 =  (sc_lv<13>) (tmp_34_cast_fu_676_p1.read());
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && 
                esl_seteq<1,1,1>(ap_block_pp0_stage2.read(), ap_const_boolean_0))) {
        ofeat_V_address0 =  (sc_lv<13>) (tmp_32_cast_fu_638_p1.read());
    } else {
        ofeat_V_address0 =  (sc_lv<13>) ("XXXXXXXXXXXXX");
    }
}

void deconvolution::thread_ofeat_V_address1() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage1.read(), ap_const_boolean_0))) {
        ofeat_V_address1 =  (sc_lv<13>) (tmp_48_cast_fu_809_p1.read());
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
                esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0))) {
        ofeat_V_address1 =  (sc_lv<13>) (tmp_46_cast_fu_791_p1.read());
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage4.read()) && 
                esl_seteq<1,1,1>(ap_block_pp0_stage4.read(), ap_const_boolean_0))) {
        ofeat_V_address1 =  (sc_lv<13>) (tmp_39_cast_fu_738_p1.read());
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage3.read()) && 
                esl_seteq<1,1,1>(ap_block_pp0_stage3.read(), ap_const_boolean_0))) {
        ofeat_V_address1 =  (sc_lv<13>) (tmp_33_cast_fu_667_p1.read());
    } else {
        ofeat_V_address1 =  (sc_lv<13>) ("XXXXXXXXXXXXX");
    }
}

void deconvolution::thread_ofeat_V_ce0() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage2_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage3.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage3_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage4.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage4_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage1_11001.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read())))) {
        ofeat_V_ce0 = ap_const_logic_1;
    } else {
        ofeat_V_ce0 = ap_const_logic_0;
    }
}

void deconvolution::thread_ofeat_V_ce1() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage3.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage3_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage4.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage4_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage1_11001.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read())))) {
        ofeat_V_ce1 = ap_const_logic_1;
    } else {
        ofeat_V_ce1 = ap_const_logic_0;
    }
}

void deconvolution::thread_ofeat_V_d0() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage3.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage3.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage1.read(), ap_const_boolean_0)))) {
        ofeat_V_d0 = reg_335.read();
    } else if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
                 esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && 
                 esl_seteq<1,1,1>(ap_block_pp0_stage2.read(), ap_const_boolean_0)) || 
                (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
                 esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage4.read()) && 
                 esl_seteq<1,1,1>(ap_block_pp0_stage4.read(), ap_const_boolean_0)))) {
        ofeat_V_d0 = reg_329.read();
    } else {
        ofeat_V_d0 = "XXXXXXXX";
    }
}

void deconvolution::thread_ofeat_V_d1() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage4.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage4.read(), ap_const_boolean_0))) {
        ofeat_V_d1 = reg_335.read();
    } else if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
                 esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
                 esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0)) || 
                (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
                 esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage3.read()) && 
                 esl_seteq<1,1,1>(ap_block_pp0_stage3.read(), ap_const_boolean_0)) || 
                (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
                 esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
                 esl_seteq<1,1,1>(ap_block_pp0_stage1.read(), ap_const_boolean_0)))) {
        ofeat_V_d1 = reg_329.read();
    } else {
        ofeat_V_d1 = "XXXXXXXX";
    }
}

void deconvolution::thread_ofeat_V_we0() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(tmp_5_reg_892.read(), ap_const_lv1_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage2_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(tmp_5_reg_892.read(), ap_const_lv1_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage3.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage3_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(tmp_5_reg_892.read(), ap_const_lv1_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage4.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage4_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(tmp_5_reg_892.read(), ap_const_lv1_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage1_11001.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, ap_reg_pp0_iter1_tmp_5_reg_892.read())))) {
        ofeat_V_we0 = ap_const_logic_1;
    } else {
        ofeat_V_we0 = ap_const_logic_0;
    }
}

void deconvolution::thread_ofeat_V_we1() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(tmp_5_reg_892.read(), ap_const_lv1_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage3.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage3_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(tmp_5_reg_892.read(), ap_const_lv1_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage4.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage4_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(tmp_5_reg_892.read(), ap_const_lv1_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage1_11001.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, ap_reg_pp0_iter1_tmp_5_reg_892.read())))) {
        ofeat_V_we1 = ap_const_logic_1;
    } else {
        ofeat_V_we1 = ap_const_logic_0;
    }
}

void deconvolution::thread_p_oc_0_1_cast_cast_fu_469_p1() {
    p_oc_0_1_cast_cast_fu_469_p1 = esl_zext<14,5>(ic_1_fu_445_p2.read());
}

void deconvolution::thread_p_oc_0_2_cast_cast_fu_479_p1() {
    p_oc_0_2_cast_cast_fu_479_p1 = esl_zext<14,5>(p_oc_0_2_fu_473_p2.read());
}

void deconvolution::thread_p_oc_0_2_fu_473_p2() {
    p_oc_0_2_fu_473_p2 = (!ic_reg_296.read().is_01() || !ap_const_lv5_2.is_01())? sc_lv<5>(): (sc_biguint<5>(ic_reg_296.read()) + sc_biguint<5>(ap_const_lv5_2));
}

void deconvolution::thread_p_or_1_cast_cast_fu_425_p1() {
    p_or_1_cast_cast_fu_425_p1 = esl_zext<10,5>(ir_1_fu_419_p2.read());
}

void deconvolution::thread_p_or_2_cast_cast_fu_435_p1() {
    p_or_2_cast_cast_fu_435_p1 = esl_zext<10,5>(p_or_2_fu_429_p2.read());
}

void deconvolution::thread_p_or_2_fu_429_p2() {
    p_or_2_fu_429_p2 = (!ir_mid2_fu_365_p3.read().is_01() || !ap_const_lv5_2.is_01())? sc_lv<5>(): (sc_biguint<5>(ir_mid2_fu_365_p3.read()) + sc_biguint<5>(ap_const_lv5_2));
}

void deconvolution::thread_p_shl1_cast_fu_776_p1() {
    p_shl1_cast_fu_776_p1 = esl_zext<14,11>(tmp_36_fu_769_p3.read());
}

void deconvolution::thread_p_shl2_cast_fu_709_p3() {
    p_shl2_cast_fu_709_p3 = esl_concat<10,4>(tmp_29_reg_973.read(), ap_const_lv4_0);
}

void deconvolution::thread_p_shl3_cast_fu_723_p1() {
    p_shl3_cast_fu_723_p1 = esl_zext<14,11>(tmp_30_fu_716_p3.read());
}

void deconvolution::thread_p_shl4_cast_fu_609_p3() {
    p_shl4_cast_fu_609_p3 = esl_concat<10,4>(tmp_23_reg_935.read(), ap_const_lv4_0);
}

void deconvolution::thread_p_shl5_cast_fu_623_p1() {
    p_shl5_cast_fu_623_p1 = esl_zext<14,11>(tmp_24_fu_616_p3.read());
}

void deconvolution::thread_p_shl6_cast_fu_543_p1() {
    p_shl6_cast_fu_543_p1 = esl_zext<10,9>(tmp_20_fu_535_p3.read());
}

void deconvolution::thread_p_shl7_cast_fu_555_p1() {
    p_shl7_cast_fu_555_p1 = esl_zext<10,6>(tmp_21_fu_547_p3.read());
}

void deconvolution::thread_p_shl8_cast_fu_516_p3() {
    p_shl8_cast_fu_516_p3 = esl_concat<9,3>(tmp_10_fu_507_p2.read(), ap_const_lv3_0);
}

void deconvolution::thread_p_shl_cast_fu_762_p3() {
    p_shl_cast_fu_762_p3 = esl_concat<10,4>(tmp_35_reg_979.read(), ap_const_lv4_0);
}

void deconvolution::thread_tmp_10_cast_fu_411_p3() {
    tmp_10_cast_fu_411_p3 = esl_concat<9,4>(tmp_8_fu_405_p2.read(), ap_const_lv4_0);
}

void deconvolution::thread_tmp_10_fu_507_p2() {
    tmp_10_fu_507_p2 = (!id_cast4_mid2_cast_reg_827.read().is_01() || !tmp_13_cast_fu_503_p1.read().is_01())? sc_lv<9>(): (sc_biguint<9>(id_cast4_mid2_cast_reg_827.read()) + sc_biguint<9>(tmp_13_cast_fu_503_p1.read()));
}

void deconvolution::thread_tmp_11_cast_fu_464_p1() {
    tmp_11_cast_fu_464_p1 = esl_zext<32,13>(tmp_2_fu_459_p2.read());
}

void deconvolution::thread_tmp_11_fu_524_p2() {
    tmp_11_fu_524_p2 = (!p_shl8_cast_fu_516_p3.read().is_01() || !tmp_14_cast_fu_512_p1.read().is_01())? sc_lv<12>(): (sc_biguint<12>(p_shl8_cast_fu_516_p3.read()) + sc_biguint<12>(tmp_14_cast_fu_512_p1.read()));
}

void deconvolution::thread_tmp_12_fu_565_p2() {
    tmp_12_fu_565_p2 = (!tmp_11_reg_901.read().is_01() || !ap_const_lv12_1.is_01())? sc_lv<12>(): (sc_biguint<12>(tmp_11_reg_901.read()) + sc_biguint<12>(ap_const_lv12_1));
}

void deconvolution::thread_tmp_13_cast_fu_503_p1() {
    tmp_13_cast_fu_503_p1 = esl_zext<9,8>(tmp_9_fu_495_p3.read());
}

void deconvolution::thread_tmp_13_fu_575_p2() {
    tmp_13_fu_575_p2 = (!tmp_11_reg_901.read().is_01() || !ap_const_lv12_2.is_01())? sc_lv<12>(): (sc_biguint<12>(tmp_11_reg_901.read()) + sc_biguint<12>(ap_const_lv12_2));
}

void deconvolution::thread_tmp_14_cast_fu_512_p1() {
    tmp_14_cast_fu_512_p1 = esl_zext<12,9>(tmp_10_fu_507_p2.read());
}

void deconvolution::thread_tmp_14_fu_589_p2() {
    tmp_14_fu_589_p2 = (!tmp_11_reg_901.read().is_01() || !ap_const_lv12_3.is_01())? sc_lv<12>(): (sc_biguint<12>(tmp_11_reg_901.read()) + sc_biguint<12>(ap_const_lv12_3));
}

void deconvolution::thread_tmp_15_fu_599_p2() {
    tmp_15_fu_599_p2 = (!tmp_11_reg_901.read().is_01() || !ap_const_lv12_4.is_01())? sc_lv<12>(): (sc_biguint<12>(tmp_11_reg_901.read()) + sc_biguint<12>(ap_const_lv12_4));
}

void deconvolution::thread_tmp_16_cast_fu_530_p1() {
    tmp_16_cast_fu_530_p1 = esl_zext<32,12>(tmp_11_fu_524_p2.read());
}

void deconvolution::thread_tmp_16_fu_643_p2() {
    tmp_16_fu_643_p2 = (!tmp_11_reg_901.read().is_01() || !ap_const_lv12_5.is_01())? sc_lv<12>(): (sc_biguint<12>(tmp_11_reg_901.read()) + sc_biguint<12>(ap_const_lv12_5));
}

void deconvolution::thread_tmp_17_cast_fu_570_p1() {
    tmp_17_cast_fu_570_p1 = esl_zext<32,12>(tmp_12_fu_565_p2.read());
}

void deconvolution::thread_tmp_17_fu_653_p2() {
    tmp_17_fu_653_p2 = (!tmp_11_reg_901.read().is_01() || !ap_const_lv12_6.is_01())? sc_lv<12>(): (sc_biguint<12>(tmp_11_reg_901.read()) + sc_biguint<12>(ap_const_lv12_6));
}

void deconvolution::thread_tmp_18_cast_fu_580_p1() {
    tmp_18_cast_fu_580_p1 = esl_zext<32,12>(tmp_13_fu_575_p2.read());
}

void deconvolution::thread_tmp_18_fu_689_p2() {
    tmp_18_fu_689_p2 = (!tmp_11_reg_901.read().is_01() || !ap_const_lv12_7.is_01())? sc_lv<12>(): (sc_biguint<12>(tmp_11_reg_901.read()) + sc_biguint<12>(ap_const_lv12_7));
}

void deconvolution::thread_tmp_19_cast_fu_594_p1() {
    tmp_19_cast_fu_594_p1 = esl_zext<32,12>(tmp_14_fu_589_p2.read());
}

void deconvolution::thread_tmp_19_fu_699_p2() {
    tmp_19_fu_699_p2 = (!tmp_11_reg_901.read().is_01() || !ap_const_lv12_8.is_01())? sc_lv<12>(): (sc_biguint<12>(tmp_11_reg_901.read()) + sc_biguint<12>(ap_const_lv12_8));
}

void deconvolution::thread_tmp_1_8_fu_359_p2() {
    tmp_1_8_fu_359_p2 = (!ir_reg_285.read().is_01() || !ap_const_lv5_10.is_01())? sc_lv<1>(): sc_lv<1>(ir_reg_285.read() == ap_const_lv5_10);
}

void deconvolution::thread_tmp_20_cast_fu_604_p1() {
    tmp_20_cast_fu_604_p1 = esl_zext<32,12>(tmp_15_fu_599_p2.read());
}

void deconvolution::thread_tmp_20_fu_535_p3() {
    tmp_20_fu_535_p3 = esl_concat<5,4>(oc_phi_fu_311_p4.read(), ap_const_lv4_0);
}

void deconvolution::thread_tmp_21_cast_fu_648_p1() {
    tmp_21_cast_fu_648_p1 = esl_zext<32,12>(tmp_16_fu_643_p2.read());
}

void deconvolution::thread_tmp_21_fu_547_p3() {
    tmp_21_fu_547_p3 = esl_concat<5,1>(oc_phi_fu_311_p4.read(), ap_const_lv1_0);
}

void deconvolution::thread_tmp_22_cast_fu_658_p1() {
    tmp_22_cast_fu_658_p1 = esl_zext<32,12>(tmp_17_fu_653_p2.read());
}

void deconvolution::thread_tmp_22_fu_559_p2() {
    tmp_22_fu_559_p2 = (!p_shl6_cast_fu_543_p1.read().is_01() || !p_shl7_cast_fu_555_p1.read().is_01())? sc_lv<10>(): (sc_biguint<10>(p_shl6_cast_fu_543_p1.read()) + sc_biguint<10>(p_shl7_cast_fu_555_p1.read()));
}

void deconvolution::thread_tmp_23_cast_fu_694_p1() {
    tmp_23_cast_fu_694_p1 = esl_zext<32,12>(tmp_18_fu_689_p2.read());
}

void deconvolution::thread_tmp_23_fu_585_p2() {
    tmp_23_fu_585_p2 = (!ir_cast3_cast1_reg_832.read().is_01() || !tmp_22_reg_918.read().is_01())? sc_lv<10>(): (sc_biguint<10>(ir_cast3_cast1_reg_832.read()) + sc_biguint<10>(tmp_22_reg_918.read()));
}

void deconvolution::thread_tmp_24_cast_fu_704_p1() {
    tmp_24_cast_fu_704_p1 = esl_zext<32,12>(tmp_19_fu_699_p2.read());
}

void deconvolution::thread_tmp_24_fu_616_p3() {
    tmp_24_fu_616_p3 = esl_concat<10,1>(tmp_23_reg_935.read(), ap_const_lv1_0);
}

void deconvolution::thread_tmp_25_fu_627_p2() {
    tmp_25_fu_627_p2 = (!p_shl4_cast_fu_609_p3.read().is_01() || !p_shl5_cast_fu_623_p1.read().is_01())? sc_lv<14>(): (sc_biguint<14>(p_shl4_cast_fu_609_p3.read()) + sc_biguint<14>(p_shl5_cast_fu_623_p1.read()));
}

void deconvolution::thread_tmp_26_fu_633_p2() {
    tmp_26_fu_633_p2 = (!ic_cast2_cast1_reg_866.read().is_01() || !tmp_25_fu_627_p2.read().is_01())? sc_lv<14>(): (sc_biguint<14>(ic_cast2_cast1_reg_866.read()) + sc_biguint<14>(tmp_25_fu_627_p2.read()));
}

void deconvolution::thread_tmp_27_fu_663_p2() {
    tmp_27_fu_663_p2 = (!p_oc_0_1_cast_cast_reg_878.read().is_01() || !tmp_25_reg_957.read().is_01())? sc_lv<14>(): (sc_biguint<14>(p_oc_0_1_cast_cast_reg_878.read()) + sc_biguint<14>(tmp_25_reg_957.read()));
}

void deconvolution::thread_tmp_28_fu_672_p2() {
    tmp_28_fu_672_p2 = (!p_oc_0_2_cast_cast_reg_885.read().is_01() || !tmp_25_reg_957.read().is_01())? sc_lv<14>(): (sc_biguint<14>(p_oc_0_2_cast_cast_reg_885.read()) + sc_biguint<14>(tmp_25_reg_957.read()));
}

void deconvolution::thread_tmp_29_fu_681_p2() {
    tmp_29_fu_681_p2 = (!p_or_1_cast_cast_reg_847.read().is_01() || !tmp_22_reg_918.read().is_01())? sc_lv<10>(): (sc_biguint<10>(p_or_1_cast_cast_reg_847.read()) + sc_biguint<10>(tmp_22_reg_918.read()));
}

void deconvolution::thread_tmp_2_cast_fu_393_p1() {
    tmp_2_cast_fu_393_p1 = esl_zext<9,8>(tmp_fu_385_p3.read());
}

void deconvolution::thread_tmp_2_fu_459_p2() {
    tmp_2_fu_459_p2 = (!tmp_10_cast_reg_837.read().is_01() || !ic_cast2_cast_fu_455_p1.read().is_01())? sc_lv<13>(): (sc_biguint<13>(tmp_10_cast_reg_837.read()) + sc_biguint<13>(ic_cast2_cast_fu_455_p1.read()));
}

void deconvolution::thread_tmp_30_fu_716_p3() {
    tmp_30_fu_716_p3 = esl_concat<10,1>(tmp_29_reg_973.read(), ap_const_lv1_0);
}

void deconvolution::thread_tmp_31_fu_727_p2() {
    tmp_31_fu_727_p2 = (!p_shl2_cast_fu_709_p3.read().is_01() || !p_shl3_cast_fu_723_p1.read().is_01())? sc_lv<14>(): (sc_biguint<14>(p_shl2_cast_fu_709_p3.read()) + sc_biguint<14>(p_shl3_cast_fu_723_p1.read()));
}

void deconvolution::thread_tmp_32_cast_fu_638_p1() {
    tmp_32_cast_fu_638_p1 = esl_zext<32,14>(tmp_26_fu_633_p2.read());
}

void deconvolution::thread_tmp_32_fu_733_p2() {
    tmp_32_fu_733_p2 = (!ic_cast2_cast1_reg_866.read().is_01() || !tmp_31_fu_727_p2.read().is_01())? sc_lv<14>(): (sc_biguint<14>(ic_cast2_cast1_reg_866.read()) + sc_biguint<14>(tmp_31_fu_727_p2.read()));
}

void deconvolution::thread_tmp_33_cast_fu_667_p1() {
    tmp_33_cast_fu_667_p1 = esl_zext<32,14>(tmp_27_fu_663_p2.read());
}

void deconvolution::thread_tmp_33_fu_743_p2() {
    tmp_33_fu_743_p2 = (!p_oc_0_1_cast_cast_reg_878.read().is_01() || !tmp_31_fu_727_p2.read().is_01())? sc_lv<14>(): (sc_biguint<14>(p_oc_0_1_cast_cast_reg_878.read()) + sc_biguint<14>(tmp_31_fu_727_p2.read()));
}

void deconvolution::thread_tmp_34_cast_fu_676_p1() {
    tmp_34_cast_fu_676_p1 = esl_zext<32,14>(tmp_28_fu_672_p2.read());
}

void deconvolution::thread_tmp_34_fu_753_p2() {
    tmp_34_fu_753_p2 = (!p_oc_0_2_cast_cast_reg_885.read().is_01() || !tmp_31_reg_995.read().is_01())? sc_lv<14>(): (sc_biguint<14>(p_oc_0_2_cast_cast_reg_885.read()) + sc_biguint<14>(tmp_31_reg_995.read()));
}

void deconvolution::thread_tmp_35_fu_685_p2() {
    tmp_35_fu_685_p2 = (!p_or_2_cast_cast_reg_852.read().is_01() || !tmp_22_reg_918.read().is_01())? sc_lv<10>(): (sc_biguint<10>(p_or_2_cast_cast_reg_852.read()) + sc_biguint<10>(tmp_22_reg_918.read()));
}

void deconvolution::thread_tmp_36_fu_769_p3() {
    tmp_36_fu_769_p3 = esl_concat<10,1>(tmp_35_reg_979.read(), ap_const_lv1_0);
}

void deconvolution::thread_tmp_37_fu_780_p2() {
    tmp_37_fu_780_p2 = (!p_shl_cast_fu_762_p3.read().is_01() || !p_shl1_cast_fu_776_p1.read().is_01())? sc_lv<14>(): (sc_biguint<14>(p_shl_cast_fu_762_p3.read()) + sc_biguint<14>(p_shl1_cast_fu_776_p1.read()));
}

void deconvolution::thread_tmp_38_fu_786_p2() {
    tmp_38_fu_786_p2 = (!ic_cast2_cast1_reg_866.read().is_01() || !tmp_37_fu_780_p2.read().is_01())? sc_lv<14>(): (sc_biguint<14>(ic_cast2_cast1_reg_866.read()) + sc_biguint<14>(tmp_37_fu_780_p2.read()));
}

void deconvolution::thread_tmp_39_cast_fu_738_p1() {
    tmp_39_cast_fu_738_p1 = esl_zext<32,14>(tmp_32_fu_733_p2.read());
}

void deconvolution::thread_tmp_39_fu_796_p2() {
    tmp_39_fu_796_p2 = (!p_oc_0_1_cast_cast_reg_878.read().is_01() || !tmp_37_reg_1000.read().is_01())? sc_lv<14>(): (sc_biguint<14>(p_oc_0_1_cast_cast_reg_878.read()) + sc_biguint<14>(tmp_37_reg_1000.read()));
}

void deconvolution::thread_tmp_3_fu_439_p2() {
    tmp_3_fu_439_p2 = (!ic_reg_296.read().is_01() || !ap_const_lv5_10.is_01())? sc_lv<1>(): sc_lv<1>(ic_reg_296.read() == ap_const_lv5_10);
}

void deconvolution::thread_tmp_40_cast_fu_748_p1() {
    tmp_40_cast_fu_748_p1 = esl_zext<32,14>(tmp_33_fu_743_p2.read());
}

void deconvolution::thread_tmp_40_fu_805_p2() {
    tmp_40_fu_805_p2 = (!p_oc_0_2_cast_cast_reg_885.read().is_01() || !tmp_37_reg_1000.read().is_01())? sc_lv<14>(): (sc_biguint<14>(p_oc_0_2_cast_cast_reg_885.read()) + sc_biguint<14>(tmp_37_reg_1000.read()));
}

void deconvolution::thread_tmp_41_cast_fu_757_p1() {
    tmp_41_cast_fu_757_p1 = esl_zext<32,14>(tmp_34_fu_753_p2.read());
}

void deconvolution::thread_tmp_46_cast_fu_791_p1() {
    tmp_46_cast_fu_791_p1 = esl_zext<32,14>(tmp_38_fu_786_p2.read());
}

void deconvolution::thread_tmp_47_cast_fu_800_p1() {
    tmp_47_cast_fu_800_p1 = esl_zext<32,14>(tmp_39_fu_796_p2.read());
}

void deconvolution::thread_tmp_48_cast_fu_809_p1() {
    tmp_48_cast_fu_809_p1 = esl_zext<32,14>(tmp_40_fu_805_p2.read());
}

void deconvolution::thread_tmp_5_fu_483_p2() {
    tmp_5_fu_483_p2 = (!oc_phi_fu_311_p4.read().is_01() || !ap_const_lv5_10.is_01())? sc_lv<1>(): sc_lv<1>(oc_phi_fu_311_p4.read() == ap_const_lv5_10);
}

void deconvolution::thread_tmp_8_fu_405_p2() {
    tmp_8_fu_405_p2 = (!ir_cast3_cast_fu_401_p1.read().is_01() || !tmp_2_cast_fu_393_p1.read().is_01())? sc_lv<9>(): (sc_biguint<9>(ir_cast3_cast_fu_401_p1.read()) + sc_biguint<9>(tmp_2_cast_fu_393_p1.read()));
}

void deconvolution::thread_tmp_9_fu_495_p3() {
    tmp_9_fu_495_p3 = esl_concat<5,3>(oc_phi_fu_311_p4.read(), ap_const_lv3_0);
}

void deconvolution::thread_tmp_fu_385_p3() {
    tmp_fu_385_p3 = esl_concat<4,4>(id_cast4_mid2_v_fu_373_p3.read(), ap_const_lv4_0);
}

void deconvolution::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(exitcond_flatten_fu_341_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state1;
            } else {
                ap_NS_fsm = ap_ST_fsm_state3;
            }
            break;
        case 4 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && esl_seteq<1,1,1>(tmp_3_fu_439_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            }
            break;
        case 8 : 
            if ((esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && !(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(tmp_5_fu_483_p2.read(), ap_const_lv1_1) && esl_seteq<1,1,1>(ap_enable_reg_pp0_iter1.read(), ap_const_logic_0)))) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(tmp_5_fu_483_p2.read(), ap_const_lv1_1) && esl_seteq<1,1,1>(ap_enable_reg_pp0_iter1.read(), ap_const_logic_0))) {
                ap_NS_fsm = ap_ST_fsm_state11;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            }
            break;
        case 16 : 
            if ((esl_seteq<1,1,1>(ap_block_pp0_stage1_subdone.read(), ap_const_boolean_0) && !(esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage1_subdone.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_enable_reg_pp0_iter0.read(), ap_const_logic_0)))) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage1_subdone.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_enable_reg_pp0_iter0.read(), ap_const_logic_0))) {
                ap_NS_fsm = ap_ST_fsm_state11;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            }
            break;
        case 32 : 
            if (esl_seteq<1,1,1>(ap_block_pp0_stage2_subdone.read(), ap_const_boolean_0)) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            }
            break;
        case 64 : 
            if (esl_seteq<1,1,1>(ap_block_pp0_stage3_subdone.read(), ap_const_boolean_0)) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage4;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            }
            break;
        case 128 : 
            if (esl_seteq<1,1,1>(ap_block_pp0_stage4_subdone.read(), ap_const_boolean_0)) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp0_stage4;
            }
            break;
        case 256 : 
            ap_NS_fsm = ap_ST_fsm_state3;
            break;
        default : 
            ap_NS_fsm =  (sc_lv<9>) ("XXXXXXXXX");
            break;
    }
}

void deconvolution::thread_hdltv_gen() {
    const char* dump_tv = std::getenv("AP_WRITE_TV");
    if (!(dump_tv && string(dump_tv) == "on")) return;

    wait();

    mHdltvinHandle << "[ " << endl;
    mHdltvoutHandle << "[ " << endl;
    int ap_cycleNo = 0;
    while (1) {
        wait();
        const char* mComma = ap_cycleNo == 0 ? " " : ", " ;
        mHdltvinHandle << mComma << "{"  <<  " \"ap_rst\" :  \"" << ap_rst.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"ap_start\" :  \"" << ap_start.read() << "\" ";
        mHdltvoutHandle << mComma << "{"  <<  " \"ap_done\" :  \"" << ap_done.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"ap_idle\" :  \"" << ap_idle.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"ap_ready\" :  \"" << ap_ready.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"kernel_V_address0\" :  \"" << kernel_V_address0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"kernel_V_ce0\" :  \"" << kernel_V_ce0.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"kernel_V_q0\" :  \"" << kernel_V_q0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"kernel_V_address1\" :  \"" << kernel_V_address1.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"kernel_V_ce1\" :  \"" << kernel_V_ce1.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"kernel_V_q1\" :  \"" << kernel_V_q1.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"ifeat_V_address0\" :  \"" << ifeat_V_address0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"ifeat_V_ce0\" :  \"" << ifeat_V_ce0.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"ifeat_V_q0\" :  \"" << ifeat_V_q0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"ofeat_V_address0\" :  \"" << ofeat_V_address0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"ofeat_V_ce0\" :  \"" << ofeat_V_ce0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"ofeat_V_we0\" :  \"" << ofeat_V_we0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"ofeat_V_d0\" :  \"" << ofeat_V_d0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"ofeat_V_address1\" :  \"" << ofeat_V_address1.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"ofeat_V_ce1\" :  \"" << ofeat_V_ce1.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"ofeat_V_we1\" :  \"" << ofeat_V_we1.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"ofeat_V_d1\" :  \"" << ofeat_V_d1.read() << "\" ";
        mHdltvinHandle << "}" << std::endl;
        mHdltvoutHandle << "}" << std::endl;
        ap_cycleNo++;
    }
}

}

