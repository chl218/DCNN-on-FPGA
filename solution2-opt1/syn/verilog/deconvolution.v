// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2017.1
// Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="deconvolution,hls_ip_2017_1,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=1,HLS_INPUT_PART=xc7z020clg484-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=7.424000,HLS_SYN_LAT=172289,HLS_SYN_TPT=none,HLS_SYN_MEM=0,HLS_SYN_DSP=0,HLS_SYN_FF=235,HLS_SYN_LUT=1080}" *)

module deconvolution (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        kernel_V_address0,
        kernel_V_ce0,
        kernel_V_q0,
        kernel_V_address1,
        kernel_V_ce1,
        kernel_V_q1,
        ifeat_V_address0,
        ifeat_V_ce0,
        ifeat_V_q0,
        ofeat_V_address0,
        ofeat_V_ce0,
        ofeat_V_we0,
        ofeat_V_d0,
        ofeat_V_address1,
        ofeat_V_ce1,
        ofeat_V_we1,
        ofeat_V_d1
);

parameter    ap_ST_fsm_state1 = 9'd1;
parameter    ap_ST_fsm_state2 = 9'd2;
parameter    ap_ST_fsm_state3 = 9'd4;
parameter    ap_ST_fsm_pp0_stage0 = 9'd8;
parameter    ap_ST_fsm_pp0_stage1 = 9'd16;
parameter    ap_ST_fsm_pp0_stage2 = 9'd32;
parameter    ap_ST_fsm_pp0_stage3 = 9'd64;
parameter    ap_ST_fsm_pp0_stage4 = 9'd128;
parameter    ap_ST_fsm_state11 = 9'd256;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [10:0] kernel_V_address0;
output   kernel_V_ce0;
input  [7:0] kernel_V_q0;
output  [10:0] kernel_V_address1;
output   kernel_V_ce1;
input  [7:0] kernel_V_q1;
output  [10:0] ifeat_V_address0;
output   ifeat_V_ce0;
input  [7:0] ifeat_V_q0;
output  [12:0] ofeat_V_address0;
output   ofeat_V_ce0;
output   ofeat_V_we0;
output  [7:0] ofeat_V_d0;
output  [12:0] ofeat_V_address1;
output   ofeat_V_ce1;
output   ofeat_V_we1;
output  [7:0] ofeat_V_d1;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg[10:0] kernel_V_address0;
reg kernel_V_ce0;
reg[10:0] kernel_V_address1;
reg kernel_V_ce1;
reg ifeat_V_ce0;
reg[12:0] ofeat_V_address0;
reg ofeat_V_ce0;
reg ofeat_V_we0;
reg[7:0] ofeat_V_d0;
reg[12:0] ofeat_V_address1;
reg ofeat_V_ce1;
reg ofeat_V_we1;
reg[7:0] ofeat_V_d1;

(* fsm_encoding = "none" *) reg   [8:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg   [4:0] oc_reg_307;
wire   [7:0] grp_fu_318_p2;
reg   [7:0] reg_329;
wire    ap_CS_fsm_pp0_stage1;
reg    ap_enable_reg_pp0_iter0;
wire    ap_block_state5_pp0_stage1_iter0;
wire    ap_block_state10_pp0_stage1_iter1;
wire    ap_block_pp0_stage1_11001;
reg   [0:0] tmp_5_reg_892;
wire    ap_CS_fsm_pp0_stage2;
wire    ap_block_state6_pp0_stage2_iter0;
wire    ap_block_pp0_stage2_11001;
wire    ap_CS_fsm_pp0_stage3;
wire    ap_block_state7_pp0_stage3_iter0;
wire    ap_block_pp0_stage3_11001;
wire    ap_CS_fsm_pp0_stage4;
wire    ap_block_state8_pp0_stage4_iter0;
wire    ap_block_pp0_stage4_11001;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter1;
wire    ap_block_state4_pp0_stage0_iter0;
wire    ap_block_state9_pp0_stage0_iter1;
wire    ap_block_pp0_stage0_11001;
wire   [7:0] grp_fu_324_p2;
reg   [7:0] reg_335;
wire   [7:0] indvar_flatten_next_fu_347_p2;
reg   [7:0] indvar_flatten_next_reg_817;
wire    ap_CS_fsm_state2;
wire   [3:0] id_cast4_mid2_v_fu_373_p3;
reg   [3:0] id_cast4_mid2_v_reg_822;
wire   [0:0] exitcond_flatten_fu_341_p2;
wire   [8:0] id_cast4_mid2_cast_fu_381_p1;
reg   [8:0] id_cast4_mid2_cast_reg_827;
wire   [9:0] ir_cast3_cast1_fu_397_p1;
reg   [9:0] ir_cast3_cast1_reg_832;
wire   [12:0] tmp_10_cast_fu_411_p3;
reg   [12:0] tmp_10_cast_reg_837;
wire   [4:0] ir_1_fu_419_p2;
reg   [4:0] ir_1_reg_842;
wire   [9:0] p_or_1_cast_cast_fu_425_p1;
reg   [9:0] p_or_1_cast_cast_reg_847;
wire   [9:0] p_or_2_cast_cast_fu_435_p1;
reg   [9:0] p_or_2_cast_cast_reg_852;
wire   [0:0] tmp_3_fu_439_p2;
wire    ap_CS_fsm_state3;
wire   [4:0] ic_1_fu_445_p2;
reg   [4:0] ic_1_reg_861;
wire   [13:0] ic_cast2_cast1_fu_451_p1;
reg   [13:0] ic_cast2_cast1_reg_866;
reg   [10:0] ifeat_V_addr_reg_873;
wire   [13:0] p_oc_0_1_cast_cast_fu_469_p1;
reg   [13:0] p_oc_0_1_cast_cast_reg_878;
wire   [13:0] p_oc_0_2_cast_cast_fu_479_p1;
reg   [13:0] p_oc_0_2_cast_cast_reg_885;
wire   [0:0] tmp_5_fu_483_p2;
reg   [0:0] ap_reg_pp0_iter1_tmp_5_reg_892;
wire   [4:0] oc_1_fu_489_p2;
reg   [4:0] oc_1_reg_896;
wire   [11:0] tmp_11_fu_524_p2;
reg   [11:0] tmp_11_reg_901;
wire   [9:0] tmp_22_fu_559_p2;
reg   [9:0] tmp_22_reg_918;
wire   [9:0] tmp_23_fu_585_p2;
reg   [9:0] tmp_23_reg_935;
reg  signed [7:0] ifeat_V_load_reg_941;
wire   [13:0] tmp_25_fu_627_p2;
reg   [13:0] tmp_25_reg_957;
wire   [9:0] tmp_29_fu_681_p2;
reg   [9:0] tmp_29_reg_973;
wire   [9:0] tmp_35_fu_685_p2;
reg   [9:0] tmp_35_reg_979;
wire   [13:0] tmp_31_fu_727_p2;
reg   [13:0] tmp_31_reg_995;
wire   [13:0] tmp_37_fu_780_p2;
reg   [13:0] tmp_37_reg_1000;
wire    ap_block_pp0_stage0_subdone;
reg    ap_condition_pp0_exit_iter0_state4;
wire    ap_block_pp0_stage4_subdone;
wire    ap_block_pp0_stage1_subdone;
reg   [7:0] indvar_flatten_reg_263;
reg   [3:0] id_reg_274;
reg   [4:0] ir_reg_285;
reg   [4:0] ic_reg_296;
wire    ap_CS_fsm_state11;
reg   [4:0] oc_phi_fu_311_p4;
wire    ap_block_pp0_stage0;
wire   [31:0] tmp_11_cast_fu_464_p1;
wire   [31:0] tmp_16_cast_fu_530_p1;
wire   [31:0] tmp_17_cast_fu_570_p1;
wire    ap_block_pp0_stage1;
wire   [31:0] tmp_18_cast_fu_580_p1;
wire   [31:0] tmp_19_cast_fu_594_p1;
wire    ap_block_pp0_stage2;
wire   [31:0] tmp_20_cast_fu_604_p1;
wire   [31:0] tmp_32_cast_fu_638_p1;
wire   [31:0] tmp_21_cast_fu_648_p1;
wire    ap_block_pp0_stage3;
wire   [31:0] tmp_22_cast_fu_658_p1;
wire   [31:0] tmp_33_cast_fu_667_p1;
wire   [31:0] tmp_34_cast_fu_676_p1;
wire   [31:0] tmp_23_cast_fu_694_p1;
wire    ap_block_pp0_stage4;
wire   [31:0] tmp_24_cast_fu_704_p1;
wire   [31:0] tmp_39_cast_fu_738_p1;
wire   [31:0] tmp_40_cast_fu_748_p1;
wire   [31:0] tmp_41_cast_fu_757_p1;
wire   [31:0] tmp_46_cast_fu_791_p1;
wire   [31:0] tmp_47_cast_fu_800_p1;
wire   [31:0] tmp_48_cast_fu_809_p1;
wire  signed [7:0] grp_fu_318_p0;
reg  signed [7:0] grp_fu_318_p1;
wire  signed [7:0] grp_fu_324_p0;
wire   [0:0] tmp_1_8_fu_359_p2;
wire   [3:0] id_1_fu_353_p2;
wire   [7:0] tmp_fu_385_p3;
wire   [4:0] ir_mid2_fu_365_p3;
wire   [8:0] ir_cast3_cast_fu_401_p1;
wire   [8:0] tmp_2_cast_fu_393_p1;
wire   [8:0] tmp_8_fu_405_p2;
wire   [4:0] p_or_2_fu_429_p2;
wire   [12:0] ic_cast2_cast_fu_455_p1;
wire   [12:0] tmp_2_fu_459_p2;
wire   [4:0] p_oc_0_2_fu_473_p2;
wire   [7:0] tmp_9_fu_495_p3;
wire   [8:0] tmp_13_cast_fu_503_p1;
wire   [8:0] tmp_10_fu_507_p2;
wire   [11:0] p_shl8_cast_fu_516_p3;
wire   [11:0] tmp_14_cast_fu_512_p1;
wire   [8:0] tmp_20_fu_535_p3;
wire   [5:0] tmp_21_fu_547_p3;
wire   [9:0] p_shl6_cast_fu_543_p1;
wire   [9:0] p_shl7_cast_fu_555_p1;
wire   [11:0] tmp_12_fu_565_p2;
wire   [11:0] tmp_13_fu_575_p2;
wire   [11:0] tmp_14_fu_589_p2;
wire   [11:0] tmp_15_fu_599_p2;
wire   [10:0] tmp_24_fu_616_p3;
wire   [13:0] p_shl4_cast_fu_609_p3;
wire   [13:0] p_shl5_cast_fu_623_p1;
wire   [13:0] tmp_26_fu_633_p2;
wire   [11:0] tmp_16_fu_643_p2;
wire   [11:0] tmp_17_fu_653_p2;
wire   [13:0] tmp_27_fu_663_p2;
wire   [13:0] tmp_28_fu_672_p2;
wire   [11:0] tmp_18_fu_689_p2;
wire   [11:0] tmp_19_fu_699_p2;
wire   [10:0] tmp_30_fu_716_p3;
wire   [13:0] p_shl2_cast_fu_709_p3;
wire   [13:0] p_shl3_cast_fu_723_p1;
wire   [13:0] tmp_32_fu_733_p2;
wire   [13:0] tmp_33_fu_743_p2;
wire   [13:0] tmp_34_fu_753_p2;
wire   [10:0] tmp_36_fu_769_p3;
wire   [13:0] p_shl_cast_fu_762_p3;
wire   [13:0] p_shl1_cast_fu_776_p1;
wire   [13:0] tmp_38_fu_786_p2;
wire   [13:0] tmp_39_fu_796_p2;
wire   [13:0] tmp_40_fu_805_p2;
reg   [8:0] ap_NS_fsm;
wire    ap_block_pp0_stage2_subdone;
wire    ap_block_pp0_stage3_subdone;
reg    ap_idle_pp0;
wire    ap_enable_pp0;

// power-on initialization
initial begin
#0 ap_CS_fsm = 9'd1;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_block_pp0_stage0_subdone == 1'b0) & (1'b1 == ap_condition_pp0_exit_iter0_state4))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if (((1'b1 == ap_CS_fsm_state3) & (1'd0 == tmp_3_fu_439_p2))) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b1 == ap_condition_pp0_exit_iter0_state4) & (((1'b1 == ap_CS_fsm_pp0_stage4) & (ap_block_pp0_stage4_subdone == 1'b0)) | ((1'b1 == ap_CS_fsm_pp0_stage1) & (ap_block_pp0_stage1_subdone == 1'b0))))) begin
            ap_enable_reg_pp0_iter1 <= (ap_condition_pp0_exit_iter0_state4 ^ 1'b1);
        end else if ((((1'b1 == ap_CS_fsm_pp0_stage4) & (ap_block_pp0_stage4_subdone == 1'b0)) | ((1'b1 == ap_CS_fsm_pp0_stage1) & (ap_block_pp0_stage1_subdone == 1'b0)))) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end else if (((1'b1 == ap_CS_fsm_state3) & (1'd0 == tmp_3_fu_439_p2))) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        ic_reg_296 <= ic_1_reg_861;
    end else if (((1'b1 == ap_CS_fsm_state2) & (1'd0 == exitcond_flatten_fu_341_p2))) begin
        ic_reg_296 <= 5'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state3) & (tmp_3_fu_439_p2 == 1'd1))) begin
        id_reg_274 <= id_cast4_mid2_v_reg_822;
    end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        id_reg_274 <= 4'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state3) & (tmp_3_fu_439_p2 == 1'd1))) begin
        indvar_flatten_reg_263 <= indvar_flatten_next_reg_817;
    end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        indvar_flatten_reg_263 <= 8'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state3) & (tmp_3_fu_439_p2 == 1'd1))) begin
        ir_reg_285 <= ir_1_reg_842;
    end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        ir_reg_285 <= 5'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_5_reg_892 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_enable_reg_pp0_iter1) & (ap_block_pp0_stage0_11001 == 1'b0))) begin
        oc_reg_307 <= oc_1_reg_896;
    end else if (((1'b1 == ap_CS_fsm_state3) & (1'd0 == tmp_3_fu_439_p2))) begin
        oc_reg_307 <= 5'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_block_pp0_stage0_11001 == 1'b0))) begin
        ap_reg_pp0_iter1_tmp_5_reg_892 <= tmp_5_reg_892;
        tmp_5_reg_892 <= tmp_5_fu_483_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        ic_1_reg_861 <= ic_1_fu_445_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state3) & (1'd0 == tmp_3_fu_439_p2))) begin
        ic_cast2_cast1_reg_866[4 : 0] <= ic_cast2_cast1_fu_451_p1[4 : 0];
        ifeat_V_addr_reg_873 <= tmp_11_cast_fu_464_p1;
        p_oc_0_1_cast_cast_reg_878[4 : 0] <= p_oc_0_1_cast_cast_fu_469_p1[4 : 0];
        p_oc_0_2_cast_cast_reg_885[4 : 0] <= p_oc_0_2_cast_cast_fu_479_p1[4 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state2) & (1'd0 == exitcond_flatten_fu_341_p2))) begin
        id_cast4_mid2_cast_reg_827[3 : 0] <= id_cast4_mid2_cast_fu_381_p1[3 : 0];
        id_cast4_mid2_v_reg_822 <= id_cast4_mid2_v_fu_373_p3;
        ir_1_reg_842 <= ir_1_fu_419_p2;
        ir_cast3_cast1_reg_832[4 : 0] <= ir_cast3_cast1_fu_397_p1[4 : 0];
        p_or_1_cast_cast_reg_847[4 : 0] <= p_or_1_cast_cast_fu_425_p1[4 : 0];
        p_or_2_cast_cast_reg_852[4 : 0] <= p_or_2_cast_cast_fu_435_p1[4 : 0];
        tmp_10_cast_reg_837[12 : 4] <= tmp_10_cast_fu_411_p3[12 : 4];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage1) & (ap_block_pp0_stage1_11001 == 1'b0) & (tmp_5_reg_892 == 1'd0))) begin
        ifeat_V_load_reg_941 <= ifeat_V_q0;
        tmp_23_reg_935 <= tmp_23_fu_585_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        indvar_flatten_next_reg_817 <= indvar_flatten_next_fu_347_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_block_pp0_stage0_11001 == 1'b0))) begin
        oc_1_reg_896 <= oc_1_fu_489_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b1 == ap_enable_reg_pp0_iter0) & (ap_block_pp0_stage1_11001 == 1'b0) & (tmp_5_reg_892 == 1'd0)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (tmp_5_reg_892 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage2) & (ap_block_pp0_stage2_11001 == 1'b0)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (tmp_5_reg_892 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage3) & (ap_block_pp0_stage3_11001 == 1'b0)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (tmp_5_reg_892 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage4) & (ap_block_pp0_stage4_11001 == 1'b0)) | ((tmp_5_reg_892 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_enable_reg_pp0_iter1) & (ap_block_pp0_stage0_11001 == 1'b0)))) begin
        reg_329 <= grp_fu_318_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b1 == ap_enable_reg_pp0_iter0) & (tmp_5_reg_892 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage2) & (ap_block_pp0_stage2_11001 == 1'b0)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (tmp_5_reg_892 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage3) & (ap_block_pp0_stage3_11001 == 1'b0)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (tmp_5_reg_892 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage4) & (ap_block_pp0_stage4_11001 == 1'b0)) | ((tmp_5_reg_892 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_enable_reg_pp0_iter1) & (ap_block_pp0_stage0_11001 == 1'b0)))) begin
        reg_335 <= grp_fu_324_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_block_pp0_stage0_11001 == 1'b0) & (1'd0 == tmp_5_fu_483_p2))) begin
        tmp_11_reg_901 <= tmp_11_fu_524_p2;
        tmp_22_reg_918[9 : 1] <= tmp_22_fu_559_p2[9 : 1];
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_5_reg_892 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage2) & (ap_block_pp0_stage2_11001 == 1'b0))) begin
        tmp_25_reg_957[13 : 1] <= tmp_25_fu_627_p2[13 : 1];
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_5_reg_892 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage3) & (ap_block_pp0_stage3_11001 == 1'b0))) begin
        tmp_29_reg_973 <= tmp_29_fu_681_p2;
        tmp_35_reg_979 <= tmp_35_fu_685_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_5_reg_892 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage4) & (ap_block_pp0_stage4_11001 == 1'b0))) begin
        tmp_31_reg_995[13 : 1] <= tmp_31_fu_727_p2[13 : 1];
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_5_reg_892 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_block_pp0_stage0_11001 == 1'b0))) begin
        tmp_37_reg_1000[13 : 1] <= tmp_37_fu_780_p2[13 : 1];
    end
end

always @ (*) begin
    if ((tmp_5_fu_483_p2 == 1'd1)) begin
        ap_condition_pp0_exit_iter0_state4 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter0_state4 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (exitcond_flatten_fu_341_p2 == 1'd1))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_start) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_enable_reg_pp0_iter0) & (1'b0 == ap_enable_reg_pp0_iter1))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (exitcond_flatten_fu_341_p2 == 1'd1))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_enable_reg_pp0_iter1) & (ap_block_pp0_stage0 == 1'b0)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage2) & (ap_block_pp0_stage2 == 1'b0)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage3) & (ap_block_pp0_stage3 == 1'b0)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage4) & (ap_block_pp0_stage4 == 1'b0)))) begin
        grp_fu_318_p1 = ifeat_V_load_reg_941;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b1 == ap_enable_reg_pp0_iter0) & (ap_block_pp0_stage1 == 1'b0))) begin
        grp_fu_318_p1 = ifeat_V_q0;
    end else begin
        grp_fu_318_p1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_block_pp0_stage0_11001 == 1'b0))) begin
        ifeat_V_ce0 = 1'b1;
    end else begin
        ifeat_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_enable_reg_pp0_iter0)) begin
        if (((1'b1 == ap_CS_fsm_pp0_stage4) & (ap_block_pp0_stage4 == 1'b0))) begin
            kernel_V_address0 = tmp_24_cast_fu_704_p1;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage3) & (ap_block_pp0_stage3 == 1'b0))) begin
            kernel_V_address0 = tmp_22_cast_fu_658_p1;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage2) & (ap_block_pp0_stage2 == 1'b0))) begin
            kernel_V_address0 = tmp_20_cast_fu_604_p1;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage1) & (ap_block_pp0_stage1 == 1'b0))) begin
            kernel_V_address0 = tmp_17_cast_fu_570_p1;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_block_pp0_stage0 == 1'b0))) begin
            kernel_V_address0 = tmp_16_cast_fu_530_p1;
        end else begin
            kernel_V_address0 = 'bx;
        end
    end else begin
        kernel_V_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_enable_reg_pp0_iter0)) begin
        if (((1'b1 == ap_CS_fsm_pp0_stage4) & (ap_block_pp0_stage4 == 1'b0))) begin
            kernel_V_address1 = tmp_23_cast_fu_694_p1;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage3) & (ap_block_pp0_stage3 == 1'b0))) begin
            kernel_V_address1 = tmp_21_cast_fu_648_p1;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage2) & (ap_block_pp0_stage2 == 1'b0))) begin
            kernel_V_address1 = tmp_19_cast_fu_594_p1;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage1) & (ap_block_pp0_stage1 == 1'b0))) begin
            kernel_V_address1 = tmp_18_cast_fu_580_p1;
        end else begin
            kernel_V_address1 = 'bx;
        end
    end else begin
        kernel_V_address1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b1 == ap_enable_reg_pp0_iter0) & (ap_block_pp0_stage1_11001 == 1'b0)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage2) & (ap_block_pp0_stage2_11001 == 1'b0)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage3) & (ap_block_pp0_stage3_11001 == 1'b0)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage4) & (ap_block_pp0_stage4_11001 == 1'b0)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_block_pp0_stage0_11001 == 1'b0)))) begin
        kernel_V_ce0 = 1'b1;
    end else begin
        kernel_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b1 == ap_enable_reg_pp0_iter0) & (ap_block_pp0_stage1_11001 == 1'b0)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage2) & (ap_block_pp0_stage2_11001 == 1'b0)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage3) & (ap_block_pp0_stage3_11001 == 1'b0)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage4) & (ap_block_pp0_stage4_11001 == 1'b0)))) begin
        kernel_V_ce1 = 1'b1;
    end else begin
        kernel_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_5_reg_892 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_enable_reg_pp0_iter1) & (ap_block_pp0_stage0 == 1'b0))) begin
        oc_phi_fu_311_p4 = oc_1_reg_896;
    end else begin
        oc_phi_fu_311_p4 = oc_reg_307;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b1 == ap_enable_reg_pp0_iter1) & (ap_block_pp0_stage1 == 1'b0))) begin
        ofeat_V_address0 = tmp_47_cast_fu_800_p1;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_enable_reg_pp0_iter1) & (ap_block_pp0_stage0 == 1'b0))) begin
        ofeat_V_address0 = tmp_41_cast_fu_757_p1;
    end else if (((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage4) & (ap_block_pp0_stage4 == 1'b0))) begin
        ofeat_V_address0 = tmp_40_cast_fu_748_p1;
    end else if (((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage3) & (ap_block_pp0_stage3 == 1'b0))) begin
        ofeat_V_address0 = tmp_34_cast_fu_676_p1;
    end else if (((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage2) & (ap_block_pp0_stage2 == 1'b0))) begin
        ofeat_V_address0 = tmp_32_cast_fu_638_p1;
    end else begin
        ofeat_V_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b1 == ap_enable_reg_pp0_iter1) & (ap_block_pp0_stage1 == 1'b0))) begin
        ofeat_V_address1 = tmp_48_cast_fu_809_p1;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_enable_reg_pp0_iter1) & (ap_block_pp0_stage0 == 1'b0))) begin
        ofeat_V_address1 = tmp_46_cast_fu_791_p1;
    end else if (((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage4) & (ap_block_pp0_stage4 == 1'b0))) begin
        ofeat_V_address1 = tmp_39_cast_fu_738_p1;
    end else if (((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage3) & (ap_block_pp0_stage3 == 1'b0))) begin
        ofeat_V_address1 = tmp_33_cast_fu_667_p1;
    end else begin
        ofeat_V_address1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage2) & (ap_block_pp0_stage2_11001 == 1'b0)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage3) & (ap_block_pp0_stage3_11001 == 1'b0)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage4) & (ap_block_pp0_stage4_11001 == 1'b0)) | ((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_enable_reg_pp0_iter1) & (ap_block_pp0_stage0_11001 == 1'b0)) | ((1'b1 == ap_CS_fsm_pp0_stage1) & (ap_block_pp0_stage1_11001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter1)))) begin
        ofeat_V_ce0 = 1'b1;
    end else begin
        ofeat_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage3) & (ap_block_pp0_stage3_11001 == 1'b0)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage4) & (ap_block_pp0_stage4_11001 == 1'b0)) | ((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_enable_reg_pp0_iter1) & (ap_block_pp0_stage0_11001 == 1'b0)) | ((1'b1 == ap_CS_fsm_pp0_stage1) & (ap_block_pp0_stage1_11001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter1)))) begin
        ofeat_V_ce1 = 1'b1;
    end else begin
        ofeat_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_enable_reg_pp0_iter1) & (ap_block_pp0_stage0 == 1'b0)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage3) & (ap_block_pp0_stage3 == 1'b0)) | ((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b1 == ap_enable_reg_pp0_iter1) & (ap_block_pp0_stage1 == 1'b0)))) begin
        ofeat_V_d0 = reg_335;
    end else if ((((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage2) & (ap_block_pp0_stage2 == 1'b0)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage4) & (ap_block_pp0_stage4 == 1'b0)))) begin
        ofeat_V_d0 = reg_329;
    end else begin
        ofeat_V_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage4) & (ap_block_pp0_stage4 == 1'b0))) begin
        ofeat_V_d1 = reg_335;
    end else if ((((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_enable_reg_pp0_iter1) & (ap_block_pp0_stage0 == 1'b0)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage3) & (ap_block_pp0_stage3 == 1'b0)) | ((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b1 == ap_enable_reg_pp0_iter1) & (ap_block_pp0_stage1 == 1'b0)))) begin
        ofeat_V_d1 = reg_329;
    end else begin
        ofeat_V_d1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_enable_reg_pp0_iter0) & (tmp_5_reg_892 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage2) & (ap_block_pp0_stage2_11001 == 1'b0)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (tmp_5_reg_892 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage3) & (ap_block_pp0_stage3_11001 == 1'b0)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (tmp_5_reg_892 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage4) & (ap_block_pp0_stage4_11001 == 1'b0)) | ((tmp_5_reg_892 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_enable_reg_pp0_iter1) & (ap_block_pp0_stage0_11001 == 1'b0)) | ((1'b1 == ap_CS_fsm_pp0_stage1) & (ap_block_pp0_stage1_11001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter1) & (1'd0 == ap_reg_pp0_iter1_tmp_5_reg_892)))) begin
        ofeat_V_we0 = 1'b1;
    end else begin
        ofeat_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_enable_reg_pp0_iter0) & (tmp_5_reg_892 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage3) & (ap_block_pp0_stage3_11001 == 1'b0)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (tmp_5_reg_892 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage4) & (ap_block_pp0_stage4_11001 == 1'b0)) | ((tmp_5_reg_892 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_enable_reg_pp0_iter1) & (ap_block_pp0_stage0_11001 == 1'b0)) | ((1'b1 == ap_CS_fsm_pp0_stage1) & (ap_block_pp0_stage1_11001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter1) & (1'd0 == ap_reg_pp0_iter1_tmp_5_reg_892)))) begin
        ofeat_V_we1 = 1'b1;
    end else begin
        ofeat_V_we1 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((1'b1 == ap_CS_fsm_state2) & (exitcond_flatten_fu_341_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state3 : begin
            if (((1'b1 == ap_CS_fsm_state3) & (tmp_3_fu_439_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage0 : begin
            if (((ap_block_pp0_stage0_subdone == 1'b0) & ~((1'b1 == ap_enable_reg_pp0_iter0) & (ap_block_pp0_stage0_subdone == 1'b0) & (tmp_5_fu_483_p2 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b0)))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end else if (((1'b1 == ap_enable_reg_pp0_iter0) & (ap_block_pp0_stage0_subdone == 1'b0) & (tmp_5_fu_483_p2 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b0))) begin
                ap_NS_fsm = ap_ST_fsm_state11;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage1 : begin
            if (((ap_block_pp0_stage1_subdone == 1'b0) & ~((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b1 == ap_enable_reg_pp0_iter1) & (ap_block_pp0_stage1_subdone == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0)))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end else if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b1 == ap_enable_reg_pp0_iter1) & (ap_block_pp0_stage1_subdone == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
                ap_NS_fsm = ap_ST_fsm_state11;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end
        end
        ap_ST_fsm_pp0_stage2 : begin
            if ((ap_block_pp0_stage2_subdone == 1'b0)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end
        end
        ap_ST_fsm_pp0_stage3 : begin
            if ((ap_block_pp0_stage3_subdone == 1'b0)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end
        end
        ap_ST_fsm_pp0_stage4 : begin
            if ((ap_block_pp0_stage4_subdone == 1'b0)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage4;
            end
        end
        ap_ST_fsm_state11 : begin
            ap_NS_fsm = ap_ST_fsm_state3;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_pp0_stage1 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_pp0_stage2 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_pp0_stage3 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_pp0_stage4 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state11 = ap_CS_fsm[32'd8];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage4 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage4_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage4_subdone = ~(1'b1 == 1'b1);

assign ap_block_state10_pp0_stage1_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage1_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage2_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage3_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage4_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign exitcond_flatten_fu_341_p2 = ((indvar_flatten_reg_263 == 8'd128) ? 1'b1 : 1'b0);

assign grp_fu_318_p0 = kernel_V_q0;

assign grp_fu_318_p2 = ($signed(grp_fu_318_p0) * $signed(grp_fu_318_p1));

assign grp_fu_324_p0 = kernel_V_q1;

assign grp_fu_324_p2 = ($signed(grp_fu_324_p0) * $signed(ifeat_V_load_reg_941));

assign ic_1_fu_445_p2 = (ic_reg_296 + 5'd1);

assign ic_cast2_cast1_fu_451_p1 = ic_reg_296;

assign ic_cast2_cast_fu_455_p1 = ic_reg_296;

assign id_1_fu_353_p2 = (id_reg_274 + 4'd1);

assign id_cast4_mid2_cast_fu_381_p1 = id_cast4_mid2_v_fu_373_p3;

assign id_cast4_mid2_v_fu_373_p3 = ((tmp_1_8_fu_359_p2[0:0] === 1'b1) ? id_1_fu_353_p2 : id_reg_274);

assign ifeat_V_address0 = ifeat_V_addr_reg_873;

assign indvar_flatten_next_fu_347_p2 = (indvar_flatten_reg_263 + 8'd1);

assign ir_1_fu_419_p2 = (ir_mid2_fu_365_p3 + 5'd1);

assign ir_cast3_cast1_fu_397_p1 = ir_mid2_fu_365_p3;

assign ir_cast3_cast_fu_401_p1 = ir_mid2_fu_365_p3;

assign ir_mid2_fu_365_p3 = ((tmp_1_8_fu_359_p2[0:0] === 1'b1) ? 5'd0 : ir_reg_285);

assign oc_1_fu_489_p2 = (oc_phi_fu_311_p4 + 5'd1);

assign p_oc_0_1_cast_cast_fu_469_p1 = ic_1_fu_445_p2;

assign p_oc_0_2_cast_cast_fu_479_p1 = p_oc_0_2_fu_473_p2;

assign p_oc_0_2_fu_473_p2 = (ic_reg_296 + 5'd2);

assign p_or_1_cast_cast_fu_425_p1 = ir_1_fu_419_p2;

assign p_or_2_cast_cast_fu_435_p1 = p_or_2_fu_429_p2;

assign p_or_2_fu_429_p2 = (ir_mid2_fu_365_p3 + 5'd2);

assign p_shl1_cast_fu_776_p1 = tmp_36_fu_769_p3;

assign p_shl2_cast_fu_709_p3 = {{tmp_29_reg_973}, {4'd0}};

assign p_shl3_cast_fu_723_p1 = tmp_30_fu_716_p3;

assign p_shl4_cast_fu_609_p3 = {{tmp_23_reg_935}, {4'd0}};

assign p_shl5_cast_fu_623_p1 = tmp_24_fu_616_p3;

assign p_shl6_cast_fu_543_p1 = tmp_20_fu_535_p3;

assign p_shl7_cast_fu_555_p1 = tmp_21_fu_547_p3;

assign p_shl8_cast_fu_516_p3 = {{tmp_10_fu_507_p2}, {3'd0}};

assign p_shl_cast_fu_762_p3 = {{tmp_35_reg_979}, {4'd0}};

assign tmp_10_cast_fu_411_p3 = {{tmp_8_fu_405_p2}, {4'd0}};

assign tmp_10_fu_507_p2 = (id_cast4_mid2_cast_reg_827 + tmp_13_cast_fu_503_p1);

assign tmp_11_cast_fu_464_p1 = tmp_2_fu_459_p2;

assign tmp_11_fu_524_p2 = (p_shl8_cast_fu_516_p3 + tmp_14_cast_fu_512_p1);

assign tmp_12_fu_565_p2 = (tmp_11_reg_901 + 12'd1);

assign tmp_13_cast_fu_503_p1 = tmp_9_fu_495_p3;

assign tmp_13_fu_575_p2 = (tmp_11_reg_901 + 12'd2);

assign tmp_14_cast_fu_512_p1 = tmp_10_fu_507_p2;

assign tmp_14_fu_589_p2 = (tmp_11_reg_901 + 12'd3);

assign tmp_15_fu_599_p2 = (tmp_11_reg_901 + 12'd4);

assign tmp_16_cast_fu_530_p1 = tmp_11_fu_524_p2;

assign tmp_16_fu_643_p2 = (tmp_11_reg_901 + 12'd5);

assign tmp_17_cast_fu_570_p1 = tmp_12_fu_565_p2;

assign tmp_17_fu_653_p2 = (tmp_11_reg_901 + 12'd6);

assign tmp_18_cast_fu_580_p1 = tmp_13_fu_575_p2;

assign tmp_18_fu_689_p2 = (tmp_11_reg_901 + 12'd7);

assign tmp_19_cast_fu_594_p1 = tmp_14_fu_589_p2;

assign tmp_19_fu_699_p2 = (tmp_11_reg_901 + 12'd8);

assign tmp_1_8_fu_359_p2 = ((ir_reg_285 == 5'd16) ? 1'b1 : 1'b0);

assign tmp_20_cast_fu_604_p1 = tmp_15_fu_599_p2;

assign tmp_20_fu_535_p3 = {{oc_phi_fu_311_p4}, {4'd0}};

assign tmp_21_cast_fu_648_p1 = tmp_16_fu_643_p2;

assign tmp_21_fu_547_p3 = {{oc_phi_fu_311_p4}, {1'd0}};

assign tmp_22_cast_fu_658_p1 = tmp_17_fu_653_p2;

assign tmp_22_fu_559_p2 = (p_shl6_cast_fu_543_p1 + p_shl7_cast_fu_555_p1);

assign tmp_23_cast_fu_694_p1 = tmp_18_fu_689_p2;

assign tmp_23_fu_585_p2 = (ir_cast3_cast1_reg_832 + tmp_22_reg_918);

assign tmp_24_cast_fu_704_p1 = tmp_19_fu_699_p2;

assign tmp_24_fu_616_p3 = {{tmp_23_reg_935}, {1'd0}};

assign tmp_25_fu_627_p2 = (p_shl4_cast_fu_609_p3 + p_shl5_cast_fu_623_p1);

assign tmp_26_fu_633_p2 = (ic_cast2_cast1_reg_866 + tmp_25_fu_627_p2);

assign tmp_27_fu_663_p2 = (p_oc_0_1_cast_cast_reg_878 + tmp_25_reg_957);

assign tmp_28_fu_672_p2 = (p_oc_0_2_cast_cast_reg_885 + tmp_25_reg_957);

assign tmp_29_fu_681_p2 = (p_or_1_cast_cast_reg_847 + tmp_22_reg_918);

assign tmp_2_cast_fu_393_p1 = tmp_fu_385_p3;

assign tmp_2_fu_459_p2 = (tmp_10_cast_reg_837 + ic_cast2_cast_fu_455_p1);

assign tmp_30_fu_716_p3 = {{tmp_29_reg_973}, {1'd0}};

assign tmp_31_fu_727_p2 = (p_shl2_cast_fu_709_p3 + p_shl3_cast_fu_723_p1);

assign tmp_32_cast_fu_638_p1 = tmp_26_fu_633_p2;

assign tmp_32_fu_733_p2 = (ic_cast2_cast1_reg_866 + tmp_31_fu_727_p2);

assign tmp_33_cast_fu_667_p1 = tmp_27_fu_663_p2;

assign tmp_33_fu_743_p2 = (p_oc_0_1_cast_cast_reg_878 + tmp_31_fu_727_p2);

assign tmp_34_cast_fu_676_p1 = tmp_28_fu_672_p2;

assign tmp_34_fu_753_p2 = (p_oc_0_2_cast_cast_reg_885 + tmp_31_reg_995);

assign tmp_35_fu_685_p2 = (p_or_2_cast_cast_reg_852 + tmp_22_reg_918);

assign tmp_36_fu_769_p3 = {{tmp_35_reg_979}, {1'd0}};

assign tmp_37_fu_780_p2 = (p_shl_cast_fu_762_p3 + p_shl1_cast_fu_776_p1);

assign tmp_38_fu_786_p2 = (ic_cast2_cast1_reg_866 + tmp_37_fu_780_p2);

assign tmp_39_cast_fu_738_p1 = tmp_32_fu_733_p2;

assign tmp_39_fu_796_p2 = (p_oc_0_1_cast_cast_reg_878 + tmp_37_reg_1000);

assign tmp_3_fu_439_p2 = ((ic_reg_296 == 5'd16) ? 1'b1 : 1'b0);

assign tmp_40_cast_fu_748_p1 = tmp_33_fu_743_p2;

assign tmp_40_fu_805_p2 = (p_oc_0_2_cast_cast_reg_885 + tmp_37_reg_1000);

assign tmp_41_cast_fu_757_p1 = tmp_34_fu_753_p2;

assign tmp_46_cast_fu_791_p1 = tmp_38_fu_786_p2;

assign tmp_47_cast_fu_800_p1 = tmp_39_fu_796_p2;

assign tmp_48_cast_fu_809_p1 = tmp_40_fu_805_p2;

assign tmp_5_fu_483_p2 = ((oc_phi_fu_311_p4 == 5'd16) ? 1'b1 : 1'b0);

assign tmp_8_fu_405_p2 = (ir_cast3_cast_fu_401_p1 + tmp_2_cast_fu_393_p1);

assign tmp_9_fu_495_p3 = {{oc_phi_fu_311_p4}, {3'd0}};

assign tmp_fu_385_p3 = {{id_cast4_mid2_v_fu_373_p3}, {4'd0}};

always @ (posedge ap_clk) begin
    id_cast4_mid2_cast_reg_827[8:4] <= 5'b00000;
    ir_cast3_cast1_reg_832[9:5] <= 5'b00000;
    tmp_10_cast_reg_837[3:0] <= 4'b0000;
    p_or_1_cast_cast_reg_847[9:5] <= 5'b00000;
    p_or_2_cast_cast_reg_852[9:5] <= 5'b00000;
    ic_cast2_cast1_reg_866[13:5] <= 9'b000000000;
    p_oc_0_1_cast_cast_reg_878[13:5] <= 9'b000000000;
    p_oc_0_2_cast_cast_reg_885[13:5] <= 9'b000000000;
    tmp_22_reg_918[0] <= 1'b0;
    tmp_25_reg_957[0] <= 1'b0;
    tmp_31_reg_995[0] <= 1'b0;
    tmp_37_reg_1000[0] <= 1'b0;
end

endmodule //deconvolution
