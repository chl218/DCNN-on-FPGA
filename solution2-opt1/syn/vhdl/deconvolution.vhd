-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2017.1
-- Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity deconvolution is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    kernel_V_address0 : OUT STD_LOGIC_VECTOR (10 downto 0);
    kernel_V_ce0 : OUT STD_LOGIC;
    kernel_V_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
    kernel_V_address1 : OUT STD_LOGIC_VECTOR (10 downto 0);
    kernel_V_ce1 : OUT STD_LOGIC;
    kernel_V_q1 : IN STD_LOGIC_VECTOR (7 downto 0);
    ifeat_V_address0 : OUT STD_LOGIC_VECTOR (10 downto 0);
    ifeat_V_ce0 : OUT STD_LOGIC;
    ifeat_V_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
    ofeat_V_address0 : OUT STD_LOGIC_VECTOR (12 downto 0);
    ofeat_V_ce0 : OUT STD_LOGIC;
    ofeat_V_we0 : OUT STD_LOGIC;
    ofeat_V_d0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    ofeat_V_address1 : OUT STD_LOGIC_VECTOR (12 downto 0);
    ofeat_V_ce1 : OUT STD_LOGIC;
    ofeat_V_we1 : OUT STD_LOGIC;
    ofeat_V_d1 : OUT STD_LOGIC_VECTOR (7 downto 0) );
end;


architecture behav of deconvolution is 
    attribute CORE_GENERATION_INFO : STRING;
    attribute CORE_GENERATION_INFO of behav : architecture is
    "deconvolution,hls_ip_2017_1,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=1,HLS_INPUT_PART=xc7z020clg484-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=7.424000,HLS_SYN_LAT=172289,HLS_SYN_TPT=none,HLS_SYN_MEM=0,HLS_SYN_DSP=0,HLS_SYN_FF=235,HLS_SYN_LUT=1080}";
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (8 downto 0) := "000000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (8 downto 0) := "000000010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (8 downto 0) := "000000100";
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (8 downto 0) := "000001000";
    constant ap_ST_fsm_pp0_stage1 : STD_LOGIC_VECTOR (8 downto 0) := "000010000";
    constant ap_ST_fsm_pp0_stage2 : STD_LOGIC_VECTOR (8 downto 0) := "000100000";
    constant ap_ST_fsm_pp0_stage3 : STD_LOGIC_VECTOR (8 downto 0) := "001000000";
    constant ap_ST_fsm_pp0_stage4 : STD_LOGIC_VECTOR (8 downto 0) := "010000000";
    constant ap_ST_fsm_state11 : STD_LOGIC_VECTOR (8 downto 0) := "100000000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv8_0 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv5_0 : STD_LOGIC_VECTOR (4 downto 0) := "00000";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv8_80 : STD_LOGIC_VECTOR (7 downto 0) := "10000000";
    constant ap_const_lv8_1 : STD_LOGIC_VECTOR (7 downto 0) := "00000001";
    constant ap_const_lv4_1 : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    constant ap_const_lv5_10 : STD_LOGIC_VECTOR (4 downto 0) := "10000";
    constant ap_const_lv5_1 : STD_LOGIC_VECTOR (4 downto 0) := "00001";
    constant ap_const_lv5_2 : STD_LOGIC_VECTOR (4 downto 0) := "00010";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv12_1 : STD_LOGIC_VECTOR (11 downto 0) := "000000000001";
    constant ap_const_lv12_2 : STD_LOGIC_VECTOR (11 downto 0) := "000000000010";
    constant ap_const_lv12_3 : STD_LOGIC_VECTOR (11 downto 0) := "000000000011";
    constant ap_const_lv12_4 : STD_LOGIC_VECTOR (11 downto 0) := "000000000100";
    constant ap_const_lv12_5 : STD_LOGIC_VECTOR (11 downto 0) := "000000000101";
    constant ap_const_lv12_6 : STD_LOGIC_VECTOR (11 downto 0) := "000000000110";
    constant ap_const_lv12_7 : STD_LOGIC_VECTOR (11 downto 0) := "000000000111";
    constant ap_const_lv12_8 : STD_LOGIC_VECTOR (11 downto 0) := "000000001000";

    signal ap_CS_fsm : STD_LOGIC_VECTOR (8 downto 0) := "000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal oc_reg_307 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_fu_318_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal reg_329 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_CS_fsm_pp0_stage1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage1 : signal is "none";
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC := '0';
    signal ap_block_state5_pp0_stage1_iter0 : BOOLEAN;
    signal ap_block_state10_pp0_stage1_iter1 : BOOLEAN;
    signal ap_block_pp0_stage1_11001 : BOOLEAN;
    signal tmp_5_reg_892 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_pp0_stage2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage2 : signal is "none";
    signal ap_block_state6_pp0_stage2_iter0 : BOOLEAN;
    signal ap_block_pp0_stage2_11001 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage3 : signal is "none";
    signal ap_block_state7_pp0_stage3_iter0 : BOOLEAN;
    signal ap_block_pp0_stage3_11001 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage4 : signal is "none";
    signal ap_block_state8_pp0_stage4_iter0 : BOOLEAN;
    signal ap_block_pp0_stage4_11001 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_block_state4_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state9_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal grp_fu_324_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal reg_335 : STD_LOGIC_VECTOR (7 downto 0);
    signal indvar_flatten_next_fu_347_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal indvar_flatten_next_reg_817 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal id_cast4_mid2_v_fu_373_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal id_cast4_mid2_v_reg_822 : STD_LOGIC_VECTOR (3 downto 0);
    signal exitcond_flatten_fu_341_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal id_cast4_mid2_cast_fu_381_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal id_cast4_mid2_cast_reg_827 : STD_LOGIC_VECTOR (8 downto 0);
    signal ir_cast3_cast1_fu_397_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal ir_cast3_cast1_reg_832 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_10_cast_fu_411_p3 : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp_10_cast_reg_837 : STD_LOGIC_VECTOR (12 downto 0);
    signal ir_1_fu_419_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal ir_1_reg_842 : STD_LOGIC_VECTOR (4 downto 0);
    signal p_or_1_cast_cast_fu_425_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal p_or_1_cast_cast_reg_847 : STD_LOGIC_VECTOR (9 downto 0);
    signal p_or_2_cast_cast_fu_435_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal p_or_2_cast_cast_reg_852 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_3_fu_439_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal ic_1_fu_445_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal ic_1_reg_861 : STD_LOGIC_VECTOR (4 downto 0);
    signal ic_cast2_cast1_fu_451_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal ic_cast2_cast1_reg_866 : STD_LOGIC_VECTOR (13 downto 0);
    signal ifeat_V_addr_reg_873 : STD_LOGIC_VECTOR (10 downto 0);
    signal p_oc_0_1_cast_cast_fu_469_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal p_oc_0_1_cast_cast_reg_878 : STD_LOGIC_VECTOR (13 downto 0);
    signal p_oc_0_2_cast_cast_fu_479_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal p_oc_0_2_cast_cast_reg_885 : STD_LOGIC_VECTOR (13 downto 0);
    signal tmp_5_fu_483_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_pp0_iter1_tmp_5_reg_892 : STD_LOGIC_VECTOR (0 downto 0);
    signal oc_1_fu_489_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal oc_1_reg_896 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_11_fu_524_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_11_reg_901 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_22_fu_559_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_22_reg_918 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_23_fu_585_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_23_reg_935 : STD_LOGIC_VECTOR (9 downto 0);
    signal ifeat_V_load_reg_941 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_25_fu_627_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal tmp_25_reg_957 : STD_LOGIC_VECTOR (13 downto 0);
    signal tmp_29_fu_681_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_29_reg_973 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_35_fu_685_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_35_reg_979 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_31_fu_727_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal tmp_31_reg_995 : STD_LOGIC_VECTOR (13 downto 0);
    signal tmp_37_fu_780_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal tmp_37_reg_1000 : STD_LOGIC_VECTOR (13 downto 0);
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal ap_condition_pp0_exit_iter0_state4 : STD_LOGIC;
    signal ap_block_pp0_stage4_subdone : BOOLEAN;
    signal ap_block_pp0_stage1_subdone : BOOLEAN;
    signal indvar_flatten_reg_263 : STD_LOGIC_VECTOR (7 downto 0);
    signal id_reg_274 : STD_LOGIC_VECTOR (3 downto 0);
    signal ir_reg_285 : STD_LOGIC_VECTOR (4 downto 0);
    signal ic_reg_296 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_CS_fsm_state11 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state11 : signal is "none";
    signal oc_phi_fu_311_p4 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal tmp_11_cast_fu_464_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_16_cast_fu_530_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_17_cast_fu_570_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_pp0_stage1 : BOOLEAN;
    signal tmp_18_cast_fu_580_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_19_cast_fu_594_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_pp0_stage2 : BOOLEAN;
    signal tmp_20_cast_fu_604_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_32_cast_fu_638_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_21_cast_fu_648_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_pp0_stage3 : BOOLEAN;
    signal tmp_22_cast_fu_658_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_33_cast_fu_667_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_34_cast_fu_676_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_23_cast_fu_694_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_pp0_stage4 : BOOLEAN;
    signal tmp_24_cast_fu_704_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_39_cast_fu_738_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_40_cast_fu_748_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_41_cast_fu_757_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_46_cast_fu_791_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_47_cast_fu_800_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_48_cast_fu_809_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_318_p0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_318_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_324_p0 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_1_8_fu_359_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal id_1_fu_353_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_fu_385_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal ir_mid2_fu_365_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal ir_cast3_cast_fu_401_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_2_cast_fu_393_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_8_fu_405_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal p_or_2_fu_429_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal ic_cast2_cast_fu_455_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp_2_fu_459_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal p_oc_0_2_fu_473_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_9_fu_495_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_13_cast_fu_503_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_10_fu_507_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal p_shl8_cast_fu_516_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_14_cast_fu_512_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_20_fu_535_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_21_fu_547_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal p_shl6_cast_fu_543_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal p_shl7_cast_fu_555_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_12_fu_565_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_13_fu_575_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_14_fu_589_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_15_fu_599_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_24_fu_616_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal p_shl4_cast_fu_609_p3 : STD_LOGIC_VECTOR (13 downto 0);
    signal p_shl5_cast_fu_623_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal tmp_26_fu_633_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal tmp_16_fu_643_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_17_fu_653_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_27_fu_663_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal tmp_28_fu_672_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal tmp_18_fu_689_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_19_fu_699_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_30_fu_716_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal p_shl2_cast_fu_709_p3 : STD_LOGIC_VECTOR (13 downto 0);
    signal p_shl3_cast_fu_723_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal tmp_32_fu_733_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal tmp_33_fu_743_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal tmp_34_fu_753_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal tmp_36_fu_769_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal p_shl_cast_fu_762_p3 : STD_LOGIC_VECTOR (13 downto 0);
    signal p_shl1_cast_fu_776_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal tmp_38_fu_786_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal tmp_39_fu_796_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal tmp_40_fu_805_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (8 downto 0);
    signal ap_block_pp0_stage2_subdone : BOOLEAN;
    signal ap_block_pp0_stage3_subdone : BOOLEAN;
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_enable_pp0 : STD_LOGIC;


begin




    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_block_pp0_stage0_subdone = ap_const_boolean_0) and (ap_const_logic_1 = ap_condition_pp0_exit_iter0_state4))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
                elsif (((ap_const_logic_1 = ap_CS_fsm_state3) and (ap_const_lv1_0 = tmp_3_fu_439_p2))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_condition_pp0_exit_iter0_state4) and (((ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_block_pp0_stage4_subdone = ap_const_boolean_0)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_block_pp0_stage1_subdone = ap_const_boolean_0))))) then 
                    ap_enable_reg_pp0_iter1 <= (ap_condition_pp0_exit_iter0_state4 xor ap_const_logic_1);
                elsif ((((ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_block_pp0_stage4_subdone = ap_const_boolean_0)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_block_pp0_stage1_subdone = ap_const_boolean_0)))) then 
                    ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
                elsif (((ap_const_logic_1 = ap_CS_fsm_state3) and (ap_const_lv1_0 = tmp_3_fu_439_p2))) then 
                    ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ic_reg_296_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
                ic_reg_296 <= ic_1_reg_861;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state2) and (ap_const_lv1_0 = exitcond_flatten_fu_341_p2))) then 
                ic_reg_296 <= ap_const_lv5_0;
            end if; 
        end if;
    end process;

    id_reg_274_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state3) and (tmp_3_fu_439_p2 = ap_const_lv1_1))) then 
                id_reg_274 <= id_cast4_mid2_v_reg_822;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                id_reg_274 <= ap_const_lv4_0;
            end if; 
        end if;
    end process;

    indvar_flatten_reg_263_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state3) and (tmp_3_fu_439_p2 = ap_const_lv1_1))) then 
                indvar_flatten_reg_263 <= indvar_flatten_next_reg_817;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                indvar_flatten_reg_263 <= ap_const_lv8_0;
            end if; 
        end if;
    end process;

    ir_reg_285_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state3) and (tmp_3_fu_439_p2 = ap_const_lv1_1))) then 
                ir_reg_285 <= ir_1_reg_842;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                ir_reg_285 <= ap_const_lv5_0;
            end if; 
        end if;
    end process;

    oc_reg_307_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_5_reg_892 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_block_pp0_stage0_11001 = ap_const_boolean_0))) then 
                oc_reg_307 <= oc_1_reg_896;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state3) and (ap_const_lv1_0 = tmp_3_fu_439_p2))) then 
                oc_reg_307 <= ap_const_lv5_0;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_block_pp0_stage0_11001 = ap_const_boolean_0))) then
                ap_reg_pp0_iter1_tmp_5_reg_892 <= tmp_5_reg_892;
                tmp_5_reg_892 <= tmp_5_fu_483_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state3)) then
                ic_1_reg_861 <= ic_1_fu_445_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state3) and (ap_const_lv1_0 = tmp_3_fu_439_p2))) then
                    ic_cast2_cast1_reg_866(4 downto 0) <= ic_cast2_cast1_fu_451_p1(4 downto 0);
                ifeat_V_addr_reg_873 <= tmp_11_cast_fu_464_p1(11 - 1 downto 0);
                    p_oc_0_1_cast_cast_reg_878(4 downto 0) <= p_oc_0_1_cast_cast_fu_469_p1(4 downto 0);
                    p_oc_0_2_cast_cast_reg_885(4 downto 0) <= p_oc_0_2_cast_cast_fu_479_p1(4 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state2) and (ap_const_lv1_0 = exitcond_flatten_fu_341_p2))) then
                    id_cast4_mid2_cast_reg_827(3 downto 0) <= id_cast4_mid2_cast_fu_381_p1(3 downto 0);
                id_cast4_mid2_v_reg_822 <= id_cast4_mid2_v_fu_373_p3;
                ir_1_reg_842 <= ir_1_fu_419_p2;
                    ir_cast3_cast1_reg_832(4 downto 0) <= ir_cast3_cast1_fu_397_p1(4 downto 0);
                    p_or_1_cast_cast_reg_847(4 downto 0) <= p_or_1_cast_cast_fu_425_p1(4 downto 0);
                    p_or_2_cast_cast_reg_852(4 downto 0) <= p_or_2_cast_cast_fu_435_p1(4 downto 0);
                    tmp_10_cast_reg_837(12 downto 4) <= tmp_10_cast_fu_411_p3(12 downto 4);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_block_pp0_stage1_11001 = ap_const_boolean_0) and (tmp_5_reg_892 = ap_const_lv1_0))) then
                ifeat_V_load_reg_941 <= ifeat_V_q0;
                tmp_23_reg_935 <= tmp_23_fu_585_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state2)) then
                indvar_flatten_next_reg_817 <= indvar_flatten_next_fu_347_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_block_pp0_stage0_11001 = ap_const_boolean_0))) then
                oc_1_reg_896 <= oc_1_fu_489_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_block_pp0_stage1_11001 = ap_const_boolean_0) and (tmp_5_reg_892 = ap_const_lv1_0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (tmp_5_reg_892 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_block_pp0_stage2_11001 = ap_const_boolean_0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (tmp_5_reg_892 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_block_pp0_stage3_11001 = ap_const_boolean_0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (tmp_5_reg_892 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_block_pp0_stage4_11001 = ap_const_boolean_0)) or ((tmp_5_reg_892 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_block_pp0_stage0_11001 = ap_const_boolean_0)))) then
                reg_329 <= grp_fu_318_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (tmp_5_reg_892 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_block_pp0_stage2_11001 = ap_const_boolean_0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (tmp_5_reg_892 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_block_pp0_stage3_11001 = ap_const_boolean_0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (tmp_5_reg_892 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_block_pp0_stage4_11001 = ap_const_boolean_0)) or ((tmp_5_reg_892 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_block_pp0_stage0_11001 = ap_const_boolean_0)))) then
                reg_335 <= grp_fu_324_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_block_pp0_stage0_11001 = ap_const_boolean_0) and (ap_const_lv1_0 = tmp_5_fu_483_p2))) then
                tmp_11_reg_901 <= tmp_11_fu_524_p2;
                    tmp_22_reg_918(9 downto 1) <= tmp_22_fu_559_p2(9 downto 1);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_5_reg_892 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_block_pp0_stage2_11001 = ap_const_boolean_0))) then
                    tmp_25_reg_957(13 downto 1) <= tmp_25_fu_627_p2(13 downto 1);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_5_reg_892 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_block_pp0_stage3_11001 = ap_const_boolean_0))) then
                tmp_29_reg_973 <= tmp_29_fu_681_p2;
                tmp_35_reg_979 <= tmp_35_fu_685_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_5_reg_892 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_block_pp0_stage4_11001 = ap_const_boolean_0))) then
                    tmp_31_reg_995(13 downto 1) <= tmp_31_fu_727_p2(13 downto 1);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_5_reg_892 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_block_pp0_stage0_11001 = ap_const_boolean_0))) then
                    tmp_37_reg_1000(13 downto 1) <= tmp_37_fu_780_p2(13 downto 1);
            end if;
        end if;
    end process;
    id_cast4_mid2_cast_reg_827(8 downto 4) <= "00000";
    ir_cast3_cast1_reg_832(9 downto 5) <= "00000";
    tmp_10_cast_reg_837(3 downto 0) <= "0000";
    p_or_1_cast_cast_reg_847(9 downto 5) <= "00000";
    p_or_2_cast_cast_reg_852(9 downto 5) <= "00000";
    ic_cast2_cast1_reg_866(13 downto 5) <= "000000000";
    p_oc_0_1_cast_cast_reg_878(13 downto 5) <= "000000000";
    p_oc_0_2_cast_cast_reg_885(13 downto 5) <= "000000000";
    tmp_22_reg_918(0) <= '0';
    tmp_25_reg_957(0) <= '0';
    tmp_31_reg_995(0) <= '0';
    tmp_37_reg_1000(0) <= '0';

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_CS_fsm_state1, ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_CS_fsm_state2, exitcond_flatten_fu_341_p2, tmp_3_fu_439_p2, ap_CS_fsm_state3, tmp_5_fu_483_p2, ap_block_pp0_stage0_subdone, ap_block_pp0_stage4_subdone, ap_block_pp0_stage1_subdone, ap_block_pp0_stage2_subdone, ap_block_pp0_stage3_subdone)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state2) and (exitcond_flatten_fu_341_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                else
                    ap_NS_fsm <= ap_ST_fsm_state3;
                end if;
            when ap_ST_fsm_state3 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state3) and (tmp_3_fu_439_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when ap_ST_fsm_pp0_stage0 => 
                if (((ap_block_pp0_stage0_subdone = ap_const_boolean_0) and not(((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_block_pp0_stage0_subdone = ap_const_boolean_0) and (tmp_5_fu_483_p2 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0))))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage1;
                elsif (((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_block_pp0_stage0_subdone = ap_const_boolean_0) and (tmp_5_fu_483_p2 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0))) then
                    ap_NS_fsm <= ap_ST_fsm_state11;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when ap_ST_fsm_pp0_stage1 => 
                if (((ap_block_pp0_stage1_subdone = ap_const_boolean_0) and not(((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_block_pp0_stage1_subdone = ap_const_boolean_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage2;
                elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_block_pp0_stage1_subdone = ap_const_boolean_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then
                    ap_NS_fsm <= ap_ST_fsm_state11;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage1;
                end if;
            when ap_ST_fsm_pp0_stage2 => 
                if ((ap_block_pp0_stage2_subdone = ap_const_boolean_0)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage3;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage2;
                end if;
            when ap_ST_fsm_pp0_stage3 => 
                if ((ap_block_pp0_stage3_subdone = ap_const_boolean_0)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage4;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage3;
                end if;
            when ap_ST_fsm_pp0_stage4 => 
                if ((ap_block_pp0_stage4_subdone = ap_const_boolean_0)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage4;
                end if;
            when ap_ST_fsm_state11 => 
                ap_NS_fsm <= ap_ST_fsm_state3;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXX";
        end case;
    end process;
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(3);
    ap_CS_fsm_pp0_stage1 <= ap_CS_fsm(4);
    ap_CS_fsm_pp0_stage2 <= ap_CS_fsm(5);
    ap_CS_fsm_pp0_stage3 <= ap_CS_fsm(6);
    ap_CS_fsm_pp0_stage4 <= ap_CS_fsm(7);
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state11 <= ap_CS_fsm(8);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage1_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage1_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage2_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage2_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage3_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage3_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage4_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage4_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state10_pp0_stage1_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage1_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage2_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage3_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state8_pp0_stage4_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state9_pp0_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_condition_pp0_exit_iter0_state4_assign_proc : process(tmp_5_fu_483_p2)
    begin
        if ((tmp_5_fu_483_p2 = ap_const_lv1_1)) then 
            ap_condition_pp0_exit_iter0_state4 <= ap_const_logic_1;
        else 
            ap_condition_pp0_exit_iter0_state4 <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_assign_proc : process(ap_CS_fsm_state2, exitcond_flatten_fu_341_p2)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state2) and (exitcond_flatten_fu_341_p2 = ap_const_lv1_1))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);

    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_const_logic_0 = ap_start) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_const_logic_0 = ap_enable_reg_pp0_iter0) and (ap_const_logic_0 = ap_enable_reg_pp0_iter1))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_CS_fsm_state2, exitcond_flatten_fu_341_p2)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state2) and (exitcond_flatten_fu_341_p2 = ap_const_lv1_1))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    exitcond_flatten_fu_341_p2 <= "1" when (indvar_flatten_reg_263 = ap_const_lv8_80) else "0";
    grp_fu_318_p0 <= kernel_V_q0;

    grp_fu_318_p1_assign_proc : process(ifeat_V_q0, ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ifeat_V_load_reg_941, ap_block_pp0_stage0, ap_block_pp0_stage1, ap_block_pp0_stage2, ap_block_pp0_stage3, ap_block_pp0_stage4)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_block_pp0_stage0 = ap_const_boolean_0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_block_pp0_stage2 = ap_const_boolean_0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_block_pp0_stage3 = ap_const_boolean_0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_block_pp0_stage4 = ap_const_boolean_0)))) then 
            grp_fu_318_p1 <= ifeat_V_load_reg_941;
        elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_block_pp0_stage1 = ap_const_boolean_0))) then 
            grp_fu_318_p1 <= ifeat_V_q0;
        else 
            grp_fu_318_p1 <= "XXXXXXXX";
        end if; 
    end process;

    grp_fu_318_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(grp_fu_318_p0) * signed(grp_fu_318_p1))), 8));
    grp_fu_324_p0 <= kernel_V_q1;
    grp_fu_324_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(grp_fu_324_p0) * signed(ifeat_V_load_reg_941))), 8));
    ic_1_fu_445_p2 <= std_logic_vector(unsigned(ic_reg_296) + unsigned(ap_const_lv5_1));
    ic_cast2_cast1_fu_451_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ic_reg_296),14));
    ic_cast2_cast_fu_455_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ic_reg_296),13));
    id_1_fu_353_p2 <= std_logic_vector(unsigned(id_reg_274) + unsigned(ap_const_lv4_1));
    id_cast4_mid2_cast_fu_381_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(id_cast4_mid2_v_fu_373_p3),9));
    id_cast4_mid2_v_fu_373_p3 <= 
        id_1_fu_353_p2 when (tmp_1_8_fu_359_p2(0) = '1') else 
        id_reg_274;
    ifeat_V_address0 <= ifeat_V_addr_reg_873;

    ifeat_V_ce0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_block_pp0_stage0_11001 = ap_const_boolean_0))) then 
            ifeat_V_ce0 <= ap_const_logic_1;
        else 
            ifeat_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    indvar_flatten_next_fu_347_p2 <= std_logic_vector(unsigned(indvar_flatten_reg_263) + unsigned(ap_const_lv8_1));
    ir_1_fu_419_p2 <= std_logic_vector(unsigned(ir_mid2_fu_365_p3) + unsigned(ap_const_lv5_1));
    ir_cast3_cast1_fu_397_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ir_mid2_fu_365_p3),10));
    ir_cast3_cast_fu_401_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ir_mid2_fu_365_p3),9));
    ir_mid2_fu_365_p3 <= 
        ap_const_lv5_0 when (tmp_1_8_fu_359_p2(0) = '1') else 
        ir_reg_285;

    kernel_V_address0_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, tmp_16_cast_fu_530_p1, tmp_17_cast_fu_570_p1, ap_block_pp0_stage1, ap_block_pp0_stage2, tmp_20_cast_fu_604_p1, ap_block_pp0_stage3, tmp_22_cast_fu_658_p1, ap_block_pp0_stage4, tmp_24_cast_fu_704_p1)
    begin
        if ((ap_const_logic_1 = ap_enable_reg_pp0_iter0)) then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_block_pp0_stage4 = ap_const_boolean_0))) then 
                kernel_V_address0 <= tmp_24_cast_fu_704_p1(11 - 1 downto 0);
            elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_block_pp0_stage3 = ap_const_boolean_0))) then 
                kernel_V_address0 <= tmp_22_cast_fu_658_p1(11 - 1 downto 0);
            elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_block_pp0_stage2 = ap_const_boolean_0))) then 
                kernel_V_address0 <= tmp_20_cast_fu_604_p1(11 - 1 downto 0);
            elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_block_pp0_stage1 = ap_const_boolean_0))) then 
                kernel_V_address0 <= tmp_17_cast_fu_570_p1(11 - 1 downto 0);
            elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_block_pp0_stage0 = ap_const_boolean_0))) then 
                kernel_V_address0 <= tmp_16_cast_fu_530_p1(11 - 1 downto 0);
            else 
                kernel_V_address0 <= "XXXXXXXXXXX";
            end if;
        else 
            kernel_V_address0 <= "XXXXXXXXXXX";
        end if; 
    end process;


    kernel_V_address1_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage4, ap_block_pp0_stage1, tmp_18_cast_fu_580_p1, tmp_19_cast_fu_594_p1, ap_block_pp0_stage2, tmp_21_cast_fu_648_p1, ap_block_pp0_stage3, tmp_23_cast_fu_694_p1, ap_block_pp0_stage4)
    begin
        if ((ap_const_logic_1 = ap_enable_reg_pp0_iter0)) then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_block_pp0_stage4 = ap_const_boolean_0))) then 
                kernel_V_address1 <= tmp_23_cast_fu_694_p1(11 - 1 downto 0);
            elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_block_pp0_stage3 = ap_const_boolean_0))) then 
                kernel_V_address1 <= tmp_21_cast_fu_648_p1(11 - 1 downto 0);
            elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_block_pp0_stage2 = ap_const_boolean_0))) then 
                kernel_V_address1 <= tmp_19_cast_fu_594_p1(11 - 1 downto 0);
            elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_block_pp0_stage1 = ap_const_boolean_0))) then 
                kernel_V_address1 <= tmp_18_cast_fu_580_p1(11 - 1 downto 0);
            else 
                kernel_V_address1 <= "XXXXXXXXXXX";
            end if;
        else 
            kernel_V_address1 <= "XXXXXXXXXXX";
        end if; 
    end process;


    kernel_V_ce0_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_block_pp0_stage1_11001, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3_11001, ap_CS_fsm_pp0_stage4, ap_block_pp0_stage4_11001, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_block_pp0_stage1_11001 = ap_const_boolean_0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_block_pp0_stage2_11001 = ap_const_boolean_0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_block_pp0_stage3_11001 = ap_const_boolean_0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_block_pp0_stage4_11001 = ap_const_boolean_0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_block_pp0_stage0_11001 = ap_const_boolean_0)))) then 
            kernel_V_ce0 <= ap_const_logic_1;
        else 
            kernel_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    kernel_V_ce1_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_block_pp0_stage1_11001, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3_11001, ap_CS_fsm_pp0_stage4, ap_block_pp0_stage4_11001)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_block_pp0_stage1_11001 = ap_const_boolean_0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_block_pp0_stage2_11001 = ap_const_boolean_0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_block_pp0_stage3_11001 = ap_const_boolean_0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_block_pp0_stage4_11001 = ap_const_boolean_0)))) then 
            kernel_V_ce1 <= ap_const_logic_1;
        else 
            kernel_V_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    oc_1_fu_489_p2 <= std_logic_vector(unsigned(oc_phi_fu_311_p4) + unsigned(ap_const_lv5_1));

    oc_phi_fu_311_p4_assign_proc : process(oc_reg_307, tmp_5_reg_892, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, oc_1_reg_896, ap_block_pp0_stage0)
    begin
        if (((tmp_5_reg_892 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_block_pp0_stage0 = ap_const_boolean_0))) then 
            oc_phi_fu_311_p4 <= oc_1_reg_896;
        else 
            oc_phi_fu_311_p4 <= oc_reg_307;
        end if; 
    end process;


    ofeat_V_address0_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, ap_block_pp0_stage1, ap_block_pp0_stage2, tmp_32_cast_fu_638_p1, ap_block_pp0_stage3, tmp_34_cast_fu_676_p1, ap_block_pp0_stage4, tmp_40_cast_fu_748_p1, tmp_41_cast_fu_757_p1, tmp_47_cast_fu_800_p1)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_block_pp0_stage1 = ap_const_boolean_0))) then 
            ofeat_V_address0 <= tmp_47_cast_fu_800_p1(13 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_block_pp0_stage0 = ap_const_boolean_0))) then 
            ofeat_V_address0 <= tmp_41_cast_fu_757_p1(13 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_block_pp0_stage4 = ap_const_boolean_0))) then 
            ofeat_V_address0 <= tmp_40_cast_fu_748_p1(13 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_block_pp0_stage3 = ap_const_boolean_0))) then 
            ofeat_V_address0 <= tmp_34_cast_fu_676_p1(13 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_block_pp0_stage2 = ap_const_boolean_0))) then 
            ofeat_V_address0 <= tmp_32_cast_fu_638_p1(13 - 1 downto 0);
        else 
            ofeat_V_address0 <= "XXXXXXXXXXXXX";
        end if; 
    end process;


    ofeat_V_address1_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, ap_block_pp0_stage1, ap_block_pp0_stage3, tmp_33_cast_fu_667_p1, ap_block_pp0_stage4, tmp_39_cast_fu_738_p1, tmp_46_cast_fu_791_p1, tmp_48_cast_fu_809_p1)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_block_pp0_stage1 = ap_const_boolean_0))) then 
            ofeat_V_address1 <= tmp_48_cast_fu_809_p1(13 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_block_pp0_stage0 = ap_const_boolean_0))) then 
            ofeat_V_address1 <= tmp_46_cast_fu_791_p1(13 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_block_pp0_stage4 = ap_const_boolean_0))) then 
            ofeat_V_address1 <= tmp_39_cast_fu_738_p1(13 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_block_pp0_stage3 = ap_const_boolean_0))) then 
            ofeat_V_address1 <= tmp_33_cast_fu_667_p1(13 - 1 downto 0);
        else 
            ofeat_V_address1 <= "XXXXXXXXXXXXX";
        end if; 
    end process;


    ofeat_V_ce0_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_block_pp0_stage1_11001, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3_11001, ap_CS_fsm_pp0_stage4, ap_block_pp0_stage4_11001, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if ((((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_block_pp0_stage2_11001 = ap_const_boolean_0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_block_pp0_stage3_11001 = ap_const_boolean_0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_block_pp0_stage4_11001 = ap_const_boolean_0)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_block_pp0_stage0_11001 = ap_const_boolean_0)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_block_pp0_stage1_11001 = ap_const_boolean_0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1)))) then 
            ofeat_V_ce0 <= ap_const_logic_1;
        else 
            ofeat_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    ofeat_V_ce1_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_block_pp0_stage1_11001, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3_11001, ap_CS_fsm_pp0_stage4, ap_block_pp0_stage4_11001, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if ((((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_block_pp0_stage3_11001 = ap_const_boolean_0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_block_pp0_stage4_11001 = ap_const_boolean_0)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_block_pp0_stage0_11001 = ap_const_boolean_0)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_block_pp0_stage1_11001 = ap_const_boolean_0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1)))) then 
            ofeat_V_ce1 <= ap_const_logic_1;
        else 
            ofeat_V_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    ofeat_V_d0_assign_proc : process(reg_329, ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, reg_335, ap_block_pp0_stage0, ap_block_pp0_stage1, ap_block_pp0_stage2, ap_block_pp0_stage3, ap_block_pp0_stage4)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_block_pp0_stage0 = ap_const_boolean_0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_block_pp0_stage3 = ap_const_boolean_0)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_block_pp0_stage1 = ap_const_boolean_0)))) then 
            ofeat_V_d0 <= reg_335;
        elsif ((((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_block_pp0_stage2 = ap_const_boolean_0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_block_pp0_stage4 = ap_const_boolean_0)))) then 
            ofeat_V_d0 <= reg_329;
        else 
            ofeat_V_d0 <= "XXXXXXXX";
        end if; 
    end process;


    ofeat_V_d1_assign_proc : process(reg_329, ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, reg_335, ap_block_pp0_stage0, ap_block_pp0_stage1, ap_block_pp0_stage3, ap_block_pp0_stage4)
    begin
        if (((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_block_pp0_stage4 = ap_const_boolean_0))) then 
            ofeat_V_d1 <= reg_335;
        elsif ((((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_block_pp0_stage0 = ap_const_boolean_0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_block_pp0_stage3 = ap_const_boolean_0)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_block_pp0_stage1 = ap_const_boolean_0)))) then 
            ofeat_V_d1 <= reg_329;
        else 
            ofeat_V_d1 <= "XXXXXXXX";
        end if; 
    end process;


    ofeat_V_we0_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_block_pp0_stage1_11001, tmp_5_reg_892, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3_11001, ap_CS_fsm_pp0_stage4, ap_block_pp0_stage4_11001, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001, ap_reg_pp0_iter1_tmp_5_reg_892)
    begin
        if ((((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (tmp_5_reg_892 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_block_pp0_stage2_11001 = ap_const_boolean_0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (tmp_5_reg_892 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_block_pp0_stage3_11001 = ap_const_boolean_0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (tmp_5_reg_892 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_block_pp0_stage4_11001 = ap_const_boolean_0)) or ((tmp_5_reg_892 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_block_pp0_stage0_11001 = ap_const_boolean_0)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_block_pp0_stage1_11001 = ap_const_boolean_0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_lv1_0 = ap_reg_pp0_iter1_tmp_5_reg_892)))) then 
            ofeat_V_we0 <= ap_const_logic_1;
        else 
            ofeat_V_we0 <= ap_const_logic_0;
        end if; 
    end process;


    ofeat_V_we1_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_block_pp0_stage1_11001, tmp_5_reg_892, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3_11001, ap_CS_fsm_pp0_stage4, ap_block_pp0_stage4_11001, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001, ap_reg_pp0_iter1_tmp_5_reg_892)
    begin
        if ((((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (tmp_5_reg_892 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_block_pp0_stage3_11001 = ap_const_boolean_0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (tmp_5_reg_892 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_block_pp0_stage4_11001 = ap_const_boolean_0)) or ((tmp_5_reg_892 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_block_pp0_stage0_11001 = ap_const_boolean_0)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_block_pp0_stage1_11001 = ap_const_boolean_0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_lv1_0 = ap_reg_pp0_iter1_tmp_5_reg_892)))) then 
            ofeat_V_we1 <= ap_const_logic_1;
        else 
            ofeat_V_we1 <= ap_const_logic_0;
        end if; 
    end process;

    p_oc_0_1_cast_cast_fu_469_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ic_1_fu_445_p2),14));
    p_oc_0_2_cast_cast_fu_479_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_oc_0_2_fu_473_p2),14));
    p_oc_0_2_fu_473_p2 <= std_logic_vector(unsigned(ic_reg_296) + unsigned(ap_const_lv5_2));
    p_or_1_cast_cast_fu_425_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ir_1_fu_419_p2),10));
    p_or_2_cast_cast_fu_435_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_or_2_fu_429_p2),10));
    p_or_2_fu_429_p2 <= std_logic_vector(unsigned(ir_mid2_fu_365_p3) + unsigned(ap_const_lv5_2));
    p_shl1_cast_fu_776_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_36_fu_769_p3),14));
    p_shl2_cast_fu_709_p3 <= (tmp_29_reg_973 & ap_const_lv4_0);
    p_shl3_cast_fu_723_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_30_fu_716_p3),14));
    p_shl4_cast_fu_609_p3 <= (tmp_23_reg_935 & ap_const_lv4_0);
    p_shl5_cast_fu_623_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_24_fu_616_p3),14));
    p_shl6_cast_fu_543_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_20_fu_535_p3),10));
    p_shl7_cast_fu_555_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_21_fu_547_p3),10));
    p_shl8_cast_fu_516_p3 <= (tmp_10_fu_507_p2 & ap_const_lv3_0);
    p_shl_cast_fu_762_p3 <= (tmp_35_reg_979 & ap_const_lv4_0);
    tmp_10_cast_fu_411_p3 <= (tmp_8_fu_405_p2 & ap_const_lv4_0);
    tmp_10_fu_507_p2 <= std_logic_vector(unsigned(id_cast4_mid2_cast_reg_827) + unsigned(tmp_13_cast_fu_503_p1));
    tmp_11_cast_fu_464_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_2_fu_459_p2),32));
    tmp_11_fu_524_p2 <= std_logic_vector(unsigned(p_shl8_cast_fu_516_p3) + unsigned(tmp_14_cast_fu_512_p1));
    tmp_12_fu_565_p2 <= std_logic_vector(unsigned(tmp_11_reg_901) + unsigned(ap_const_lv12_1));
    tmp_13_cast_fu_503_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_9_fu_495_p3),9));
    tmp_13_fu_575_p2 <= std_logic_vector(unsigned(tmp_11_reg_901) + unsigned(ap_const_lv12_2));
    tmp_14_cast_fu_512_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_10_fu_507_p2),12));
    tmp_14_fu_589_p2 <= std_logic_vector(unsigned(tmp_11_reg_901) + unsigned(ap_const_lv12_3));
    tmp_15_fu_599_p2 <= std_logic_vector(unsigned(tmp_11_reg_901) + unsigned(ap_const_lv12_4));
    tmp_16_cast_fu_530_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_11_fu_524_p2),32));
    tmp_16_fu_643_p2 <= std_logic_vector(unsigned(tmp_11_reg_901) + unsigned(ap_const_lv12_5));
    tmp_17_cast_fu_570_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_12_fu_565_p2),32));
    tmp_17_fu_653_p2 <= std_logic_vector(unsigned(tmp_11_reg_901) + unsigned(ap_const_lv12_6));
    tmp_18_cast_fu_580_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_13_fu_575_p2),32));
    tmp_18_fu_689_p2 <= std_logic_vector(unsigned(tmp_11_reg_901) + unsigned(ap_const_lv12_7));
    tmp_19_cast_fu_594_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_14_fu_589_p2),32));
    tmp_19_fu_699_p2 <= std_logic_vector(unsigned(tmp_11_reg_901) + unsigned(ap_const_lv12_8));
    tmp_1_8_fu_359_p2 <= "1" when (ir_reg_285 = ap_const_lv5_10) else "0";
    tmp_20_cast_fu_604_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_15_fu_599_p2),32));
    tmp_20_fu_535_p3 <= (oc_phi_fu_311_p4 & ap_const_lv4_0);
    tmp_21_cast_fu_648_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_16_fu_643_p2),32));
    tmp_21_fu_547_p3 <= (oc_phi_fu_311_p4 & ap_const_lv1_0);
    tmp_22_cast_fu_658_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_17_fu_653_p2),32));
    tmp_22_fu_559_p2 <= std_logic_vector(unsigned(p_shl6_cast_fu_543_p1) + unsigned(p_shl7_cast_fu_555_p1));
    tmp_23_cast_fu_694_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_18_fu_689_p2),32));
    tmp_23_fu_585_p2 <= std_logic_vector(unsigned(ir_cast3_cast1_reg_832) + unsigned(tmp_22_reg_918));
    tmp_24_cast_fu_704_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_19_fu_699_p2),32));
    tmp_24_fu_616_p3 <= (tmp_23_reg_935 & ap_const_lv1_0);
    tmp_25_fu_627_p2 <= std_logic_vector(unsigned(p_shl4_cast_fu_609_p3) + unsigned(p_shl5_cast_fu_623_p1));
    tmp_26_fu_633_p2 <= std_logic_vector(unsigned(ic_cast2_cast1_reg_866) + unsigned(tmp_25_fu_627_p2));
    tmp_27_fu_663_p2 <= std_logic_vector(unsigned(p_oc_0_1_cast_cast_reg_878) + unsigned(tmp_25_reg_957));
    tmp_28_fu_672_p2 <= std_logic_vector(unsigned(p_oc_0_2_cast_cast_reg_885) + unsigned(tmp_25_reg_957));
    tmp_29_fu_681_p2 <= std_logic_vector(unsigned(p_or_1_cast_cast_reg_847) + unsigned(tmp_22_reg_918));
    tmp_2_cast_fu_393_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_fu_385_p3),9));
    tmp_2_fu_459_p2 <= std_logic_vector(unsigned(tmp_10_cast_reg_837) + unsigned(ic_cast2_cast_fu_455_p1));
    tmp_30_fu_716_p3 <= (tmp_29_reg_973 & ap_const_lv1_0);
    tmp_31_fu_727_p2 <= std_logic_vector(unsigned(p_shl2_cast_fu_709_p3) + unsigned(p_shl3_cast_fu_723_p1));
    tmp_32_cast_fu_638_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_26_fu_633_p2),32));
    tmp_32_fu_733_p2 <= std_logic_vector(unsigned(ic_cast2_cast1_reg_866) + unsigned(tmp_31_fu_727_p2));
    tmp_33_cast_fu_667_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_27_fu_663_p2),32));
    tmp_33_fu_743_p2 <= std_logic_vector(unsigned(p_oc_0_1_cast_cast_reg_878) + unsigned(tmp_31_fu_727_p2));
    tmp_34_cast_fu_676_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_28_fu_672_p2),32));
    tmp_34_fu_753_p2 <= std_logic_vector(unsigned(p_oc_0_2_cast_cast_reg_885) + unsigned(tmp_31_reg_995));
    tmp_35_fu_685_p2 <= std_logic_vector(unsigned(p_or_2_cast_cast_reg_852) + unsigned(tmp_22_reg_918));
    tmp_36_fu_769_p3 <= (tmp_35_reg_979 & ap_const_lv1_0);
    tmp_37_fu_780_p2 <= std_logic_vector(unsigned(p_shl_cast_fu_762_p3) + unsigned(p_shl1_cast_fu_776_p1));
    tmp_38_fu_786_p2 <= std_logic_vector(unsigned(ic_cast2_cast1_reg_866) + unsigned(tmp_37_fu_780_p2));
    tmp_39_cast_fu_738_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_32_fu_733_p2),32));
    tmp_39_fu_796_p2 <= std_logic_vector(unsigned(p_oc_0_1_cast_cast_reg_878) + unsigned(tmp_37_reg_1000));
    tmp_3_fu_439_p2 <= "1" when (ic_reg_296 = ap_const_lv5_10) else "0";
    tmp_40_cast_fu_748_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_33_fu_743_p2),32));
    tmp_40_fu_805_p2 <= std_logic_vector(unsigned(p_oc_0_2_cast_cast_reg_885) + unsigned(tmp_37_reg_1000));
    tmp_41_cast_fu_757_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_34_fu_753_p2),32));
    tmp_46_cast_fu_791_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_38_fu_786_p2),32));
    tmp_47_cast_fu_800_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_39_fu_796_p2),32));
    tmp_48_cast_fu_809_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_40_fu_805_p2),32));
    tmp_5_fu_483_p2 <= "1" when (oc_phi_fu_311_p4 = ap_const_lv5_10) else "0";
    tmp_8_fu_405_p2 <= std_logic_vector(unsigned(ir_cast3_cast_fu_401_p1) + unsigned(tmp_2_cast_fu_393_p1));
    tmp_9_fu_495_p3 <= (oc_phi_fu_311_p4 & ap_const_lv3_0);
    tmp_fu_385_p3 <= (id_cast4_mid2_v_fu_373_p3 & ap_const_lv4_0);
end behav;
