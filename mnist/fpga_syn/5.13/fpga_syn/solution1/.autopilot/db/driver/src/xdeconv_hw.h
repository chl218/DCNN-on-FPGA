// ==============================================================
// File generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2017.1
// Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
// 
// ==============================================================

// CTRL_BUS
// 0x00 : Control signals
//        bit 0  - ap_start (Read/Write/COH)
//        bit 1  - ap_done (Read/COR)
//        bit 2  - ap_idle (Read)
//        bit 3  - ap_ready (Read)
//        bit 7  - auto_restart (Read/Write)
//        others - reserved
// 0x04 : Global Interrupt Enable Register
//        bit 0  - Global Interrupt Enable (Read/Write)
//        others - reserved
// 0x08 : IP Interrupt Enable Register (Read/Write)
//        bit 0  - Channel 0 (ap_done)
//        bit 1  - Channel 1 (ap_ready)
//        others - reserved
// 0x0c : IP Interrupt Status Register (Read/TOW)
//        bit 0  - Channel 0 (ap_done)
//        bit 1  - Channel 1 (ap_ready)
//        others - reserved
// 0x10 : Data signal of x_I_h
//        bit 5~0 - x_I_h[5:0] (Read/Write)
//        others  - reserved
// 0x14 : reserved
// 0x18 : Data signal of x_I_w
//        bit 5~0 - x_I_w[5:0] (Read/Write)
//        others  - reserved
// 0x1c : reserved
// 0x20 : Data signal of x_I_c
//        bit 5~0 - x_I_c[5:0] (Read/Write)
//        others  - reserved
// 0x24 : reserved
// 0x28 : Data signal of x_O_h
//        bit 5~0 - x_O_h[5:0] (Read/Write)
//        others  - reserved
// 0x2c : reserved
// 0x30 : Data signal of x_O_w
//        bit 5~0 - x_O_w[5:0] (Read/Write)
//        others  - reserved
// 0x34 : reserved
// 0x38 : Data signal of x_O_c
//        bit 5~0 - x_O_c[5:0] (Read/Write)
//        others  - reserved
// 0x3c : reserved
// 0x40 : Data signal of x_K
//        bit 5~0 - x_K[5:0] (Read/Write)
//        others  - reserved
// 0x44 : reserved
// 0x48 : Data signal of x_S
//        bit 5~0 - x_S[5:0] (Read/Write)
//        others  - reserved
// 0x4c : reserved
// 0x50 : Data signal of x_P
//        bit 5~0 - x_P[5:0] (Read/Write)
//        others  - reserved
// 0x54 : reserved
// 0x58 : Data signal of x_norm
//        bit 0  - x_norm[0] (Read/Write)
//        others - reserved
// 0x5c : reserved
// (SC = Self Clear, COR = Clear on Read, TOW = Toggle on Write, COH = Clear on Handshake)

#define XDECONV_CTRL_BUS_ADDR_AP_CTRL     0x00
#define XDECONV_CTRL_BUS_ADDR_GIE         0x04
#define XDECONV_CTRL_BUS_ADDR_IER         0x08
#define XDECONV_CTRL_BUS_ADDR_ISR         0x0c
#define XDECONV_CTRL_BUS_ADDR_X_I_H_DATA  0x10
#define XDECONV_CTRL_BUS_BITS_X_I_H_DATA  6
#define XDECONV_CTRL_BUS_ADDR_X_I_W_DATA  0x18
#define XDECONV_CTRL_BUS_BITS_X_I_W_DATA  6
#define XDECONV_CTRL_BUS_ADDR_X_I_C_DATA  0x20
#define XDECONV_CTRL_BUS_BITS_X_I_C_DATA  6
#define XDECONV_CTRL_BUS_ADDR_X_O_H_DATA  0x28
#define XDECONV_CTRL_BUS_BITS_X_O_H_DATA  6
#define XDECONV_CTRL_BUS_ADDR_X_O_W_DATA  0x30
#define XDECONV_CTRL_BUS_BITS_X_O_W_DATA  6
#define XDECONV_CTRL_BUS_ADDR_X_O_C_DATA  0x38
#define XDECONV_CTRL_BUS_BITS_X_O_C_DATA  6
#define XDECONV_CTRL_BUS_ADDR_X_K_DATA    0x40
#define XDECONV_CTRL_BUS_BITS_X_K_DATA    6
#define XDECONV_CTRL_BUS_ADDR_X_S_DATA    0x48
#define XDECONV_CTRL_BUS_BITS_X_S_DATA    6
#define XDECONV_CTRL_BUS_ADDR_X_P_DATA    0x50
#define XDECONV_CTRL_BUS_BITS_X_P_DATA    6
#define XDECONV_CTRL_BUS_ADDR_X_NORM_DATA 0x58
#define XDECONV_CTRL_BUS_BITS_X_NORM_DATA 1

