// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2017.1
// Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _p_extend_stream_283_HH_
#define _p_extend_stream_283_HH_

#include "systemc.h"
#include "AESL_pkg.h"


namespace ap_rtl {

struct p_extend_stream_283 : public sc_module {
    // Port declarations 13
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_in< sc_logic > ap_continue;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_in< sc_lv<18> > stream_i_V_V1_dout;
    sc_in< sc_logic > stream_i_V_V1_empty_n;
    sc_out< sc_logic > stream_i_V_V1_read;
    sc_out< sc_lv<18> > stream_o_V_V_din;
    sc_in< sc_logic > stream_o_V_V_full_n;
    sc_out< sc_logic > stream_o_V_V_write;


    // Module declarations
    p_extend_stream_283(sc_module_name name);
    SC_HAS_PROCESS(p_extend_stream_283);

    ~p_extend_stream_283();

    sc_trace_file* mVcdFile;

    sc_signal< sc_logic > ap_done_reg;
    sc_signal< sc_lv<36> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_logic > stream_i_V_V1_blk_n;
    sc_signal< sc_logic > ap_CS_fsm_pp0_stage0;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter1;
    sc_signal< bool > ap_block_pp0_stage0;
    sc_signal< sc_logic > stream_o_V_V_blk_n;
    sc_signal< sc_logic > ap_CS_fsm_pp1_stage1;
    sc_signal< sc_logic > ap_enable_reg_pp1_iter0;
    sc_signal< bool > ap_block_pp1_stage1;
    sc_signal< sc_lv<1> > exitcond9_reg_798;
    sc_signal< sc_logic > ap_CS_fsm_pp1_stage2;
    sc_signal< bool > ap_block_pp1_stage2;
    sc_signal< sc_logic > ap_CS_fsm_pp1_stage3;
    sc_signal< bool > ap_block_pp1_stage3;
    sc_signal< sc_logic > ap_CS_fsm_pp1_stage4;
    sc_signal< bool > ap_block_pp1_stage4;
    sc_signal< sc_logic > ap_CS_fsm_pp1_stage5;
    sc_signal< bool > ap_block_pp1_stage5;
    sc_signal< sc_logic > ap_CS_fsm_pp1_stage6;
    sc_signal< bool > ap_block_pp1_stage6;
    sc_signal< sc_logic > ap_CS_fsm_pp1_stage7;
    sc_signal< bool > ap_block_pp1_stage7;
    sc_signal< sc_logic > ap_CS_fsm_pp1_stage8;
    sc_signal< bool > ap_block_pp1_stage8;
    sc_signal< sc_logic > ap_CS_fsm_pp1_stage9;
    sc_signal< bool > ap_block_pp1_stage9;
    sc_signal< sc_logic > ap_CS_fsm_pp1_stage10;
    sc_signal< bool > ap_block_pp1_stage10;
    sc_signal< sc_logic > ap_CS_fsm_pp1_stage11;
    sc_signal< bool > ap_block_pp1_stage11;
    sc_signal< sc_logic > ap_CS_fsm_pp1_stage12;
    sc_signal< bool > ap_block_pp1_stage12;
    sc_signal< sc_logic > ap_CS_fsm_pp1_stage13;
    sc_signal< bool > ap_block_pp1_stage13;
    sc_signal< sc_logic > ap_CS_fsm_pp1_stage14;
    sc_signal< bool > ap_block_pp1_stage14;
    sc_signal< sc_logic > ap_CS_fsm_pp1_stage15;
    sc_signal< bool > ap_block_pp1_stage15;
    sc_signal< sc_logic > ap_CS_fsm_pp1_stage16;
    sc_signal< bool > ap_block_pp1_stage16;
    sc_signal< sc_logic > ap_CS_fsm_pp1_stage17;
    sc_signal< bool > ap_block_pp1_stage17;
    sc_signal< sc_logic > ap_CS_fsm_pp1_stage18;
    sc_signal< bool > ap_block_pp1_stage18;
    sc_signal< sc_logic > ap_CS_fsm_pp1_stage19;
    sc_signal< bool > ap_block_pp1_stage19;
    sc_signal< sc_logic > ap_CS_fsm_pp1_stage20;
    sc_signal< bool > ap_block_pp1_stage20;
    sc_signal< sc_logic > ap_CS_fsm_pp1_stage21;
    sc_signal< bool > ap_block_pp1_stage21;
    sc_signal< sc_logic > ap_CS_fsm_pp1_stage22;
    sc_signal< bool > ap_block_pp1_stage22;
    sc_signal< sc_logic > ap_CS_fsm_pp1_stage23;
    sc_signal< bool > ap_block_pp1_stage23;
    sc_signal< sc_logic > ap_CS_fsm_pp1_stage24;
    sc_signal< bool > ap_block_pp1_stage24;
    sc_signal< sc_logic > ap_CS_fsm_pp1_stage25;
    sc_signal< bool > ap_block_pp1_stage25;
    sc_signal< sc_logic > ap_CS_fsm_pp1_stage26;
    sc_signal< bool > ap_block_pp1_stage26;
    sc_signal< sc_logic > ap_CS_fsm_pp1_stage27;
    sc_signal< bool > ap_block_pp1_stage27;
    sc_signal< sc_logic > ap_CS_fsm_pp1_stage28;
    sc_signal< bool > ap_block_pp1_stage28;
    sc_signal< sc_logic > ap_CS_fsm_pp1_stage29;
    sc_signal< bool > ap_block_pp1_stage29;
    sc_signal< sc_logic > ap_CS_fsm_pp1_stage30;
    sc_signal< bool > ap_block_pp1_stage30;
    sc_signal< sc_logic > ap_CS_fsm_pp1_stage31;
    sc_signal< bool > ap_block_pp1_stage31;
    sc_signal< sc_logic > ap_CS_fsm_pp1_stage0;
    sc_signal< sc_logic > ap_enable_reg_pp1_iter1;
    sc_signal< bool > ap_block_pp1_stage0;
    sc_signal< sc_lv<6> > p_9_reg_255;
    sc_signal< sc_lv<8> > p_s_reg_266;
    sc_signal< sc_lv<1> > exitcond_fu_277_p2;
    sc_signal< bool > ap_block_state2_pp0_stage0_iter0;
    sc_signal< bool > ap_block_state3_pp0_stage0_iter1;
    sc_signal< bool > ap_block_pp0_stage0_11001;
    sc_signal< sc_lv<6> > oc_V_fu_283_p2;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter0;
    sc_signal< sc_lv<5> > tmp_220_fu_289_p1;
    sc_signal< sc_lv<5> > tmp_220_reg_794;
    sc_signal< sc_lv<1> > exitcond9_fu_453_p2;
    sc_signal< bool > ap_block_state5_pp1_stage0_iter0;
    sc_signal< bool > ap_block_state37_pp1_stage0_iter1;
    sc_signal< bool > ap_block_pp1_stage0_11001;
    sc_signal< sc_lv<8> > rep_amt_V_fu_459_p2;
    sc_signal< sc_lv<8> > rep_amt_V_reg_802;
    sc_signal< bool > ap_block_state1;
    sc_signal< bool > ap_block_pp0_stage0_subdone;
    sc_signal< sc_logic > ap_condition_pp0_exit_iter0_state2;
    sc_signal< sc_logic > ap_CS_fsm_state4;
    sc_signal< bool > ap_block_pp1_stage0_subdone;
    sc_signal< sc_logic > ap_condition_pp1_exit_iter0_state5;
    sc_signal< bool > ap_block_state36_pp1_stage31_iter0;
    sc_signal< bool > ap_block_pp1_stage31_subdone;
    sc_signal< sc_lv<8> > p_s_phi_fu_270_p4;
    sc_signal< bool > ap_block_state6_pp1_stage1_iter0;
    sc_signal< bool > ap_block_pp1_stage1_11001;
    sc_signal< bool > ap_block_state7_pp1_stage2_iter0;
    sc_signal< bool > ap_block_pp1_stage2_11001;
    sc_signal< bool > ap_block_state8_pp1_stage3_iter0;
    sc_signal< bool > ap_block_pp1_stage3_11001;
    sc_signal< bool > ap_block_state9_pp1_stage4_iter0;
    sc_signal< bool > ap_block_pp1_stage4_11001;
    sc_signal< bool > ap_block_state10_pp1_stage5_iter0;
    sc_signal< bool > ap_block_pp1_stage5_11001;
    sc_signal< bool > ap_block_state11_pp1_stage6_iter0;
    sc_signal< bool > ap_block_pp1_stage6_11001;
    sc_signal< bool > ap_block_state12_pp1_stage7_iter0;
    sc_signal< bool > ap_block_pp1_stage7_11001;
    sc_signal< bool > ap_block_state13_pp1_stage8_iter0;
    sc_signal< bool > ap_block_pp1_stage8_11001;
    sc_signal< bool > ap_block_state14_pp1_stage9_iter0;
    sc_signal< bool > ap_block_pp1_stage9_11001;
    sc_signal< bool > ap_block_state15_pp1_stage10_iter0;
    sc_signal< bool > ap_block_pp1_stage10_11001;
    sc_signal< bool > ap_block_state16_pp1_stage11_iter0;
    sc_signal< bool > ap_block_pp1_stage11_11001;
    sc_signal< bool > ap_block_state17_pp1_stage12_iter0;
    sc_signal< bool > ap_block_pp1_stage12_11001;
    sc_signal< bool > ap_block_state18_pp1_stage13_iter0;
    sc_signal< bool > ap_block_pp1_stage13_11001;
    sc_signal< bool > ap_block_state19_pp1_stage14_iter0;
    sc_signal< bool > ap_block_pp1_stage14_11001;
    sc_signal< bool > ap_block_state20_pp1_stage15_iter0;
    sc_signal< bool > ap_block_pp1_stage15_11001;
    sc_signal< bool > ap_block_state21_pp1_stage16_iter0;
    sc_signal< bool > ap_block_pp1_stage16_11001;
    sc_signal< bool > ap_block_state22_pp1_stage17_iter0;
    sc_signal< bool > ap_block_pp1_stage17_11001;
    sc_signal< bool > ap_block_state23_pp1_stage18_iter0;
    sc_signal< bool > ap_block_pp1_stage18_11001;
    sc_signal< bool > ap_block_state24_pp1_stage19_iter0;
    sc_signal< bool > ap_block_pp1_stage19_11001;
    sc_signal< bool > ap_block_state25_pp1_stage20_iter0;
    sc_signal< bool > ap_block_pp1_stage20_11001;
    sc_signal< bool > ap_block_state26_pp1_stage21_iter0;
    sc_signal< bool > ap_block_pp1_stage21_11001;
    sc_signal< bool > ap_block_state27_pp1_stage22_iter0;
    sc_signal< bool > ap_block_pp1_stage22_11001;
    sc_signal< bool > ap_block_state28_pp1_stage23_iter0;
    sc_signal< bool > ap_block_pp1_stage23_11001;
    sc_signal< bool > ap_block_state29_pp1_stage24_iter0;
    sc_signal< bool > ap_block_pp1_stage24_11001;
    sc_signal< bool > ap_block_state30_pp1_stage25_iter0;
    sc_signal< bool > ap_block_pp1_stage25_11001;
    sc_signal< bool > ap_block_state31_pp1_stage26_iter0;
    sc_signal< bool > ap_block_pp1_stage26_11001;
    sc_signal< bool > ap_block_state32_pp1_stage27_iter0;
    sc_signal< bool > ap_block_pp1_stage27_11001;
    sc_signal< bool > ap_block_state33_pp1_stage28_iter0;
    sc_signal< bool > ap_block_pp1_stage28_11001;
    sc_signal< bool > ap_block_state34_pp1_stage29_iter0;
    sc_signal< bool > ap_block_pp1_stage29_11001;
    sc_signal< bool > ap_block_state35_pp1_stage30_iter0;
    sc_signal< bool > ap_block_pp1_stage30_11001;
    sc_signal< bool > ap_block_pp1_stage31_11001;
    sc_signal< bool > ap_block_pp1_stage1_01001;
    sc_signal< bool > ap_block_pp1_stage2_01001;
    sc_signal< bool > ap_block_pp1_stage3_01001;
    sc_signal< bool > ap_block_pp1_stage4_01001;
    sc_signal< bool > ap_block_pp1_stage5_01001;
    sc_signal< bool > ap_block_pp1_stage6_01001;
    sc_signal< bool > ap_block_pp1_stage7_01001;
    sc_signal< bool > ap_block_pp1_stage8_01001;
    sc_signal< bool > ap_block_pp1_stage9_01001;
    sc_signal< bool > ap_block_pp1_stage10_01001;
    sc_signal< bool > ap_block_pp1_stage11_01001;
    sc_signal< bool > ap_block_pp1_stage12_01001;
    sc_signal< bool > ap_block_pp1_stage13_01001;
    sc_signal< bool > ap_block_pp1_stage14_01001;
    sc_signal< bool > ap_block_pp1_stage15_01001;
    sc_signal< bool > ap_block_pp1_stage16_01001;
    sc_signal< bool > ap_block_pp1_stage17_01001;
    sc_signal< bool > ap_block_pp1_stage18_01001;
    sc_signal< bool > ap_block_pp1_stage19_01001;
    sc_signal< bool > ap_block_pp1_stage20_01001;
    sc_signal< bool > ap_block_pp1_stage21_01001;
    sc_signal< bool > ap_block_pp1_stage22_01001;
    sc_signal< bool > ap_block_pp1_stage23_01001;
    sc_signal< bool > ap_block_pp1_stage24_01001;
    sc_signal< bool > ap_block_pp1_stage25_01001;
    sc_signal< bool > ap_block_pp1_stage26_01001;
    sc_signal< bool > ap_block_pp1_stage27_01001;
    sc_signal< bool > ap_block_pp1_stage28_01001;
    sc_signal< bool > ap_block_pp1_stage29_01001;
    sc_signal< bool > ap_block_pp1_stage30_01001;
    sc_signal< bool > ap_block_pp1_stage31_01001;
    sc_signal< bool > ap_block_pp1_stage0_01001;
    sc_signal< sc_lv<18> > tmp_V_62_fu_114;
    sc_signal< sc_lv<18> > tmp_V_61_fu_118;
    sc_signal< sc_lv<18> > tmp_V_60_fu_122;
    sc_signal< sc_lv<18> > tmp_V_59_fu_126;
    sc_signal< sc_lv<18> > tmp_V_58_fu_130;
    sc_signal< sc_lv<18> > tmp_V_57_fu_134;
    sc_signal< sc_lv<18> > tmp_V_56_fu_138;
    sc_signal< sc_lv<18> > tmp_V_55_fu_142;
    sc_signal< sc_lv<18> > tmp_V_54_fu_146;
    sc_signal< sc_lv<18> > tmp_V_53_fu_150;
    sc_signal< sc_lv<18> > tmp_V_52_fu_154;
    sc_signal< sc_lv<18> > tmp_V_51_fu_158;
    sc_signal< sc_lv<18> > tmp_V_50_fu_162;
    sc_signal< sc_lv<18> > tmp_V_49_fu_166;
    sc_signal< sc_lv<18> > tmp_V_48_fu_170;
    sc_signal< sc_lv<18> > tmp_V_47_fu_174;
    sc_signal< sc_lv<18> > tmp_V_46_fu_178;
    sc_signal< sc_lv<18> > tmp_V_45_fu_182;
    sc_signal< sc_lv<18> > tmp_V_44_fu_186;
    sc_signal< sc_lv<18> > tmp_V_43_fu_190;
    sc_signal< sc_lv<18> > tmp_V_42_fu_194;
    sc_signal< sc_lv<18> > tmp_V_41_fu_198;
    sc_signal< sc_lv<18> > tmp_V_40_fu_202;
    sc_signal< sc_lv<18> > tmp_V_39_fu_206;
    sc_signal< sc_lv<18> > tmp_V_38_fu_210;
    sc_signal< sc_lv<18> > tmp_V_37_fu_214;
    sc_signal< sc_lv<18> > tmp_V_36_fu_218;
    sc_signal< sc_lv<18> > tmp_V_35_fu_222;
    sc_signal< sc_lv<18> > tmp_V_34_fu_226;
    sc_signal< sc_lv<18> > tmp_V_33_fu_230;
    sc_signal< sc_lv<18> > tmp_V_32_fu_234;
    sc_signal< sc_lv<18> > tmp_V_64_fu_238;
    sc_signal< sc_logic > ap_CS_fsm_state38;
    sc_signal< sc_lv<36> > ap_NS_fsm;
    sc_signal< bool > ap_block_pp1_stage1_subdone;
    sc_signal< bool > ap_block_pp1_stage2_subdone;
    sc_signal< bool > ap_block_pp1_stage3_subdone;
    sc_signal< bool > ap_block_pp1_stage4_subdone;
    sc_signal< bool > ap_block_pp1_stage5_subdone;
    sc_signal< bool > ap_block_pp1_stage6_subdone;
    sc_signal< bool > ap_block_pp1_stage7_subdone;
    sc_signal< bool > ap_block_pp1_stage8_subdone;
    sc_signal< bool > ap_block_pp1_stage9_subdone;
    sc_signal< bool > ap_block_pp1_stage10_subdone;
    sc_signal< bool > ap_block_pp1_stage11_subdone;
    sc_signal< bool > ap_block_pp1_stage12_subdone;
    sc_signal< bool > ap_block_pp1_stage13_subdone;
    sc_signal< bool > ap_block_pp1_stage14_subdone;
    sc_signal< bool > ap_block_pp1_stage15_subdone;
    sc_signal< bool > ap_block_pp1_stage16_subdone;
    sc_signal< bool > ap_block_pp1_stage17_subdone;
    sc_signal< bool > ap_block_pp1_stage18_subdone;
    sc_signal< bool > ap_block_pp1_stage19_subdone;
    sc_signal< bool > ap_block_pp1_stage20_subdone;
    sc_signal< bool > ap_block_pp1_stage21_subdone;
    sc_signal< bool > ap_block_pp1_stage22_subdone;
    sc_signal< bool > ap_block_pp1_stage23_subdone;
    sc_signal< bool > ap_block_pp1_stage24_subdone;
    sc_signal< bool > ap_block_pp1_stage25_subdone;
    sc_signal< bool > ap_block_pp1_stage26_subdone;
    sc_signal< bool > ap_block_pp1_stage27_subdone;
    sc_signal< bool > ap_block_pp1_stage28_subdone;
    sc_signal< bool > ap_block_pp1_stage29_subdone;
    sc_signal< bool > ap_block_pp1_stage30_subdone;
    sc_signal< sc_logic > ap_idle_pp0;
    sc_signal< sc_logic > ap_enable_pp0;
    sc_signal< sc_logic > ap_idle_pp1;
    sc_signal< sc_logic > ap_enable_pp1;
    sc_signal< bool > ap_condition_776;
    sc_signal< bool > ap_condition_782;
    sc_signal< bool > ap_condition_788;
    sc_signal< bool > ap_condition_794;
    sc_signal< bool > ap_condition_800;
    sc_signal< bool > ap_condition_806;
    sc_signal< bool > ap_condition_812;
    sc_signal< bool > ap_condition_818;
    sc_signal< bool > ap_condition_824;
    sc_signal< bool > ap_condition_830;
    sc_signal< bool > ap_condition_836;
    sc_signal< bool > ap_condition_842;
    sc_signal< bool > ap_condition_848;
    sc_signal< bool > ap_condition_854;
    sc_signal< bool > ap_condition_860;
    sc_signal< bool > ap_condition_866;
    sc_signal< bool > ap_condition_872;
    sc_signal< bool > ap_condition_878;
    sc_signal< bool > ap_condition_884;
    sc_signal< bool > ap_condition_890;
    sc_signal< bool > ap_condition_896;
    sc_signal< bool > ap_condition_902;
    sc_signal< bool > ap_condition_908;
    sc_signal< bool > ap_condition_914;
    sc_signal< bool > ap_condition_920;
    sc_signal< bool > ap_condition_926;
    sc_signal< bool > ap_condition_932;
    sc_signal< bool > ap_condition_938;
    sc_signal< bool > ap_condition_944;
    sc_signal< bool > ap_condition_950;
    sc_signal< bool > ap_condition_956;
    sc_signal< bool > ap_condition_962;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<36> ap_ST_fsm_state1;
    static const sc_lv<36> ap_ST_fsm_pp0_stage0;
    static const sc_lv<36> ap_ST_fsm_state4;
    static const sc_lv<36> ap_ST_fsm_pp1_stage0;
    static const sc_lv<36> ap_ST_fsm_pp1_stage1;
    static const sc_lv<36> ap_ST_fsm_pp1_stage2;
    static const sc_lv<36> ap_ST_fsm_pp1_stage3;
    static const sc_lv<36> ap_ST_fsm_pp1_stage4;
    static const sc_lv<36> ap_ST_fsm_pp1_stage5;
    static const sc_lv<36> ap_ST_fsm_pp1_stage6;
    static const sc_lv<36> ap_ST_fsm_pp1_stage7;
    static const sc_lv<36> ap_ST_fsm_pp1_stage8;
    static const sc_lv<36> ap_ST_fsm_pp1_stage9;
    static const sc_lv<36> ap_ST_fsm_pp1_stage10;
    static const sc_lv<36> ap_ST_fsm_pp1_stage11;
    static const sc_lv<36> ap_ST_fsm_pp1_stage12;
    static const sc_lv<36> ap_ST_fsm_pp1_stage13;
    static const sc_lv<36> ap_ST_fsm_pp1_stage14;
    static const sc_lv<36> ap_ST_fsm_pp1_stage15;
    static const sc_lv<36> ap_ST_fsm_pp1_stage16;
    static const sc_lv<36> ap_ST_fsm_pp1_stage17;
    static const sc_lv<36> ap_ST_fsm_pp1_stage18;
    static const sc_lv<36> ap_ST_fsm_pp1_stage19;
    static const sc_lv<36> ap_ST_fsm_pp1_stage20;
    static const sc_lv<36> ap_ST_fsm_pp1_stage21;
    static const sc_lv<36> ap_ST_fsm_pp1_stage22;
    static const sc_lv<36> ap_ST_fsm_pp1_stage23;
    static const sc_lv<36> ap_ST_fsm_pp1_stage24;
    static const sc_lv<36> ap_ST_fsm_pp1_stage25;
    static const sc_lv<36> ap_ST_fsm_pp1_stage26;
    static const sc_lv<36> ap_ST_fsm_pp1_stage27;
    static const sc_lv<36> ap_ST_fsm_pp1_stage28;
    static const sc_lv<36> ap_ST_fsm_pp1_stage29;
    static const sc_lv<36> ap_ST_fsm_pp1_stage30;
    static const sc_lv<36> ap_ST_fsm_pp1_stage31;
    static const sc_lv<36> ap_ST_fsm_state38;
    static const sc_lv<32> ap_const_lv32_0;
    static const bool ap_const_boolean_1;
    static const sc_lv<32> ap_const_lv32_1;
    static const bool ap_const_boolean_0;
    static const sc_lv<32> ap_const_lv32_4;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<32> ap_const_lv32_5;
    static const sc_lv<32> ap_const_lv32_6;
    static const sc_lv<32> ap_const_lv32_7;
    static const sc_lv<32> ap_const_lv32_8;
    static const sc_lv<32> ap_const_lv32_9;
    static const sc_lv<32> ap_const_lv32_A;
    static const sc_lv<32> ap_const_lv32_B;
    static const sc_lv<32> ap_const_lv32_C;
    static const sc_lv<32> ap_const_lv32_D;
    static const sc_lv<32> ap_const_lv32_E;
    static const sc_lv<32> ap_const_lv32_F;
    static const sc_lv<32> ap_const_lv32_10;
    static const sc_lv<32> ap_const_lv32_11;
    static const sc_lv<32> ap_const_lv32_12;
    static const sc_lv<32> ap_const_lv32_13;
    static const sc_lv<32> ap_const_lv32_14;
    static const sc_lv<32> ap_const_lv32_15;
    static const sc_lv<32> ap_const_lv32_16;
    static const sc_lv<32> ap_const_lv32_17;
    static const sc_lv<32> ap_const_lv32_18;
    static const sc_lv<32> ap_const_lv32_19;
    static const sc_lv<32> ap_const_lv32_1A;
    static const sc_lv<32> ap_const_lv32_1B;
    static const sc_lv<32> ap_const_lv32_1C;
    static const sc_lv<32> ap_const_lv32_1D;
    static const sc_lv<32> ap_const_lv32_1E;
    static const sc_lv<32> ap_const_lv32_1F;
    static const sc_lv<32> ap_const_lv32_20;
    static const sc_lv<32> ap_const_lv32_21;
    static const sc_lv<32> ap_const_lv32_22;
    static const sc_lv<32> ap_const_lv32_3;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<6> ap_const_lv6_0;
    static const sc_lv<8> ap_const_lv8_0;
    static const sc_lv<5> ap_const_lv5_0;
    static const sc_lv<5> ap_const_lv5_1;
    static const sc_lv<5> ap_const_lv5_2;
    static const sc_lv<5> ap_const_lv5_3;
    static const sc_lv<5> ap_const_lv5_4;
    static const sc_lv<5> ap_const_lv5_5;
    static const sc_lv<5> ap_const_lv5_6;
    static const sc_lv<5> ap_const_lv5_7;
    static const sc_lv<5> ap_const_lv5_8;
    static const sc_lv<5> ap_const_lv5_9;
    static const sc_lv<5> ap_const_lv5_A;
    static const sc_lv<5> ap_const_lv5_B;
    static const sc_lv<5> ap_const_lv5_C;
    static const sc_lv<5> ap_const_lv5_D;
    static const sc_lv<5> ap_const_lv5_E;
    static const sc_lv<5> ap_const_lv5_F;
    static const sc_lv<5> ap_const_lv5_10;
    static const sc_lv<5> ap_const_lv5_11;
    static const sc_lv<5> ap_const_lv5_12;
    static const sc_lv<5> ap_const_lv5_13;
    static const sc_lv<5> ap_const_lv5_14;
    static const sc_lv<5> ap_const_lv5_15;
    static const sc_lv<5> ap_const_lv5_16;
    static const sc_lv<5> ap_const_lv5_17;
    static const sc_lv<5> ap_const_lv5_18;
    static const sc_lv<5> ap_const_lv5_19;
    static const sc_lv<5> ap_const_lv5_1A;
    static const sc_lv<5> ap_const_lv5_1B;
    static const sc_lv<5> ap_const_lv5_1C;
    static const sc_lv<5> ap_const_lv5_1D;
    static const sc_lv<5> ap_const_lv5_1E;
    static const sc_lv<5> ap_const_lv5_1F;
    static const sc_lv<6> ap_const_lv6_20;
    static const sc_lv<6> ap_const_lv6_1;
    static const sc_lv<8> ap_const_lv8_90;
    static const sc_lv<8> ap_const_lv8_1;
    static const sc_lv<32> ap_const_lv32_23;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_ap_CS_fsm_pp0_stage0();
    void thread_ap_CS_fsm_pp1_stage0();
    void thread_ap_CS_fsm_pp1_stage1();
    void thread_ap_CS_fsm_pp1_stage10();
    void thread_ap_CS_fsm_pp1_stage11();
    void thread_ap_CS_fsm_pp1_stage12();
    void thread_ap_CS_fsm_pp1_stage13();
    void thread_ap_CS_fsm_pp1_stage14();
    void thread_ap_CS_fsm_pp1_stage15();
    void thread_ap_CS_fsm_pp1_stage16();
    void thread_ap_CS_fsm_pp1_stage17();
    void thread_ap_CS_fsm_pp1_stage18();
    void thread_ap_CS_fsm_pp1_stage19();
    void thread_ap_CS_fsm_pp1_stage2();
    void thread_ap_CS_fsm_pp1_stage20();
    void thread_ap_CS_fsm_pp1_stage21();
    void thread_ap_CS_fsm_pp1_stage22();
    void thread_ap_CS_fsm_pp1_stage23();
    void thread_ap_CS_fsm_pp1_stage24();
    void thread_ap_CS_fsm_pp1_stage25();
    void thread_ap_CS_fsm_pp1_stage26();
    void thread_ap_CS_fsm_pp1_stage27();
    void thread_ap_CS_fsm_pp1_stage28();
    void thread_ap_CS_fsm_pp1_stage29();
    void thread_ap_CS_fsm_pp1_stage3();
    void thread_ap_CS_fsm_pp1_stage30();
    void thread_ap_CS_fsm_pp1_stage31();
    void thread_ap_CS_fsm_pp1_stage4();
    void thread_ap_CS_fsm_pp1_stage5();
    void thread_ap_CS_fsm_pp1_stage6();
    void thread_ap_CS_fsm_pp1_stage7();
    void thread_ap_CS_fsm_pp1_stage8();
    void thread_ap_CS_fsm_pp1_stage9();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state38();
    void thread_ap_CS_fsm_state4();
    void thread_ap_block_pp0_stage0();
    void thread_ap_block_pp0_stage0_11001();
    void thread_ap_block_pp0_stage0_subdone();
    void thread_ap_block_pp1_stage0();
    void thread_ap_block_pp1_stage0_01001();
    void thread_ap_block_pp1_stage0_11001();
    void thread_ap_block_pp1_stage0_subdone();
    void thread_ap_block_pp1_stage1();
    void thread_ap_block_pp1_stage10();
    void thread_ap_block_pp1_stage10_01001();
    void thread_ap_block_pp1_stage10_11001();
    void thread_ap_block_pp1_stage10_subdone();
    void thread_ap_block_pp1_stage11();
    void thread_ap_block_pp1_stage11_01001();
    void thread_ap_block_pp1_stage11_11001();
    void thread_ap_block_pp1_stage11_subdone();
    void thread_ap_block_pp1_stage12();
    void thread_ap_block_pp1_stage12_01001();
    void thread_ap_block_pp1_stage12_11001();
    void thread_ap_block_pp1_stage12_subdone();
    void thread_ap_block_pp1_stage13();
    void thread_ap_block_pp1_stage13_01001();
    void thread_ap_block_pp1_stage13_11001();
    void thread_ap_block_pp1_stage13_subdone();
    void thread_ap_block_pp1_stage14();
    void thread_ap_block_pp1_stage14_01001();
    void thread_ap_block_pp1_stage14_11001();
    void thread_ap_block_pp1_stage14_subdone();
    void thread_ap_block_pp1_stage15();
    void thread_ap_block_pp1_stage15_01001();
    void thread_ap_block_pp1_stage15_11001();
    void thread_ap_block_pp1_stage15_subdone();
    void thread_ap_block_pp1_stage16();
    void thread_ap_block_pp1_stage16_01001();
    void thread_ap_block_pp1_stage16_11001();
    void thread_ap_block_pp1_stage16_subdone();
    void thread_ap_block_pp1_stage17();
    void thread_ap_block_pp1_stage17_01001();
    void thread_ap_block_pp1_stage17_11001();
    void thread_ap_block_pp1_stage17_subdone();
    void thread_ap_block_pp1_stage18();
    void thread_ap_block_pp1_stage18_01001();
    void thread_ap_block_pp1_stage18_11001();
    void thread_ap_block_pp1_stage18_subdone();
    void thread_ap_block_pp1_stage19();
    void thread_ap_block_pp1_stage19_01001();
    void thread_ap_block_pp1_stage19_11001();
    void thread_ap_block_pp1_stage19_subdone();
    void thread_ap_block_pp1_stage1_01001();
    void thread_ap_block_pp1_stage1_11001();
    void thread_ap_block_pp1_stage1_subdone();
    void thread_ap_block_pp1_stage2();
    void thread_ap_block_pp1_stage20();
    void thread_ap_block_pp1_stage20_01001();
    void thread_ap_block_pp1_stage20_11001();
    void thread_ap_block_pp1_stage20_subdone();
    void thread_ap_block_pp1_stage21();
    void thread_ap_block_pp1_stage21_01001();
    void thread_ap_block_pp1_stage21_11001();
    void thread_ap_block_pp1_stage21_subdone();
    void thread_ap_block_pp1_stage22();
    void thread_ap_block_pp1_stage22_01001();
    void thread_ap_block_pp1_stage22_11001();
    void thread_ap_block_pp1_stage22_subdone();
    void thread_ap_block_pp1_stage23();
    void thread_ap_block_pp1_stage23_01001();
    void thread_ap_block_pp1_stage23_11001();
    void thread_ap_block_pp1_stage23_subdone();
    void thread_ap_block_pp1_stage24();
    void thread_ap_block_pp1_stage24_01001();
    void thread_ap_block_pp1_stage24_11001();
    void thread_ap_block_pp1_stage24_subdone();
    void thread_ap_block_pp1_stage25();
    void thread_ap_block_pp1_stage25_01001();
    void thread_ap_block_pp1_stage25_11001();
    void thread_ap_block_pp1_stage25_subdone();
    void thread_ap_block_pp1_stage26();
    void thread_ap_block_pp1_stage26_01001();
    void thread_ap_block_pp1_stage26_11001();
    void thread_ap_block_pp1_stage26_subdone();
    void thread_ap_block_pp1_stage27();
    void thread_ap_block_pp1_stage27_01001();
    void thread_ap_block_pp1_stage27_11001();
    void thread_ap_block_pp1_stage27_subdone();
    void thread_ap_block_pp1_stage28();
    void thread_ap_block_pp1_stage28_01001();
    void thread_ap_block_pp1_stage28_11001();
    void thread_ap_block_pp1_stage28_subdone();
    void thread_ap_block_pp1_stage29();
    void thread_ap_block_pp1_stage29_01001();
    void thread_ap_block_pp1_stage29_11001();
    void thread_ap_block_pp1_stage29_subdone();
    void thread_ap_block_pp1_stage2_01001();
    void thread_ap_block_pp1_stage2_11001();
    void thread_ap_block_pp1_stage2_subdone();
    void thread_ap_block_pp1_stage3();
    void thread_ap_block_pp1_stage30();
    void thread_ap_block_pp1_stage30_01001();
    void thread_ap_block_pp1_stage30_11001();
    void thread_ap_block_pp1_stage30_subdone();
    void thread_ap_block_pp1_stage31();
    void thread_ap_block_pp1_stage31_01001();
    void thread_ap_block_pp1_stage31_11001();
    void thread_ap_block_pp1_stage31_subdone();
    void thread_ap_block_pp1_stage3_01001();
    void thread_ap_block_pp1_stage3_11001();
    void thread_ap_block_pp1_stage3_subdone();
    void thread_ap_block_pp1_stage4();
    void thread_ap_block_pp1_stage4_01001();
    void thread_ap_block_pp1_stage4_11001();
    void thread_ap_block_pp1_stage4_subdone();
    void thread_ap_block_pp1_stage5();
    void thread_ap_block_pp1_stage5_01001();
    void thread_ap_block_pp1_stage5_11001();
    void thread_ap_block_pp1_stage5_subdone();
    void thread_ap_block_pp1_stage6();
    void thread_ap_block_pp1_stage6_01001();
    void thread_ap_block_pp1_stage6_11001();
    void thread_ap_block_pp1_stage6_subdone();
    void thread_ap_block_pp1_stage7();
    void thread_ap_block_pp1_stage7_01001();
    void thread_ap_block_pp1_stage7_11001();
    void thread_ap_block_pp1_stage7_subdone();
    void thread_ap_block_pp1_stage8();
    void thread_ap_block_pp1_stage8_01001();
    void thread_ap_block_pp1_stage8_11001();
    void thread_ap_block_pp1_stage8_subdone();
    void thread_ap_block_pp1_stage9();
    void thread_ap_block_pp1_stage9_01001();
    void thread_ap_block_pp1_stage9_11001();
    void thread_ap_block_pp1_stage9_subdone();
    void thread_ap_block_state1();
    void thread_ap_block_state10_pp1_stage5_iter0();
    void thread_ap_block_state11_pp1_stage6_iter0();
    void thread_ap_block_state12_pp1_stage7_iter0();
    void thread_ap_block_state13_pp1_stage8_iter0();
    void thread_ap_block_state14_pp1_stage9_iter0();
    void thread_ap_block_state15_pp1_stage10_iter0();
    void thread_ap_block_state16_pp1_stage11_iter0();
    void thread_ap_block_state17_pp1_stage12_iter0();
    void thread_ap_block_state18_pp1_stage13_iter0();
    void thread_ap_block_state19_pp1_stage14_iter0();
    void thread_ap_block_state20_pp1_stage15_iter0();
    void thread_ap_block_state21_pp1_stage16_iter0();
    void thread_ap_block_state22_pp1_stage17_iter0();
    void thread_ap_block_state23_pp1_stage18_iter0();
    void thread_ap_block_state24_pp1_stage19_iter0();
    void thread_ap_block_state25_pp1_stage20_iter0();
    void thread_ap_block_state26_pp1_stage21_iter0();
    void thread_ap_block_state27_pp1_stage22_iter0();
    void thread_ap_block_state28_pp1_stage23_iter0();
    void thread_ap_block_state29_pp1_stage24_iter0();
    void thread_ap_block_state2_pp0_stage0_iter0();
    void thread_ap_block_state30_pp1_stage25_iter0();
    void thread_ap_block_state31_pp1_stage26_iter0();
    void thread_ap_block_state32_pp1_stage27_iter0();
    void thread_ap_block_state33_pp1_stage28_iter0();
    void thread_ap_block_state34_pp1_stage29_iter0();
    void thread_ap_block_state35_pp1_stage30_iter0();
    void thread_ap_block_state36_pp1_stage31_iter0();
    void thread_ap_block_state37_pp1_stage0_iter1();
    void thread_ap_block_state3_pp0_stage0_iter1();
    void thread_ap_block_state5_pp1_stage0_iter0();
    void thread_ap_block_state6_pp1_stage1_iter0();
    void thread_ap_block_state7_pp1_stage2_iter0();
    void thread_ap_block_state8_pp1_stage3_iter0();
    void thread_ap_block_state9_pp1_stage4_iter0();
    void thread_ap_condition_776();
    void thread_ap_condition_782();
    void thread_ap_condition_788();
    void thread_ap_condition_794();
    void thread_ap_condition_800();
    void thread_ap_condition_806();
    void thread_ap_condition_812();
    void thread_ap_condition_818();
    void thread_ap_condition_824();
    void thread_ap_condition_830();
    void thread_ap_condition_836();
    void thread_ap_condition_842();
    void thread_ap_condition_848();
    void thread_ap_condition_854();
    void thread_ap_condition_860();
    void thread_ap_condition_866();
    void thread_ap_condition_872();
    void thread_ap_condition_878();
    void thread_ap_condition_884();
    void thread_ap_condition_890();
    void thread_ap_condition_896();
    void thread_ap_condition_902();
    void thread_ap_condition_908();
    void thread_ap_condition_914();
    void thread_ap_condition_920();
    void thread_ap_condition_926();
    void thread_ap_condition_932();
    void thread_ap_condition_938();
    void thread_ap_condition_944();
    void thread_ap_condition_950();
    void thread_ap_condition_956();
    void thread_ap_condition_962();
    void thread_ap_condition_pp0_exit_iter0_state2();
    void thread_ap_condition_pp1_exit_iter0_state5();
    void thread_ap_done();
    void thread_ap_enable_pp0();
    void thread_ap_enable_pp1();
    void thread_ap_idle();
    void thread_ap_idle_pp0();
    void thread_ap_idle_pp1();
    void thread_ap_ready();
    void thread_exitcond9_fu_453_p2();
    void thread_exitcond_fu_277_p2();
    void thread_oc_V_fu_283_p2();
    void thread_p_s_phi_fu_270_p4();
    void thread_rep_amt_V_fu_459_p2();
    void thread_stream_i_V_V1_blk_n();
    void thread_stream_i_V_V1_read();
    void thread_stream_o_V_V_blk_n();
    void thread_stream_o_V_V_din();
    void thread_stream_o_V_V_write();
    void thread_tmp_220_fu_289_p1();
    void thread_ap_NS_fsm();
};

}

using namespace ap_rtl;

#endif
