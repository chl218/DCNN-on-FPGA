// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2017.1
// Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module stream_deconv_387 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        stream_res_1_V_V_dout,
        stream_res_1_V_V_empty_n,
        stream_res_1_V_V_read,
        tmp_V_load_loc_dout,
        tmp_V_load_loc_empty_n,
        tmp_V_load_loc_read,
        stream_o_V_V_din,
        stream_o_V_V_full_n,
        stream_o_V_V_write,
        layer3_kernel_V_0_address0,
        layer3_kernel_V_0_ce0,
        layer3_kernel_V_0_q0,
        layer3_kernel_V_1_address0,
        layer3_kernel_V_1_ce0,
        layer3_kernel_V_1_q0,
        layer3_kernel_V_2_address0,
        layer3_kernel_V_2_ce0,
        layer3_kernel_V_2_q0,
        layer3_kernel_V_3_address0,
        layer3_kernel_V_3_ce0,
        layer3_kernel_V_3_q0,
        layer3_kernel_V_4_address0,
        layer3_kernel_V_4_ce0,
        layer3_kernel_V_4_q0,
        layer3_kernel_V_5_address0,
        layer3_kernel_V_5_ce0,
        layer3_kernel_V_5_q0,
        layer3_kernel_V_6_address0,
        layer3_kernel_V_6_ce0,
        layer3_kernel_V_6_q0,
        layer3_kernel_V_7_address0,
        layer3_kernel_V_7_ce0,
        layer3_kernel_V_7_q0,
        layer3_kernel_V_8_address0,
        layer3_kernel_V_8_ce0,
        layer3_kernel_V_8_q0,
        layer3_kernel_V_9_address0,
        layer3_kernel_V_9_ce0,
        layer3_kernel_V_9_q0,
        layer3_kernel_V_10_address0,
        layer3_kernel_V_10_ce0,
        layer3_kernel_V_10_q0,
        layer3_kernel_V_11_address0,
        layer3_kernel_V_11_ce0,
        layer3_kernel_V_11_q0,
        layer3_kernel_V_12_address0,
        layer3_kernel_V_12_ce0,
        layer3_kernel_V_12_q0,
        layer3_kernel_V_13_address0,
        layer3_kernel_V_13_ce0,
        layer3_kernel_V_13_q0,
        layer3_kernel_V_14_address0,
        layer3_kernel_V_14_ce0,
        layer3_kernel_V_14_q0,
        layer3_kernel_V_15_address0,
        layer3_kernel_V_15_ce0,
        layer3_kernel_V_15_q0,
        layer3_kernel_V_16_address0,
        layer3_kernel_V_16_ce0,
        layer3_kernel_V_16_q0,
        layer3_kernel_V_17_address0,
        layer3_kernel_V_17_ce0,
        layer3_kernel_V_17_q0,
        layer3_kernel_V_18_address0,
        layer3_kernel_V_18_ce0,
        layer3_kernel_V_18_q0,
        layer3_kernel_V_19_address0,
        layer3_kernel_V_19_ce0,
        layer3_kernel_V_19_q0,
        layer3_kernel_V_20_address0,
        layer3_kernel_V_20_ce0,
        layer3_kernel_V_20_q0,
        layer3_kernel_V_21_address0,
        layer3_kernel_V_21_ce0,
        layer3_kernel_V_21_q0,
        layer3_kernel_V_22_address0,
        layer3_kernel_V_22_ce0,
        layer3_kernel_V_22_q0,
        layer3_kernel_V_23_address0,
        layer3_kernel_V_23_ce0,
        layer3_kernel_V_23_q0,
        layer3_kernel_V_24_address0,
        layer3_kernel_V_24_ce0,
        layer3_kernel_V_24_q0,
        layer3_kernel_V_25_address0,
        layer3_kernel_V_25_ce0,
        layer3_kernel_V_25_q0,
        layer3_kernel_V_26_address0,
        layer3_kernel_V_26_ce0,
        layer3_kernel_V_26_q0,
        layer3_kernel_V_27_address0,
        layer3_kernel_V_27_ce0,
        layer3_kernel_V_27_q0,
        layer3_kernel_V_28_address0,
        layer3_kernel_V_28_ce0,
        layer3_kernel_V_28_q0,
        layer3_kernel_V_29_address0,
        layer3_kernel_V_29_ce0,
        layer3_kernel_V_29_q0,
        layer3_kernel_V_30_address0,
        layer3_kernel_V_30_ce0,
        layer3_kernel_V_30_q0,
        layer3_kernel_V_31_address0,
        layer3_kernel_V_31_ce0,
        layer3_kernel_V_31_q0
);

parameter    ap_ST_fsm_state1 = 9'd1;
parameter    ap_ST_fsm_state2 = 9'd2;
parameter    ap_ST_fsm_pp0_stage0 = 9'd4;
parameter    ap_ST_fsm_state5 = 9'd8;
parameter    ap_ST_fsm_pp1_stage0 = 9'd16;
parameter    ap_ST_fsm_pp1_stage1 = 9'd32;
parameter    ap_ST_fsm_state12 = 9'd64;
parameter    ap_ST_fsm_pp2_stage0 = 9'd128;
parameter    ap_ST_fsm_state16 = 9'd256;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
input  [17:0] stream_res_1_V_V_dout;
input   stream_res_1_V_V_empty_n;
output   stream_res_1_V_V_read;
input  [17:0] tmp_V_load_loc_dout;
input   tmp_V_load_loc_empty_n;
output   tmp_V_load_loc_read;
output  [17:0] stream_o_V_V_din;
input   stream_o_V_V_full_n;
output   stream_o_V_V_write;
output  [5:0] layer3_kernel_V_0_address0;
output   layer3_kernel_V_0_ce0;
input  [17:0] layer3_kernel_V_0_q0;
output  [5:0] layer3_kernel_V_1_address0;
output   layer3_kernel_V_1_ce0;
input  [17:0] layer3_kernel_V_1_q0;
output  [5:0] layer3_kernel_V_2_address0;
output   layer3_kernel_V_2_ce0;
input  [17:0] layer3_kernel_V_2_q0;
output  [5:0] layer3_kernel_V_3_address0;
output   layer3_kernel_V_3_ce0;
input  [17:0] layer3_kernel_V_3_q0;
output  [5:0] layer3_kernel_V_4_address0;
output   layer3_kernel_V_4_ce0;
input  [17:0] layer3_kernel_V_4_q0;
output  [5:0] layer3_kernel_V_5_address0;
output   layer3_kernel_V_5_ce0;
input  [17:0] layer3_kernel_V_5_q0;
output  [5:0] layer3_kernel_V_6_address0;
output   layer3_kernel_V_6_ce0;
input  [17:0] layer3_kernel_V_6_q0;
output  [5:0] layer3_kernel_V_7_address0;
output   layer3_kernel_V_7_ce0;
input  [17:0] layer3_kernel_V_7_q0;
output  [5:0] layer3_kernel_V_8_address0;
output   layer3_kernel_V_8_ce0;
input  [17:0] layer3_kernel_V_8_q0;
output  [5:0] layer3_kernel_V_9_address0;
output   layer3_kernel_V_9_ce0;
input  [17:0] layer3_kernel_V_9_q0;
output  [5:0] layer3_kernel_V_10_address0;
output   layer3_kernel_V_10_ce0;
input  [17:0] layer3_kernel_V_10_q0;
output  [5:0] layer3_kernel_V_11_address0;
output   layer3_kernel_V_11_ce0;
input  [17:0] layer3_kernel_V_11_q0;
output  [5:0] layer3_kernel_V_12_address0;
output   layer3_kernel_V_12_ce0;
input  [17:0] layer3_kernel_V_12_q0;
output  [5:0] layer3_kernel_V_13_address0;
output   layer3_kernel_V_13_ce0;
input  [17:0] layer3_kernel_V_13_q0;
output  [5:0] layer3_kernel_V_14_address0;
output   layer3_kernel_V_14_ce0;
input  [17:0] layer3_kernel_V_14_q0;
output  [5:0] layer3_kernel_V_15_address0;
output   layer3_kernel_V_15_ce0;
input  [17:0] layer3_kernel_V_15_q0;
output  [5:0] layer3_kernel_V_16_address0;
output   layer3_kernel_V_16_ce0;
input  [17:0] layer3_kernel_V_16_q0;
output  [5:0] layer3_kernel_V_17_address0;
output   layer3_kernel_V_17_ce0;
input  [17:0] layer3_kernel_V_17_q0;
output  [5:0] layer3_kernel_V_18_address0;
output   layer3_kernel_V_18_ce0;
input  [17:0] layer3_kernel_V_18_q0;
output  [5:0] layer3_kernel_V_19_address0;
output   layer3_kernel_V_19_ce0;
input  [17:0] layer3_kernel_V_19_q0;
output  [5:0] layer3_kernel_V_20_address0;
output   layer3_kernel_V_20_ce0;
input  [17:0] layer3_kernel_V_20_q0;
output  [5:0] layer3_kernel_V_21_address0;
output   layer3_kernel_V_21_ce0;
input  [17:0] layer3_kernel_V_21_q0;
output  [5:0] layer3_kernel_V_22_address0;
output   layer3_kernel_V_22_ce0;
input  [17:0] layer3_kernel_V_22_q0;
output  [5:0] layer3_kernel_V_23_address0;
output   layer3_kernel_V_23_ce0;
input  [17:0] layer3_kernel_V_23_q0;
output  [5:0] layer3_kernel_V_24_address0;
output   layer3_kernel_V_24_ce0;
input  [17:0] layer3_kernel_V_24_q0;
output  [5:0] layer3_kernel_V_25_address0;
output   layer3_kernel_V_25_ce0;
input  [17:0] layer3_kernel_V_25_q0;
output  [5:0] layer3_kernel_V_26_address0;
output   layer3_kernel_V_26_ce0;
input  [17:0] layer3_kernel_V_26_q0;
output  [5:0] layer3_kernel_V_27_address0;
output   layer3_kernel_V_27_ce0;
input  [17:0] layer3_kernel_V_27_q0;
output  [5:0] layer3_kernel_V_28_address0;
output   layer3_kernel_V_28_ce0;
input  [17:0] layer3_kernel_V_28_q0;
output  [5:0] layer3_kernel_V_29_address0;
output   layer3_kernel_V_29_ce0;
input  [17:0] layer3_kernel_V_29_q0;
output  [5:0] layer3_kernel_V_30_address0;
output   layer3_kernel_V_30_ce0;
input  [17:0] layer3_kernel_V_30_q0;
output  [5:0] layer3_kernel_V_31_address0;
output   layer3_kernel_V_31_ce0;
input  [17:0] layer3_kernel_V_31_q0;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg stream_res_1_V_V_read;
reg tmp_V_load_loc_read;
reg stream_o_V_V_write;
reg layer3_kernel_V_0_ce0;
reg layer3_kernel_V_1_ce0;
reg layer3_kernel_V_2_ce0;
reg layer3_kernel_V_3_ce0;
reg layer3_kernel_V_4_ce0;
reg layer3_kernel_V_5_ce0;
reg layer3_kernel_V_6_ce0;
reg layer3_kernel_V_7_ce0;
reg layer3_kernel_V_8_ce0;
reg layer3_kernel_V_9_ce0;
reg layer3_kernel_V_10_ce0;
reg layer3_kernel_V_11_ce0;
reg layer3_kernel_V_12_ce0;
reg layer3_kernel_V_13_ce0;
reg layer3_kernel_V_14_ce0;
reg layer3_kernel_V_15_ce0;
reg layer3_kernel_V_16_ce0;
reg layer3_kernel_V_17_ce0;
reg layer3_kernel_V_18_ce0;
reg layer3_kernel_V_19_ce0;
reg layer3_kernel_V_20_ce0;
reg layer3_kernel_V_21_ce0;
reg layer3_kernel_V_22_ce0;
reg layer3_kernel_V_23_ce0;
reg layer3_kernel_V_24_ce0;
reg layer3_kernel_V_25_ce0;
reg layer3_kernel_V_26_ce0;
reg layer3_kernel_V_27_ce0;
reg layer3_kernel_V_28_ce0;
reg layer3_kernel_V_29_ce0;
reg layer3_kernel_V_30_ce0;
reg layer3_kernel_V_31_ce0;

reg    ap_done_reg;
(* fsm_encoding = "none" *) reg   [8:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    stream_res_1_V_V_blk_n;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter1;
wire    ap_block_pp0_stage0;
reg    tmp_V_load_loc_blk_n;
reg    stream_o_V_V_blk_n;
reg    ap_enable_reg_pp2_iter2;
wire    ap_block_pp2_stage0;
reg   [0:0] exitcond_flatten1_reg_3158;
reg   [0:0] ap_reg_pp2_iter1_exitcond_flatten1_reg_3158;
reg   [5:0] p_4_i_i_i_reg_808;
reg   [5:0] indvar_flatten_reg_819;
reg   [2:0] p_5_i_i_i_reg_830;
reg   [2:0] p_6_i_i_i_reg_841;
reg   [9:0] indvar_flatten1_reg_852;
reg   [4:0] p_1_i_i_i_reg_863;
reg   [4:0] p_3_i_i_i_reg_874;
reg   [17:0] tmp_V_load_loc_read_reg_2539;
reg    ap_block_state1;
wire   [0:0] exitcond_flatten9_fu_885_p2;
wire    ap_CS_fsm_state2;
wire   [9:0] indvar_flatten_next8_fu_891_p2;
reg   [9:0] indvar_flatten_next8_reg_2548;
wire   [4:0] p_2_i_i_i_mid2_fu_909_p3;
reg   [4:0] p_2_i_i_i_mid2_reg_2553;
wire   [4:0] p_i_i_i_mid2_fu_917_p3;
reg   [4:0] p_i_i_i_mid2_reg_2559;
wire   [0:0] exitcond4_i_i_i_fu_925_p2;
wire    ap_block_state3_pp0_stage0_iter0;
reg    ap_block_state4_pp0_stage0_iter1;
reg    ap_block_pp0_stage0_11001;
wire   [5:0] ic_V_fu_931_p2;
reg    ap_enable_reg_pp0_iter0;
wire   [4:0] tmp_13_fu_937_p1;
reg   [4:0] tmp_13_reg_2574;
wire  signed [29:0] tmp_i_cast_i_i_i_fu_1197_p1;
reg  signed [29:0] tmp_i_cast_i_i_i_reg_2578;
wire    ap_CS_fsm_state5;
wire  signed [29:0] tmp_i33_cast_i_i_i_fu_1201_p1;
reg  signed [29:0] tmp_i33_cast_i_i_i_reg_2583;
wire  signed [29:0] tmp_i38_cast_i_i_i_fu_1205_p1;
reg  signed [29:0] tmp_i38_cast_i_i_i_reg_2588;
wire  signed [29:0] tmp_i43_cast_i_i_i_fu_1209_p1;
reg  signed [29:0] tmp_i43_cast_i_i_i_reg_2593;
wire  signed [29:0] tmp_i48_cast_i_i_i_fu_1213_p1;
reg  signed [29:0] tmp_i48_cast_i_i_i_reg_2598;
wire  signed [29:0] tmp_i53_cast_i_i_i_fu_1217_p1;
reg  signed [29:0] tmp_i53_cast_i_i_i_reg_2603;
wire  signed [29:0] tmp_i58_cast_i_i_i_fu_1221_p1;
reg  signed [29:0] tmp_i58_cast_i_i_i_reg_2608;
wire  signed [29:0] tmp_i63_cast_i_i_i_fu_1225_p1;
reg  signed [29:0] tmp_i63_cast_i_i_i_reg_2613;
wire  signed [29:0] tmp_i68_cast_i_i_i_fu_1229_p1;
reg  signed [29:0] tmp_i68_cast_i_i_i_reg_2618;
wire  signed [29:0] tmp_i73_cast_i_i_i_fu_1233_p1;
reg  signed [29:0] tmp_i73_cast_i_i_i_reg_2623;
wire  signed [29:0] tmp_i78_cast_i_i_i_fu_1237_p1;
reg  signed [29:0] tmp_i78_cast_i_i_i_reg_2628;
wire  signed [29:0] tmp_i83_cast_i_i_i_fu_1241_p1;
reg  signed [29:0] tmp_i83_cast_i_i_i_reg_2633;
wire  signed [29:0] tmp_i88_cast_i_i_i_fu_1245_p1;
reg  signed [29:0] tmp_i88_cast_i_i_i_reg_2638;
wire  signed [29:0] tmp_i93_cast_i_i_i_fu_1249_p1;
reg  signed [29:0] tmp_i93_cast_i_i_i_reg_2643;
wire  signed [29:0] tmp_i98_cast_i_i_i_fu_1253_p1;
reg  signed [29:0] tmp_i98_cast_i_i_i_reg_2648;
wire  signed [29:0] tmp_i103_cast_i_i_i_fu_1257_p1;
reg  signed [29:0] tmp_i103_cast_i_i_i_reg_2653;
wire  signed [29:0] tmp_i108_cast_i_i_i_fu_1261_p1;
reg  signed [29:0] tmp_i108_cast_i_i_i_reg_2658;
wire  signed [29:0] tmp_i113_cast_i_i_i_fu_1265_p1;
reg  signed [29:0] tmp_i113_cast_i_i_i_reg_2663;
wire  signed [29:0] tmp_i118_cast_i_i_i_fu_1269_p1;
reg  signed [29:0] tmp_i118_cast_i_i_i_reg_2668;
wire  signed [29:0] tmp_i123_cast_i_i_i_fu_1273_p1;
reg  signed [29:0] tmp_i123_cast_i_i_i_reg_2673;
wire  signed [29:0] tmp_i128_cast_i_i_i_fu_1277_p1;
reg  signed [29:0] tmp_i128_cast_i_i_i_reg_2678;
wire  signed [29:0] tmp_i133_cast_i_i_i_fu_1281_p1;
reg  signed [29:0] tmp_i133_cast_i_i_i_reg_2683;
wire  signed [29:0] tmp_i138_cast_i_i_i_fu_1285_p1;
reg  signed [29:0] tmp_i138_cast_i_i_i_reg_2688;
wire  signed [29:0] tmp_i143_cast_i_i_i_fu_1289_p1;
reg  signed [29:0] tmp_i143_cast_i_i_i_reg_2693;
wire  signed [29:0] tmp_i148_cast_i_i_i_fu_1293_p1;
reg  signed [29:0] tmp_i148_cast_i_i_i_reg_2698;
wire  signed [29:0] tmp_i153_cast_i_i_i_fu_1297_p1;
reg  signed [29:0] tmp_i153_cast_i_i_i_reg_2703;
wire  signed [29:0] tmp_i158_cast_i_i_i_fu_1301_p1;
reg  signed [29:0] tmp_i158_cast_i_i_i_reg_2708;
wire  signed [29:0] tmp_i163_cast_i_i_i_fu_1305_p1;
reg  signed [29:0] tmp_i163_cast_i_i_i_reg_2713;
wire  signed [29:0] tmp_i168_cast_i_i_i_fu_1309_p1;
reg  signed [29:0] tmp_i168_cast_i_i_i_reg_2718;
wire  signed [29:0] tmp_i173_cast_i_i_i_fu_1313_p1;
reg  signed [29:0] tmp_i173_cast_i_i_i_reg_2723;
wire  signed [29:0] tmp_i178_cast_i_i_i_fu_1317_p1;
reg  signed [29:0] tmp_i178_cast_i_i_i_reg_2728;
wire  signed [29:0] tmp_i183_cast_i_i_i_fu_1321_p1;
reg  signed [29:0] tmp_i183_cast_i_i_i_reg_2733;
wire   [0:0] exitcond_flatten_fu_1325_p2;
reg   [0:0] exitcond_flatten_reg_2738;
wire    ap_CS_fsm_pp1_stage0;
wire    ap_block_state6_pp1_stage0_iter0;
wire    ap_block_state8_pp1_stage0_iter1;
wire    ap_block_state10_pp1_stage0_iter2;
wire    ap_block_pp1_stage0_11001;
reg   [0:0] ap_reg_pp1_iter1_exitcond_flatten_reg_2738;
reg   [0:0] ap_reg_pp1_iter2_exitcond_flatten_reg_2738;
wire   [5:0] indvar_flatten_next_fu_1331_p2;
reg   [5:0] indvar_flatten_next_reg_2742;
reg    ap_enable_reg_pp1_iter0;
wire   [2:0] p_6_i_i_i_mid2_fu_1349_p3;
reg   [2:0] p_6_i_i_i_mid2_reg_2747;
reg   [2:0] ap_reg_pp1_iter1_p_6_i_i_i_mid2_reg_2747;
wire   [2:0] tmp_i_i_i_mid2_v_v_s_fu_1357_p3;
reg   [2:0] tmp_i_i_i_mid2_v_v_s_reg_2754;
reg   [2:0] ap_reg_pp1_iter1_tmp_i_i_i_mid2_v_v_s_reg_2754;
wire  signed [31:0] tmp_12_cast_fu_1402_p1;
reg  signed [31:0] tmp_12_cast_reg_2762;
wire    ap_CS_fsm_pp1_stage1;
wire    ap_block_state7_pp1_stage1_iter0;
wire    ap_block_state9_pp1_stage1_iter1;
wire    ap_block_state11_pp1_stage1_iter2;
wire    ap_block_pp1_stage1_11001;
wire   [2:0] kw_V_fu_1422_p2;
reg   [2:0] kw_V_reg_2862;
reg   [17:0] agg_result_V_i47_i_i_reg_2947;
reg   [17:0] agg_result_V_i52_i_i_reg_2952;
reg   [17:0] agg_result_V_i57_i_i_reg_2957;
reg   [17:0] agg_result_V_i62_i_i_reg_2962;
reg   [17:0] agg_result_V_i67_i_i_reg_2967;
reg   [17:0] agg_result_V_i72_i_i_reg_2972;
reg   [17:0] agg_result_V_i77_i_i_reg_2977;
reg   [17:0] agg_result_V_i82_i_i_reg_2982;
reg   [17:0] agg_result_V_i87_i_i_reg_2987;
reg   [17:0] agg_result_V_i92_i_i_reg_2992;
reg   [17:0] agg_result_V_i97_i_i_reg_2997;
reg   [17:0] agg_result_V_i102_i_s_reg_3002;
reg   [17:0] agg_result_V_i107_i_s_reg_3007;
reg   [17:0] agg_result_V_i112_i_s_reg_3012;
reg   [17:0] agg_result_V_i117_i_s_reg_3017;
reg   [17:0] agg_result_V_i122_i_s_reg_3022;
wire   [4:0] tmp_i_i_i_mid2_v_fu_1638_p2;
reg   [4:0] tmp_i_i_i_mid2_v_reg_3027;
reg   [17:0] agg_result_V_i_i_i_i_reg_3033;
reg   [17:0] agg_result_V_i37_i_i_reg_3038;
reg   [17:0] agg_result_V_i42_i_i_reg_3043;
reg   [17:0] agg_result_V_i127_i_s_reg_3048;
reg   [17:0] agg_result_V_i132_i_s_reg_3053;
reg   [17:0] agg_result_V_i137_i_s_reg_3058;
reg   [17:0] agg_result_V_i142_i_s_reg_3063;
reg   [17:0] agg_result_V_i147_i_s_reg_3068;
reg   [17:0] agg_result_V_i152_i_s_reg_3073;
reg   [17:0] agg_result_V_i157_i_s_reg_3078;
reg   [17:0] agg_result_V_i162_i_s_reg_3083;
reg   [17:0] agg_result_V_i167_i_s_reg_3088;
reg   [17:0] agg_result_V_i172_i_s_reg_3093;
reg   [17:0] agg_result_V_i177_i_s_reg_3098;
reg   [17:0] agg_result_V_i182_i_s_reg_3103;
reg   [17:0] agg_result_V_i187_i_s_reg_3108;
wire   [17:0] tmp6_fu_1851_p2;
reg   [17:0] tmp6_reg_3113;
wire   [17:0] tmp7_fu_1855_p2;
reg   [17:0] tmp7_reg_3118;
wire   [17:0] tmp9_fu_1867_p2;
reg   [17:0] tmp9_reg_3123;
wire   [17:0] tmp12_fu_1881_p2;
reg   [17:0] tmp12_reg_3128;
wire   [17:0] tmp17_fu_1895_p2;
reg   [17:0] tmp17_reg_3133;
reg   [9:0] layer3_matrix_V_addr_1_reg_3138;
wire   [17:0] tmp16_fu_1966_p2;
reg   [17:0] tmp16_reg_3143;
wire   [17:0] tmp23_fu_2004_p2;
reg   [17:0] tmp23_reg_3148;
wire   [4:0] iw_V_fu_2056_p2;
wire    ap_CS_fsm_state12;
wire   [0:0] exitcond_flatten1_fu_2061_p2;
wire    ap_CS_fsm_pp2_stage0;
wire    ap_block_state13_pp2_stage0_iter0;
wire    ap_block_state14_pp2_stage0_iter1;
reg    ap_block_state15_pp2_stage0_iter2;
reg    ap_block_pp2_stage0_11001;
wire   [9:0] indvar_flatten_next1_fu_2067_p2;
reg    ap_enable_reg_pp2_iter0;
wire   [4:0] p_3_i_i_i_mid2_fu_2085_p3;
reg   [4:0] p_3_i_i_i_mid2_reg_3167;
wire   [4:0] tmp_1_i_i_i_mid2_v_fu_2093_p3;
reg   [4:0] tmp_1_i_i_i_mid2_v_reg_3172;
wire   [4:0] ow_V_fu_2101_p2;
reg    ap_block_pp0_stage0_subdone;
reg    ap_condition_pp0_exit_iter0_state3;
wire    ap_block_pp1_stage0_subdone;
reg    ap_condition_pp1_exit_iter0_state6;
reg    ap_enable_reg_pp1_iter1;
wire    ap_block_pp1_stage1_subdone;
reg    ap_enable_reg_pp1_iter2;
reg    ap_block_pp2_stage0_subdone;
reg    ap_condition_pp2_exit_iter0_state13;
reg    ap_enable_reg_pp2_iter1;
reg   [9:0] layer3_matrix_V_address0;
reg    layer3_matrix_V_ce0;
reg    layer3_matrix_V_we0;
wire   [17:0] layer3_matrix_V_d0;
wire   [17:0] layer3_matrix_V_q0;
reg   [9:0] indvar_flatten7_reg_775;
reg   [4:0] p_i_i_i_reg_786;
reg   [4:0] p_2_i_i_i_reg_797;
reg   [5:0] indvar_flatten_phi_fu_823_p4;
wire    ap_block_pp1_stage0;
reg   [2:0] p_5_i_i_i_phi_fu_834_p4;
reg   [2:0] p_6_i_i_i_phi_fu_845_p4;
reg   [4:0] p_1_i_i_i_phi_fu_867_p4;
wire    ap_block_pp1_stage1;
wire  signed [31:0] tmp_11_cast_fu_1947_p1;
wire  signed [31:0] tmp_4_cast_fu_2144_p1;
reg    ap_block_pp2_stage0_01001;
reg   [17:0] in_buf_V_0_1_i_i_i_fu_222;
reg   [17:0] in_buf_V_1_1_i_i_i_fu_226;
reg   [17:0] in_buf_V_2_1_i_i_i_fu_230;
reg   [17:0] in_buf_V_3_1_i_i_i_fu_234;
reg   [17:0] in_buf_V_4_1_i_i_i_fu_238;
reg   [17:0] in_buf_V_5_1_i_i_i_fu_242;
reg   [17:0] in_buf_V_6_1_i_i_i_fu_246;
reg   [17:0] in_buf_V_7_1_i_i_i_fu_250;
reg   [17:0] in_buf_V_8_1_i_i_i_fu_254;
reg   [17:0] in_buf_V_9_1_i_i_i_fu_258;
reg   [17:0] in_buf_V_10_1_i_i_i_fu_262;
reg   [17:0] in_buf_V_11_1_i_i_i_fu_266;
reg   [17:0] in_buf_V_12_1_i_i_i_fu_270;
reg   [17:0] in_buf_V_13_1_i_i_i_fu_274;
reg   [17:0] in_buf_V_14_1_i_i_i_fu_278;
reg   [17:0] in_buf_V_15_1_i_i_i_fu_282;
reg   [17:0] in_buf_V_16_1_i_i_i_fu_286;
reg   [17:0] in_buf_V_17_1_i_i_i_fu_290;
reg   [17:0] in_buf_V_18_1_i_i_i_fu_294;
reg   [17:0] in_buf_V_19_1_i_i_i_fu_298;
reg   [17:0] in_buf_V_20_1_i_i_i_fu_302;
reg   [17:0] in_buf_V_21_1_i_i_i_fu_306;
reg   [17:0] in_buf_V_22_1_i_i_i_fu_310;
reg   [17:0] in_buf_V_23_1_i_i_i_fu_314;
reg   [17:0] in_buf_V_24_1_i_i_i_fu_318;
reg   [17:0] in_buf_V_25_1_i_i_i_fu_322;
reg   [17:0] in_buf_V_26_1_i_i_i_fu_326;
reg   [17:0] in_buf_V_27_1_i_i_i_fu_330;
reg   [17:0] in_buf_V_28_1_i_i_i_fu_334;
reg   [17:0] in_buf_V_29_1_i_i_i_fu_338;
reg   [17:0] in_buf_V_30_1_i_i_i_fu_342;
reg   [17:0] in_buf_V_31_1_i_i_i_fu_346;
wire   [0:0] exitcond3_i_i_i_fu_903_p2;
wire   [4:0] ih_V_fu_897_p2;
wire   [0:0] exitcond6_i_i_i_fu_1343_p2;
wire   [2:0] kh_V_fu_1337_p2;
wire   [5:0] tmp_8_fu_1365_p3;
wire   [3:0] tmp_9_fu_1376_p3;
wire   [6:0] p_shl_cast_fu_1372_p1;
wire   [6:0] p_shl5_cast_fu_1383_p1;
wire   [6:0] tmp_s_fu_1387_p2;
wire   [6:0] tmp_5_i_i_i_cast_fu_1393_p1;
wire   [6:0] tmp_11_fu_1396_p2;
wire  signed [29:0] c_V_3_fu_2155_p2;
wire  signed [29:0] c_V_4_fu_2161_p2;
wire  signed [29:0] c_V_5_fu_2167_p2;
wire  signed [29:0] c_V_6_fu_2173_p2;
wire  signed [29:0] c_V_7_fu_2179_p2;
wire  signed [29:0] c_V_8_fu_2185_p2;
wire  signed [29:0] c_V_9_fu_2191_p2;
wire  signed [29:0] c_V_10_fu_2197_p2;
wire  signed [29:0] c_V_11_fu_2203_p2;
wire  signed [29:0] c_V_12_fu_2209_p2;
wire  signed [29:0] c_V_13_fu_2215_p2;
wire  signed [29:0] c_V_14_fu_2221_p2;
wire  signed [29:0] c_V_15_fu_2227_p2;
wire  signed [29:0] c_V_16_fu_2233_p2;
wire  signed [29:0] c_V_17_fu_2239_p2;
wire  signed [29:0] c_V_18_fu_2245_p2;
wire   [4:0] tmp_i_i_i_mid2_v_v_fu_1635_p1;
wire  signed [29:0] c_V_fu_2251_p2;
wire  signed [29:0] c_V_1_fu_2257_p2;
wire  signed [29:0] c_V_2_fu_2263_p2;
wire  signed [29:0] c_V_19_fu_2269_p2;
wire  signed [29:0] c_V_20_fu_2275_p2;
wire  signed [29:0] c_V_21_fu_2281_p2;
wire  signed [29:0] c_V_22_fu_2287_p2;
wire  signed [29:0] c_V_23_fu_2293_p2;
wire  signed [29:0] c_V_24_fu_2299_p2;
wire  signed [29:0] c_V_25_fu_2305_p2;
wire  signed [29:0] c_V_26_fu_2311_p2;
wire  signed [29:0] c_V_27_fu_2317_p2;
wire  signed [29:0] c_V_28_fu_2323_p2;
wire  signed [29:0] c_V_29_fu_2329_p2;
wire  signed [29:0] c_V_30_fu_2335_p2;
wire  signed [29:0] c_V_31_fu_2341_p2;
wire   [17:0] tmp10_fu_1859_p2;
wire   [17:0] tmp11_fu_1863_p2;
wire   [17:0] tmp13_fu_1873_p2;
wire   [17:0] tmp14_fu_1877_p2;
wire   [17:0] tmp18_fu_1887_p2;
wire   [17:0] tmp19_fu_1891_p2;
wire   [9:0] tmp_5_fu_1901_p3;
wire   [5:0] tmp_6_fu_1912_p3;
wire   [10:0] p_shl3_cast_fu_1908_p1;
wire   [10:0] p_shl4_cast_fu_1919_p1;
wire   [4:0] rhs_V_cast_i_i_i_fu_1929_p1;
wire   [4:0] r_V_fu_1932_p2;
wire   [10:0] tmp_7_fu_1923_p2;
wire   [10:0] tmp_3_i_i_i_cast_fu_1937_p1;
wire   [10:0] tmp_10_fu_1941_p2;
wire   [17:0] tmp21_fu_1952_p2;
wire   [17:0] tmp22_fu_1956_p2;
wire   [17:0] tmp20_fu_1960_p2;
wire   [17:0] tmp25_fu_1971_p2;
wire   [17:0] tmp26_fu_1975_p2;
wire   [17:0] tmp30_fu_1989_p2;
wire   [17:0] tmp28_fu_1985_p2;
wire   [17:0] tmp29_fu_1993_p2;
wire   [17:0] tmp24_fu_1979_p2;
wire   [17:0] tmp27_fu_1998_p2;
wire   [17:0] tmp3_fu_2010_p2;
wire   [17:0] tmp4_fu_2015_p2;
wire   [17:0] tmp2_fu_2019_p2;
wire   [17:0] tmp5_fu_2025_p2;
wire   [17:0] tmp1_fu_2029_p2;
wire   [17:0] tmp8_fu_2035_p2;
wire   [17:0] tmp_fu_2039_p2;
wire   [17:0] tmp15_fu_2045_p2;
wire   [0:0] exitcond_i_i_i_fu_2079_p2;
wire   [4:0] oh_V_fu_2073_p2;
wire   [9:0] tmp_1_fu_2107_p3;
wire   [5:0] tmp_2_fu_2118_p3;
wire   [10:0] p_shl1_cast_fu_2114_p1;
wire   [10:0] p_shl2_cast_fu_2125_p1;
wire   [10:0] tmp_3_fu_2129_p2;
wire   [10:0] tmp_4_i_i_i_cast_fu_2135_p1;
wire   [10:0] tmp_4_fu_2138_p2;
wire  signed [17:0] c_V_3_fu_2155_p0;
wire  signed [17:0] c_V_4_fu_2161_p0;
wire  signed [17:0] c_V_5_fu_2167_p0;
wire  signed [17:0] c_V_6_fu_2173_p0;
wire  signed [17:0] c_V_7_fu_2179_p0;
wire  signed [17:0] c_V_8_fu_2185_p0;
wire  signed [17:0] c_V_9_fu_2191_p0;
wire  signed [17:0] c_V_10_fu_2197_p0;
wire  signed [17:0] c_V_11_fu_2203_p0;
wire  signed [17:0] c_V_12_fu_2209_p0;
wire  signed [17:0] c_V_13_fu_2215_p0;
wire  signed [17:0] c_V_14_fu_2221_p0;
wire  signed [17:0] c_V_15_fu_2227_p0;
wire  signed [17:0] c_V_16_fu_2233_p0;
wire  signed [17:0] c_V_17_fu_2239_p0;
wire  signed [17:0] c_V_18_fu_2245_p0;
wire  signed [17:0] c_V_fu_2251_p0;
wire  signed [17:0] c_V_1_fu_2257_p0;
wire  signed [17:0] c_V_2_fu_2263_p0;
wire  signed [17:0] c_V_19_fu_2269_p0;
wire  signed [17:0] c_V_20_fu_2275_p0;
wire  signed [17:0] c_V_21_fu_2281_p0;
wire  signed [17:0] c_V_22_fu_2287_p0;
wire  signed [17:0] c_V_23_fu_2293_p0;
wire  signed [17:0] c_V_24_fu_2299_p0;
wire  signed [17:0] c_V_25_fu_2305_p0;
wire  signed [17:0] c_V_26_fu_2311_p0;
wire  signed [17:0] c_V_27_fu_2317_p0;
wire  signed [17:0] c_V_28_fu_2323_p0;
wire  signed [17:0] c_V_29_fu_2329_p0;
wire  signed [17:0] c_V_30_fu_2335_p0;
wire  signed [17:0] c_V_31_fu_2341_p0;
wire    ap_CS_fsm_state16;
reg   [8:0] ap_NS_fsm;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
reg    ap_idle_pp1;
wire    ap_enable_pp1;
reg    ap_idle_pp2;
wire    ap_enable_pp2;

// power-on initialization
initial begin
#0 ap_done_reg = 1'b0;
#0 ap_CS_fsm = 9'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp2_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp1_iter0 = 1'b0;
#0 ap_enable_reg_pp2_iter0 = 1'b0;
#0 ap_enable_reg_pp1_iter1 = 1'b0;
#0 ap_enable_reg_pp1_iter2 = 1'b0;
#0 ap_enable_reg_pp2_iter1 = 1'b0;
end

stream_deconv_387tde #(
    .DataWidth( 18 ),
    .AddressRange( 900 ),
    .AddressWidth( 10 ))
layer3_matrix_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(layer3_matrix_V_address0),
    .ce0(layer3_matrix_V_ce0),
    .we0(layer3_matrix_V_we0),
    .d0(layer3_matrix_V_d0),
    .q0(layer3_matrix_V_q0)
);

deconv_mul_mul_18cud #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 18 ),
    .din1_WIDTH( 18 ),
    .dout_WIDTH( 30 ))
deconv_mul_mul_18cud_x_U144(
    .din0(c_V_3_fu_2155_p0),
    .din1(layer3_kernel_V_3_q0),
    .dout(c_V_3_fu_2155_p2)
);

deconv_mul_mul_18cud #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 18 ),
    .din1_WIDTH( 18 ),
    .dout_WIDTH( 30 ))
deconv_mul_mul_18cud_x_U145(
    .din0(c_V_4_fu_2161_p0),
    .din1(layer3_kernel_V_4_q0),
    .dout(c_V_4_fu_2161_p2)
);

deconv_mul_mul_18cud #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 18 ),
    .din1_WIDTH( 18 ),
    .dout_WIDTH( 30 ))
deconv_mul_mul_18cud_x_U146(
    .din0(c_V_5_fu_2167_p0),
    .din1(layer3_kernel_V_5_q0),
    .dout(c_V_5_fu_2167_p2)
);

deconv_mul_mul_18cud #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 18 ),
    .din1_WIDTH( 18 ),
    .dout_WIDTH( 30 ))
deconv_mul_mul_18cud_x_U147(
    .din0(c_V_6_fu_2173_p0),
    .din1(layer3_kernel_V_6_q0),
    .dout(c_V_6_fu_2173_p2)
);

deconv_mul_mul_18cud #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 18 ),
    .din1_WIDTH( 18 ),
    .dout_WIDTH( 30 ))
deconv_mul_mul_18cud_x_U148(
    .din0(c_V_7_fu_2179_p0),
    .din1(layer3_kernel_V_7_q0),
    .dout(c_V_7_fu_2179_p2)
);

deconv_mul_mul_18cud #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 18 ),
    .din1_WIDTH( 18 ),
    .dout_WIDTH( 30 ))
deconv_mul_mul_18cud_x_U149(
    .din0(c_V_8_fu_2185_p0),
    .din1(layer3_kernel_V_8_q0),
    .dout(c_V_8_fu_2185_p2)
);

deconv_mul_mul_18cud #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 18 ),
    .din1_WIDTH( 18 ),
    .dout_WIDTH( 30 ))
deconv_mul_mul_18cud_x_U150(
    .din0(c_V_9_fu_2191_p0),
    .din1(layer3_kernel_V_9_q0),
    .dout(c_V_9_fu_2191_p2)
);

deconv_mul_mul_18cud #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 18 ),
    .din1_WIDTH( 18 ),
    .dout_WIDTH( 30 ))
deconv_mul_mul_18cud_x_U151(
    .din0(c_V_10_fu_2197_p0),
    .din1(layer3_kernel_V_10_q0),
    .dout(c_V_10_fu_2197_p2)
);

deconv_mul_mul_18cud #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 18 ),
    .din1_WIDTH( 18 ),
    .dout_WIDTH( 30 ))
deconv_mul_mul_18cud_x_U152(
    .din0(c_V_11_fu_2203_p0),
    .din1(layer3_kernel_V_11_q0),
    .dout(c_V_11_fu_2203_p2)
);

deconv_mul_mul_18cud #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 18 ),
    .din1_WIDTH( 18 ),
    .dout_WIDTH( 30 ))
deconv_mul_mul_18cud_x_U153(
    .din0(c_V_12_fu_2209_p0),
    .din1(layer3_kernel_V_12_q0),
    .dout(c_V_12_fu_2209_p2)
);

deconv_mul_mul_18cud #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 18 ),
    .din1_WIDTH( 18 ),
    .dout_WIDTH( 30 ))
deconv_mul_mul_18cud_x_U154(
    .din0(c_V_13_fu_2215_p0),
    .din1(layer3_kernel_V_13_q0),
    .dout(c_V_13_fu_2215_p2)
);

deconv_mul_mul_18cud #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 18 ),
    .din1_WIDTH( 18 ),
    .dout_WIDTH( 30 ))
deconv_mul_mul_18cud_x_U155(
    .din0(c_V_14_fu_2221_p0),
    .din1(layer3_kernel_V_14_q0),
    .dout(c_V_14_fu_2221_p2)
);

deconv_mul_mul_18cud #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 18 ),
    .din1_WIDTH( 18 ),
    .dout_WIDTH( 30 ))
deconv_mul_mul_18cud_x_U156(
    .din0(c_V_15_fu_2227_p0),
    .din1(layer3_kernel_V_15_q0),
    .dout(c_V_15_fu_2227_p2)
);

deconv_mul_mul_18cud #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 18 ),
    .din1_WIDTH( 18 ),
    .dout_WIDTH( 30 ))
deconv_mul_mul_18cud_x_U157(
    .din0(c_V_16_fu_2233_p0),
    .din1(layer3_kernel_V_16_q0),
    .dout(c_V_16_fu_2233_p2)
);

deconv_mul_mul_18cud #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 18 ),
    .din1_WIDTH( 18 ),
    .dout_WIDTH( 30 ))
deconv_mul_mul_18cud_x_U158(
    .din0(c_V_17_fu_2239_p0),
    .din1(layer3_kernel_V_17_q0),
    .dout(c_V_17_fu_2239_p2)
);

deconv_mul_mul_18cud #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 18 ),
    .din1_WIDTH( 18 ),
    .dout_WIDTH( 30 ))
deconv_mul_mul_18cud_x_U159(
    .din0(c_V_18_fu_2245_p0),
    .din1(layer3_kernel_V_18_q0),
    .dout(c_V_18_fu_2245_p2)
);

deconv_mul_mul_18cud #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 18 ),
    .din1_WIDTH( 18 ),
    .dout_WIDTH( 30 ))
deconv_mul_mul_18cud_x_U160(
    .din0(c_V_fu_2251_p0),
    .din1(layer3_kernel_V_0_q0),
    .dout(c_V_fu_2251_p2)
);

deconv_mul_mul_18cud #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 18 ),
    .din1_WIDTH( 18 ),
    .dout_WIDTH( 30 ))
deconv_mul_mul_18cud_x_U161(
    .din0(c_V_1_fu_2257_p0),
    .din1(layer3_kernel_V_1_q0),
    .dout(c_V_1_fu_2257_p2)
);

deconv_mul_mul_18cud #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 18 ),
    .din1_WIDTH( 18 ),
    .dout_WIDTH( 30 ))
deconv_mul_mul_18cud_x_U162(
    .din0(c_V_2_fu_2263_p0),
    .din1(layer3_kernel_V_2_q0),
    .dout(c_V_2_fu_2263_p2)
);

deconv_mul_mul_18cud #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 18 ),
    .din1_WIDTH( 18 ),
    .dout_WIDTH( 30 ))
deconv_mul_mul_18cud_x_U163(
    .din0(c_V_19_fu_2269_p0),
    .din1(layer3_kernel_V_19_q0),
    .dout(c_V_19_fu_2269_p2)
);

deconv_mul_mul_18cud #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 18 ),
    .din1_WIDTH( 18 ),
    .dout_WIDTH( 30 ))
deconv_mul_mul_18cud_x_U164(
    .din0(c_V_20_fu_2275_p0),
    .din1(layer3_kernel_V_20_q0),
    .dout(c_V_20_fu_2275_p2)
);

deconv_mul_mul_18cud #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 18 ),
    .din1_WIDTH( 18 ),
    .dout_WIDTH( 30 ))
deconv_mul_mul_18cud_x_U165(
    .din0(c_V_21_fu_2281_p0),
    .din1(layer3_kernel_V_21_q0),
    .dout(c_V_21_fu_2281_p2)
);

deconv_mul_mul_18cud #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 18 ),
    .din1_WIDTH( 18 ),
    .dout_WIDTH( 30 ))
deconv_mul_mul_18cud_x_U166(
    .din0(c_V_22_fu_2287_p0),
    .din1(layer3_kernel_V_22_q0),
    .dout(c_V_22_fu_2287_p2)
);

deconv_mul_mul_18cud #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 18 ),
    .din1_WIDTH( 18 ),
    .dout_WIDTH( 30 ))
deconv_mul_mul_18cud_x_U167(
    .din0(c_V_23_fu_2293_p0),
    .din1(layer3_kernel_V_23_q0),
    .dout(c_V_23_fu_2293_p2)
);

deconv_mul_mul_18cud #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 18 ),
    .din1_WIDTH( 18 ),
    .dout_WIDTH( 30 ))
deconv_mul_mul_18cud_x_U168(
    .din0(c_V_24_fu_2299_p0),
    .din1(layer3_kernel_V_24_q0),
    .dout(c_V_24_fu_2299_p2)
);

deconv_mul_mul_18cud #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 18 ),
    .din1_WIDTH( 18 ),
    .dout_WIDTH( 30 ))
deconv_mul_mul_18cud_x_U169(
    .din0(c_V_25_fu_2305_p0),
    .din1(layer3_kernel_V_25_q0),
    .dout(c_V_25_fu_2305_p2)
);

deconv_mul_mul_18cud #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 18 ),
    .din1_WIDTH( 18 ),
    .dout_WIDTH( 30 ))
deconv_mul_mul_18cud_x_U170(
    .din0(c_V_26_fu_2311_p0),
    .din1(layer3_kernel_V_26_q0),
    .dout(c_V_26_fu_2311_p2)
);

deconv_mul_mul_18cud #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 18 ),
    .din1_WIDTH( 18 ),
    .dout_WIDTH( 30 ))
deconv_mul_mul_18cud_x_U171(
    .din0(c_V_27_fu_2317_p0),
    .din1(layer3_kernel_V_27_q0),
    .dout(c_V_27_fu_2317_p2)
);

deconv_mul_mul_18cud #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 18 ),
    .din1_WIDTH( 18 ),
    .dout_WIDTH( 30 ))
deconv_mul_mul_18cud_x_U172(
    .din0(c_V_28_fu_2323_p0),
    .din1(layer3_kernel_V_28_q0),
    .dout(c_V_28_fu_2323_p2)
);

deconv_mul_mul_18cud #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 18 ),
    .din1_WIDTH( 18 ),
    .dout_WIDTH( 30 ))
deconv_mul_mul_18cud_x_U173(
    .din0(c_V_29_fu_2329_p0),
    .din1(layer3_kernel_V_29_q0),
    .dout(c_V_29_fu_2329_p2)
);

deconv_mul_mul_18cud #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 18 ),
    .din1_WIDTH( 18 ),
    .dout_WIDTH( 30 ))
deconv_mul_mul_18cud_x_U174(
    .din0(c_V_30_fu_2335_p0),
    .din1(layer3_kernel_V_30_q0),
    .dout(c_V_30_fu_2335_p2)
);

deconv_mul_mul_18cud #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 18 ),
    .din1_WIDTH( 18 ),
    .dout_WIDTH( 30 ))
deconv_mul_mul_18cud_x_U175(
    .din0(c_V_31_fu_2341_p0),
    .din1(layer3_kernel_V_31_q0),
    .dout(c_V_31_fu_2341_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_continue)) begin
            ap_done_reg <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state16)) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_block_pp0_stage0_subdone == 1'b0) & (1'b1 == ap_condition_pp0_exit_iter0_state3))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if (((1'b1 == ap_CS_fsm_state2) & (1'd0 == exitcond_flatten9_fu_885_p2))) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((ap_block_pp0_stage0_subdone == 1'b0) & (1'b1 == ap_condition_pp0_exit_iter0_state3))) begin
            ap_enable_reg_pp0_iter1 <= (ap_condition_pp0_exit_iter0_state3 ^ 1'b1);
        end else if ((ap_block_pp0_stage0_subdone == 1'b0)) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end else if (((1'b1 == ap_CS_fsm_state2) & (1'd0 == exitcond_flatten9_fu_885_p2))) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter0 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp1_stage0) & (ap_block_pp1_stage0_subdone == 1'b0) & (1'b1 == ap_condition_pp1_exit_iter0_state6))) begin
            ap_enable_reg_pp1_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state5)) begin
            ap_enable_reg_pp1_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter1 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp1_stage1) & (ap_block_pp1_stage1_subdone == 1'b0))) begin
            if ((1'b1 == ap_condition_pp1_exit_iter0_state6)) begin
                ap_enable_reg_pp1_iter1 <= (ap_condition_pp1_exit_iter0_state6 ^ 1'b1);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp1_iter1 <= ap_enable_reg_pp1_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter2 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp1_stage1) & (ap_block_pp1_stage1_subdone == 1'b0))) begin
            ap_enable_reg_pp1_iter2 <= ap_enable_reg_pp1_iter1;
        end else if ((1'b1 == ap_CS_fsm_state5)) begin
            ap_enable_reg_pp1_iter2 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter0 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp2_stage0) & (ap_block_pp2_stage0_subdone == 1'b0) & (1'b1 == ap_condition_pp2_exit_iter0_state13))) begin
            ap_enable_reg_pp2_iter0 <= 1'b0;
        end else if (((1'b1 == ap_CS_fsm_state2) & (exitcond_flatten9_fu_885_p2 == 1'd1))) begin
            ap_enable_reg_pp2_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter1 <= 1'b0;
    end else begin
        if ((ap_block_pp2_stage0_subdone == 1'b0)) begin
            if ((1'b1 == ap_condition_pp2_exit_iter0_state13)) begin
                ap_enable_reg_pp2_iter1 <= (ap_condition_pp2_exit_iter0_state13 ^ 1'b1);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp2_iter1 <= ap_enable_reg_pp2_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter2 <= 1'b0;
    end else begin
        if ((ap_block_pp2_stage0_subdone == 1'b0)) begin
            ap_enable_reg_pp2_iter2 <= ap_enable_reg_pp2_iter1;
        end else if (((1'b1 == ap_CS_fsm_state2) & (exitcond_flatten9_fu_885_p2 == 1'd1))) begin
            ap_enable_reg_pp2_iter2 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state2) & (exitcond_flatten9_fu_885_p2 == 1'd1))) begin
        indvar_flatten1_reg_852 <= 10'd0;
    end else if (((1'b1 == ap_CS_fsm_pp2_stage0) & (ap_block_pp2_stage0_11001 == 1'b0) & (1'b1 == ap_enable_reg_pp2_iter0) & (1'd0 == exitcond_flatten1_fu_2061_p2))) begin
        indvar_flatten1_reg_852 <= indvar_flatten_next1_fu_2067_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        indvar_flatten7_reg_775 <= indvar_flatten_next8_reg_2548;
    end else if (((1'b1 == ap_CS_fsm_state1) & ~((1'b0 == ap_start) | (ap_done_reg == 1'b1) | (1'b0 == tmp_V_load_loc_empty_n)))) begin
        indvar_flatten7_reg_775 <= 10'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage0) & (ap_block_pp1_stage0_11001 == 1'b0) & (1'd0 == exitcond_flatten_reg_2738) & (1'b1 == ap_enable_reg_pp1_iter1))) begin
        indvar_flatten_reg_819 <= indvar_flatten_next_reg_2742;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        indvar_flatten_reg_819 <= 6'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state2) & (exitcond_flatten9_fu_885_p2 == 1'd1))) begin
        p_1_i_i_i_reg_863 <= 5'd1;
    end else if (((1'b1 == ap_CS_fsm_pp2_stage0) & (ap_block_pp2_stage0_11001 == 1'b0) & (exitcond_flatten1_reg_3158 == 1'd0) & (1'b1 == ap_enable_reg_pp2_iter1))) begin
        p_1_i_i_i_reg_863 <= tmp_1_i_i_i_mid2_v_reg_3172;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        p_2_i_i_i_reg_797 <= iw_V_fu_2056_p2;
    end else if (((1'b1 == ap_CS_fsm_state1) & ~((1'b0 == ap_start) | (ap_done_reg == 1'b1) | (1'b0 == tmp_V_load_loc_empty_n)))) begin
        p_2_i_i_i_reg_797 <= 5'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state2) & (exitcond_flatten9_fu_885_p2 == 1'd1))) begin
        p_3_i_i_i_reg_874 <= 5'd1;
    end else if (((1'b1 == ap_CS_fsm_pp2_stage0) & (ap_block_pp2_stage0_11001 == 1'b0) & (1'b1 == ap_enable_reg_pp2_iter0) & (1'd0 == exitcond_flatten1_fu_2061_p2))) begin
        p_3_i_i_i_reg_874 <= ow_V_fu_2101_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_block_pp0_stage0_11001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter0) & (1'd0 == exitcond4_i_i_i_fu_925_p2))) begin
        p_4_i_i_i_reg_808 <= ic_V_fu_931_p2;
    end else if (((1'b1 == ap_CS_fsm_state2) & (1'd0 == exitcond_flatten9_fu_885_p2))) begin
        p_4_i_i_i_reg_808 <= 6'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage0) & (ap_block_pp1_stage0_11001 == 1'b0) & (1'd0 == exitcond_flatten_reg_2738) & (1'b1 == ap_enable_reg_pp1_iter1))) begin
        p_5_i_i_i_reg_830 <= tmp_i_i_i_mid2_v_v_s_reg_2754;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        p_5_i_i_i_reg_830 <= 3'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage0) & (ap_block_pp1_stage0_11001 == 1'b0) & (1'd0 == exitcond_flatten_reg_2738) & (1'b1 == ap_enable_reg_pp1_iter1))) begin
        p_6_i_i_i_reg_841 <= kw_V_reg_2862;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        p_6_i_i_i_reg_841 <= 3'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        p_i_i_i_reg_786 <= p_i_i_i_mid2_reg_2559;
    end else if (((1'b1 == ap_CS_fsm_state1) & ~((1'b0 == ap_start) | (ap_done_reg == 1'b1) | (1'b0 == tmp_V_load_loc_empty_n)))) begin
        p_i_i_i_reg_786 <= 5'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage0) & (ap_block_pp1_stage0_11001 == 1'b0) & (1'd0 == exitcond_flatten_reg_2738))) begin
        agg_result_V_i102_i_s_reg_3002 <= {{c_V_14_fu_2221_p2[29:12]}};
        agg_result_V_i107_i_s_reg_3007 <= {{c_V_15_fu_2227_p2[29:12]}};
        agg_result_V_i112_i_s_reg_3012 <= {{c_V_16_fu_2233_p2[29:12]}};
        agg_result_V_i117_i_s_reg_3017 <= {{c_V_17_fu_2239_p2[29:12]}};
        agg_result_V_i122_i_s_reg_3022 <= {{c_V_18_fu_2245_p2[29:12]}};
        agg_result_V_i47_i_i_reg_2947 <= {{c_V_3_fu_2155_p2[29:12]}};
        agg_result_V_i52_i_i_reg_2952 <= {{c_V_4_fu_2161_p2[29:12]}};
        agg_result_V_i57_i_i_reg_2957 <= {{c_V_5_fu_2167_p2[29:12]}};
        agg_result_V_i62_i_i_reg_2962 <= {{c_V_6_fu_2173_p2[29:12]}};
        agg_result_V_i67_i_i_reg_2967 <= {{c_V_7_fu_2179_p2[29:12]}};
        agg_result_V_i72_i_i_reg_2972 <= {{c_V_8_fu_2185_p2[29:12]}};
        agg_result_V_i77_i_i_reg_2977 <= {{c_V_9_fu_2191_p2[29:12]}};
        agg_result_V_i82_i_i_reg_2982 <= {{c_V_10_fu_2197_p2[29:12]}};
        agg_result_V_i87_i_i_reg_2987 <= {{c_V_11_fu_2203_p2[29:12]}};
        agg_result_V_i92_i_i_reg_2992 <= {{c_V_12_fu_2209_p2[29:12]}};
        agg_result_V_i97_i_i_reg_2997 <= {{c_V_13_fu_2215_p2[29:12]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage1) & (ap_block_pp1_stage1_11001 == 1'b0) & (1'd0 == ap_reg_pp1_iter1_exitcond_flatten_reg_2738))) begin
        agg_result_V_i127_i_s_reg_3048 <= {{c_V_19_fu_2269_p2[29:12]}};
        agg_result_V_i132_i_s_reg_3053 <= {{c_V_20_fu_2275_p2[29:12]}};
        agg_result_V_i137_i_s_reg_3058 <= {{c_V_21_fu_2281_p2[29:12]}};
        agg_result_V_i142_i_s_reg_3063 <= {{c_V_22_fu_2287_p2[29:12]}};
        agg_result_V_i147_i_s_reg_3068 <= {{c_V_23_fu_2293_p2[29:12]}};
        agg_result_V_i152_i_s_reg_3073 <= {{c_V_24_fu_2299_p2[29:12]}};
        agg_result_V_i157_i_s_reg_3078 <= {{c_V_25_fu_2305_p2[29:12]}};
        agg_result_V_i162_i_s_reg_3083 <= {{c_V_26_fu_2311_p2[29:12]}};
        agg_result_V_i167_i_s_reg_3088 <= {{c_V_27_fu_2317_p2[29:12]}};
        agg_result_V_i172_i_s_reg_3093 <= {{c_V_28_fu_2323_p2[29:12]}};
        agg_result_V_i177_i_s_reg_3098 <= {{c_V_29_fu_2329_p2[29:12]}};
        agg_result_V_i182_i_s_reg_3103 <= {{c_V_30_fu_2335_p2[29:12]}};
        agg_result_V_i187_i_s_reg_3108 <= {{c_V_31_fu_2341_p2[29:12]}};
        agg_result_V_i37_i_i_reg_3038 <= {{c_V_1_fu_2257_p2[29:12]}};
        agg_result_V_i42_i_i_reg_3043 <= {{c_V_2_fu_2263_p2[29:12]}};
        agg_result_V_i_i_i_i_reg_3033 <= {{c_V_fu_2251_p2[29:12]}};
        tmp12_reg_3128 <= tmp12_fu_1881_p2;
        tmp17_reg_3133 <= tmp17_fu_1895_p2;
        tmp6_reg_3113 <= tmp6_fu_1851_p2;
        tmp7_reg_3118 <= tmp7_fu_1855_p2;
        tmp9_reg_3123 <= tmp9_fu_1867_p2;
        tmp_i_i_i_mid2_v_reg_3027 <= tmp_i_i_i_mid2_v_fu_1638_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage0) & (ap_block_pp1_stage0_11001 == 1'b0))) begin
        ap_reg_pp1_iter1_exitcond_flatten_reg_2738 <= exitcond_flatten_reg_2738;
        ap_reg_pp1_iter1_p_6_i_i_i_mid2_reg_2747 <= p_6_i_i_i_mid2_reg_2747;
        ap_reg_pp1_iter1_tmp_i_i_i_mid2_v_v_s_reg_2754 <= tmp_i_i_i_mid2_v_v_s_reg_2754;
        ap_reg_pp1_iter2_exitcond_flatten_reg_2738 <= ap_reg_pp1_iter1_exitcond_flatten_reg_2738;
        exitcond_flatten_reg_2738 <= exitcond_flatten_fu_1325_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp2_stage0) & (ap_block_pp2_stage0_11001 == 1'b0))) begin
        ap_reg_pp2_iter1_exitcond_flatten1_reg_3158 <= exitcond_flatten1_reg_3158;
        exitcond_flatten1_reg_3158 <= exitcond_flatten1_fu_2061_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_enable_reg_pp0_iter1) & (ap_block_pp0_stage0_11001 == 1'b0) & (tmp_13_reg_2574 == 5'd0))) begin
        in_buf_V_0_1_i_i_i_fu_222 <= stream_res_1_V_V_dout;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_enable_reg_pp0_iter1) & (ap_block_pp0_stage0_11001 == 1'b0) & (tmp_13_reg_2574 == 5'd10))) begin
        in_buf_V_10_1_i_i_i_fu_262 <= stream_res_1_V_V_dout;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_enable_reg_pp0_iter1) & (ap_block_pp0_stage0_11001 == 1'b0) & (tmp_13_reg_2574 == 5'd11))) begin
        in_buf_V_11_1_i_i_i_fu_266 <= stream_res_1_V_V_dout;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_enable_reg_pp0_iter1) & (ap_block_pp0_stage0_11001 == 1'b0) & (tmp_13_reg_2574 == 5'd12))) begin
        in_buf_V_12_1_i_i_i_fu_270 <= stream_res_1_V_V_dout;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_enable_reg_pp0_iter1) & (ap_block_pp0_stage0_11001 == 1'b0) & (tmp_13_reg_2574 == 5'd13))) begin
        in_buf_V_13_1_i_i_i_fu_274 <= stream_res_1_V_V_dout;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_enable_reg_pp0_iter1) & (ap_block_pp0_stage0_11001 == 1'b0) & (tmp_13_reg_2574 == 5'd14))) begin
        in_buf_V_14_1_i_i_i_fu_278 <= stream_res_1_V_V_dout;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_enable_reg_pp0_iter1) & (ap_block_pp0_stage0_11001 == 1'b0) & (tmp_13_reg_2574 == 5'd15))) begin
        in_buf_V_15_1_i_i_i_fu_282 <= stream_res_1_V_V_dout;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_enable_reg_pp0_iter1) & (ap_block_pp0_stage0_11001 == 1'b0) & (tmp_13_reg_2574 == 5'd16))) begin
        in_buf_V_16_1_i_i_i_fu_286 <= stream_res_1_V_V_dout;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_enable_reg_pp0_iter1) & (ap_block_pp0_stage0_11001 == 1'b0) & (tmp_13_reg_2574 == 5'd17))) begin
        in_buf_V_17_1_i_i_i_fu_290 <= stream_res_1_V_V_dout;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_enable_reg_pp0_iter1) & (ap_block_pp0_stage0_11001 == 1'b0) & (tmp_13_reg_2574 == 5'd18))) begin
        in_buf_V_18_1_i_i_i_fu_294 <= stream_res_1_V_V_dout;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_enable_reg_pp0_iter1) & (ap_block_pp0_stage0_11001 == 1'b0) & (tmp_13_reg_2574 == 5'd19))) begin
        in_buf_V_19_1_i_i_i_fu_298 <= stream_res_1_V_V_dout;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_enable_reg_pp0_iter1) & (ap_block_pp0_stage0_11001 == 1'b0) & (tmp_13_reg_2574 == 5'd1))) begin
        in_buf_V_1_1_i_i_i_fu_226 <= stream_res_1_V_V_dout;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_enable_reg_pp0_iter1) & (ap_block_pp0_stage0_11001 == 1'b0) & (tmp_13_reg_2574 == 5'd20))) begin
        in_buf_V_20_1_i_i_i_fu_302 <= stream_res_1_V_V_dout;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_enable_reg_pp0_iter1) & (ap_block_pp0_stage0_11001 == 1'b0) & (tmp_13_reg_2574 == 5'd21))) begin
        in_buf_V_21_1_i_i_i_fu_306 <= stream_res_1_V_V_dout;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_enable_reg_pp0_iter1) & (ap_block_pp0_stage0_11001 == 1'b0) & (tmp_13_reg_2574 == 5'd22))) begin
        in_buf_V_22_1_i_i_i_fu_310 <= stream_res_1_V_V_dout;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_enable_reg_pp0_iter1) & (ap_block_pp0_stage0_11001 == 1'b0) & (tmp_13_reg_2574 == 5'd23))) begin
        in_buf_V_23_1_i_i_i_fu_314 <= stream_res_1_V_V_dout;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_enable_reg_pp0_iter1) & (ap_block_pp0_stage0_11001 == 1'b0) & (tmp_13_reg_2574 == 5'd24))) begin
        in_buf_V_24_1_i_i_i_fu_318 <= stream_res_1_V_V_dout;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_enable_reg_pp0_iter1) & (ap_block_pp0_stage0_11001 == 1'b0) & (tmp_13_reg_2574 == 5'd25))) begin
        in_buf_V_25_1_i_i_i_fu_322 <= stream_res_1_V_V_dout;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_enable_reg_pp0_iter1) & (ap_block_pp0_stage0_11001 == 1'b0) & (tmp_13_reg_2574 == 5'd26))) begin
        in_buf_V_26_1_i_i_i_fu_326 <= stream_res_1_V_V_dout;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_enable_reg_pp0_iter1) & (ap_block_pp0_stage0_11001 == 1'b0) & (tmp_13_reg_2574 == 5'd27))) begin
        in_buf_V_27_1_i_i_i_fu_330 <= stream_res_1_V_V_dout;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_enable_reg_pp0_iter1) & (ap_block_pp0_stage0_11001 == 1'b0) & (tmp_13_reg_2574 == 5'd28))) begin
        in_buf_V_28_1_i_i_i_fu_334 <= stream_res_1_V_V_dout;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_enable_reg_pp0_iter1) & (ap_block_pp0_stage0_11001 == 1'b0) & (tmp_13_reg_2574 == 5'd29))) begin
        in_buf_V_29_1_i_i_i_fu_338 <= stream_res_1_V_V_dout;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_enable_reg_pp0_iter1) & (ap_block_pp0_stage0_11001 == 1'b0) & (tmp_13_reg_2574 == 5'd2))) begin
        in_buf_V_2_1_i_i_i_fu_230 <= stream_res_1_V_V_dout;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_enable_reg_pp0_iter1) & (ap_block_pp0_stage0_11001 == 1'b0) & (tmp_13_reg_2574 == 5'd30))) begin
        in_buf_V_30_1_i_i_i_fu_342 <= stream_res_1_V_V_dout;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_enable_reg_pp0_iter1) & (ap_block_pp0_stage0_11001 == 1'b0) & (tmp_13_reg_2574 == 5'd31))) begin
        in_buf_V_31_1_i_i_i_fu_346 <= stream_res_1_V_V_dout;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_enable_reg_pp0_iter1) & (ap_block_pp0_stage0_11001 == 1'b0) & (tmp_13_reg_2574 == 5'd3))) begin
        in_buf_V_3_1_i_i_i_fu_234 <= stream_res_1_V_V_dout;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_enable_reg_pp0_iter1) & (ap_block_pp0_stage0_11001 == 1'b0) & (tmp_13_reg_2574 == 5'd4))) begin
        in_buf_V_4_1_i_i_i_fu_238 <= stream_res_1_V_V_dout;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_enable_reg_pp0_iter1) & (ap_block_pp0_stage0_11001 == 1'b0) & (tmp_13_reg_2574 == 5'd5))) begin
        in_buf_V_5_1_i_i_i_fu_242 <= stream_res_1_V_V_dout;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_enable_reg_pp0_iter1) & (ap_block_pp0_stage0_11001 == 1'b0) & (tmp_13_reg_2574 == 5'd6))) begin
        in_buf_V_6_1_i_i_i_fu_246 <= stream_res_1_V_V_dout;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_enable_reg_pp0_iter1) & (ap_block_pp0_stage0_11001 == 1'b0) & (tmp_13_reg_2574 == 5'd7))) begin
        in_buf_V_7_1_i_i_i_fu_250 <= stream_res_1_V_V_dout;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_enable_reg_pp0_iter1) & (ap_block_pp0_stage0_11001 == 1'b0) & (tmp_13_reg_2574 == 5'd8))) begin
        in_buf_V_8_1_i_i_i_fu_254 <= stream_res_1_V_V_dout;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_enable_reg_pp0_iter1) & (ap_block_pp0_stage0_11001 == 1'b0) & (tmp_13_reg_2574 == 5'd9))) begin
        in_buf_V_9_1_i_i_i_fu_258 <= stream_res_1_V_V_dout;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        indvar_flatten_next8_reg_2548 <= indvar_flatten_next8_fu_891_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage0) & (ap_block_pp1_stage0_11001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter0))) begin
        indvar_flatten_next_reg_2742 <= indvar_flatten_next_fu_1331_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_enable_reg_pp1_iter0) & (1'b1 == ap_CS_fsm_pp1_stage1) & (ap_block_pp1_stage1_11001 == 1'b0) & (1'd0 == exitcond_flatten_reg_2738))) begin
        kw_V_reg_2862 <= kw_V_fu_1422_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage0) & (ap_block_pp1_stage0_11001 == 1'b0) & (1'd0 == ap_reg_pp1_iter1_exitcond_flatten_reg_2738))) begin
        layer3_matrix_V_addr_1_reg_3138 <= tmp_11_cast_fu_1947_p1;
        tmp16_reg_3143 <= tmp16_fu_1966_p2;
        tmp23_reg_3148 <= tmp23_fu_2004_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state2) & (1'd0 == exitcond_flatten9_fu_885_p2))) begin
        p_2_i_i_i_mid2_reg_2553 <= p_2_i_i_i_mid2_fu_909_p3;
        p_i_i_i_mid2_reg_2559 <= p_i_i_i_mid2_fu_917_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp2_stage0) & (ap_block_pp2_stage0_11001 == 1'b0) & (1'd0 == exitcond_flatten1_fu_2061_p2))) begin
        p_3_i_i_i_mid2_reg_3167 <= p_3_i_i_i_mid2_fu_2085_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage0) & (ap_block_pp1_stage0_11001 == 1'b0) & (1'd0 == exitcond_flatten_fu_1325_p2))) begin
        p_6_i_i_i_mid2_reg_2747 <= p_6_i_i_i_mid2_fu_1349_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage1) & (ap_block_pp1_stage1_11001 == 1'b0) & (1'd0 == exitcond_flatten_reg_2738))) begin
        tmp_12_cast_reg_2762 <= tmp_12_cast_fu_1402_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_block_pp0_stage0_11001 == 1'b0) & (1'd0 == exitcond4_i_i_i_fu_925_p2))) begin
        tmp_13_reg_2574 <= tmp_13_fu_937_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp2_stage0) & (ap_block_pp2_stage0_11001 == 1'b0) & (1'b1 == ap_enable_reg_pp2_iter0) & (1'd0 == exitcond_flatten1_fu_2061_p2))) begin
        tmp_1_i_i_i_mid2_v_reg_3172 <= tmp_1_i_i_i_mid2_v_fu_2093_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state1) & ~((1'b0 == ap_start) | (ap_done_reg == 1'b1) | (1'b0 == tmp_V_load_loc_empty_n)))) begin
        tmp_V_load_loc_read_reg_2539 <= tmp_V_load_loc_dout;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        tmp_i103_cast_i_i_i_reg_2653 <= tmp_i103_cast_i_i_i_fu_1257_p1;
        tmp_i108_cast_i_i_i_reg_2658 <= tmp_i108_cast_i_i_i_fu_1261_p1;
        tmp_i113_cast_i_i_i_reg_2663 <= tmp_i113_cast_i_i_i_fu_1265_p1;
        tmp_i118_cast_i_i_i_reg_2668 <= tmp_i118_cast_i_i_i_fu_1269_p1;
        tmp_i123_cast_i_i_i_reg_2673 <= tmp_i123_cast_i_i_i_fu_1273_p1;
        tmp_i128_cast_i_i_i_reg_2678 <= tmp_i128_cast_i_i_i_fu_1277_p1;
        tmp_i133_cast_i_i_i_reg_2683 <= tmp_i133_cast_i_i_i_fu_1281_p1;
        tmp_i138_cast_i_i_i_reg_2688 <= tmp_i138_cast_i_i_i_fu_1285_p1;
        tmp_i143_cast_i_i_i_reg_2693 <= tmp_i143_cast_i_i_i_fu_1289_p1;
        tmp_i148_cast_i_i_i_reg_2698 <= tmp_i148_cast_i_i_i_fu_1293_p1;
        tmp_i153_cast_i_i_i_reg_2703 <= tmp_i153_cast_i_i_i_fu_1297_p1;
        tmp_i158_cast_i_i_i_reg_2708 <= tmp_i158_cast_i_i_i_fu_1301_p1;
        tmp_i163_cast_i_i_i_reg_2713 <= tmp_i163_cast_i_i_i_fu_1305_p1;
        tmp_i168_cast_i_i_i_reg_2718 <= tmp_i168_cast_i_i_i_fu_1309_p1;
        tmp_i173_cast_i_i_i_reg_2723 <= tmp_i173_cast_i_i_i_fu_1313_p1;
        tmp_i178_cast_i_i_i_reg_2728 <= tmp_i178_cast_i_i_i_fu_1317_p1;
        tmp_i183_cast_i_i_i_reg_2733 <= tmp_i183_cast_i_i_i_fu_1321_p1;
        tmp_i33_cast_i_i_i_reg_2583 <= tmp_i33_cast_i_i_i_fu_1201_p1;
        tmp_i38_cast_i_i_i_reg_2588 <= tmp_i38_cast_i_i_i_fu_1205_p1;
        tmp_i43_cast_i_i_i_reg_2593 <= tmp_i43_cast_i_i_i_fu_1209_p1;
        tmp_i48_cast_i_i_i_reg_2598 <= tmp_i48_cast_i_i_i_fu_1213_p1;
        tmp_i53_cast_i_i_i_reg_2603 <= tmp_i53_cast_i_i_i_fu_1217_p1;
        tmp_i58_cast_i_i_i_reg_2608 <= tmp_i58_cast_i_i_i_fu_1221_p1;
        tmp_i63_cast_i_i_i_reg_2613 <= tmp_i63_cast_i_i_i_fu_1225_p1;
        tmp_i68_cast_i_i_i_reg_2618 <= tmp_i68_cast_i_i_i_fu_1229_p1;
        tmp_i73_cast_i_i_i_reg_2623 <= tmp_i73_cast_i_i_i_fu_1233_p1;
        tmp_i78_cast_i_i_i_reg_2628 <= tmp_i78_cast_i_i_i_fu_1237_p1;
        tmp_i83_cast_i_i_i_reg_2633 <= tmp_i83_cast_i_i_i_fu_1241_p1;
        tmp_i88_cast_i_i_i_reg_2638 <= tmp_i88_cast_i_i_i_fu_1245_p1;
        tmp_i93_cast_i_i_i_reg_2643 <= tmp_i93_cast_i_i_i_fu_1249_p1;
        tmp_i98_cast_i_i_i_reg_2648 <= tmp_i98_cast_i_i_i_fu_1253_p1;
        tmp_i_cast_i_i_i_reg_2578 <= tmp_i_cast_i_i_i_fu_1197_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage0) & (ap_block_pp1_stage0_11001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter0) & (1'd0 == exitcond_flatten_fu_1325_p2))) begin
        tmp_i_i_i_mid2_v_v_s_reg_2754 <= tmp_i_i_i_mid2_v_v_s_fu_1357_p3;
    end
end

always @ (*) begin
    if ((exitcond4_i_i_i_fu_925_p2 == 1'd1)) begin
        ap_condition_pp0_exit_iter0_state3 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter0_state3 = 1'b0;
    end
end

always @ (*) begin
    if ((exitcond_flatten_fu_1325_p2 == 1'd1)) begin
        ap_condition_pp1_exit_iter0_state6 = 1'b1;
    end else begin
        ap_condition_pp1_exit_iter0_state6 = 1'b0;
    end
end

always @ (*) begin
    if ((exitcond_flatten1_fu_2061_p2 == 1'd1)) begin
        ap_condition_pp2_exit_iter0_state13 = 1'b1;
    end else begin
        ap_condition_pp2_exit_iter0_state13 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        ap_done = 1'b1;
    end else begin
        ap_done = ap_done_reg;
    end
end

always @ (*) begin
    if (((1'b0 == ap_start) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_enable_reg_pp0_iter0) & (1'b0 == ap_enable_reg_pp0_iter1))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_enable_reg_pp1_iter0) & (1'b0 == ap_enable_reg_pp1_iter1) & (1'b0 == ap_enable_reg_pp1_iter2))) begin
        ap_idle_pp1 = 1'b1;
    end else begin
        ap_idle_pp1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_enable_reg_pp2_iter0) & (1'b0 == ap_enable_reg_pp2_iter1) & (1'b0 == ap_enable_reg_pp2_iter2))) begin
        ap_idle_pp2 = 1'b1;
    end else begin
        ap_idle_pp2 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage0) & (1'd0 == exitcond_flatten_reg_2738) & (1'b1 == ap_enable_reg_pp1_iter1) & (ap_block_pp1_stage0 == 1'b0))) begin
        indvar_flatten_phi_fu_823_p4 = indvar_flatten_next_reg_2742;
    end else begin
        indvar_flatten_phi_fu_823_p4 = indvar_flatten_reg_819;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage0) & (ap_block_pp1_stage0_11001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter1))) begin
        layer3_kernel_V_0_ce0 = 1'b1;
    end else begin
        layer3_kernel_V_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp1_iter0) & (1'b1 == ap_CS_fsm_pp1_stage1) & (ap_block_pp1_stage1_11001 == 1'b0))) begin
        layer3_kernel_V_10_ce0 = 1'b1;
    end else begin
        layer3_kernel_V_10_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp1_iter0) & (1'b1 == ap_CS_fsm_pp1_stage1) & (ap_block_pp1_stage1_11001 == 1'b0))) begin
        layer3_kernel_V_11_ce0 = 1'b1;
    end else begin
        layer3_kernel_V_11_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp1_iter0) & (1'b1 == ap_CS_fsm_pp1_stage1) & (ap_block_pp1_stage1_11001 == 1'b0))) begin
        layer3_kernel_V_12_ce0 = 1'b1;
    end else begin
        layer3_kernel_V_12_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp1_iter0) & (1'b1 == ap_CS_fsm_pp1_stage1) & (ap_block_pp1_stage1_11001 == 1'b0))) begin
        layer3_kernel_V_13_ce0 = 1'b1;
    end else begin
        layer3_kernel_V_13_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp1_iter0) & (1'b1 == ap_CS_fsm_pp1_stage1) & (ap_block_pp1_stage1_11001 == 1'b0))) begin
        layer3_kernel_V_14_ce0 = 1'b1;
    end else begin
        layer3_kernel_V_14_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp1_iter0) & (1'b1 == ap_CS_fsm_pp1_stage1) & (ap_block_pp1_stage1_11001 == 1'b0))) begin
        layer3_kernel_V_15_ce0 = 1'b1;
    end else begin
        layer3_kernel_V_15_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp1_iter0) & (1'b1 == ap_CS_fsm_pp1_stage1) & (ap_block_pp1_stage1_11001 == 1'b0))) begin
        layer3_kernel_V_16_ce0 = 1'b1;
    end else begin
        layer3_kernel_V_16_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp1_iter0) & (1'b1 == ap_CS_fsm_pp1_stage1) & (ap_block_pp1_stage1_11001 == 1'b0))) begin
        layer3_kernel_V_17_ce0 = 1'b1;
    end else begin
        layer3_kernel_V_17_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp1_iter0) & (1'b1 == ap_CS_fsm_pp1_stage1) & (ap_block_pp1_stage1_11001 == 1'b0))) begin
        layer3_kernel_V_18_ce0 = 1'b1;
    end else begin
        layer3_kernel_V_18_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage0) & (ap_block_pp1_stage0_11001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter1))) begin
        layer3_kernel_V_19_ce0 = 1'b1;
    end else begin
        layer3_kernel_V_19_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage0) & (ap_block_pp1_stage0_11001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter1))) begin
        layer3_kernel_V_1_ce0 = 1'b1;
    end else begin
        layer3_kernel_V_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage0) & (ap_block_pp1_stage0_11001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter1))) begin
        layer3_kernel_V_20_ce0 = 1'b1;
    end else begin
        layer3_kernel_V_20_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage0) & (ap_block_pp1_stage0_11001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter1))) begin
        layer3_kernel_V_21_ce0 = 1'b1;
    end else begin
        layer3_kernel_V_21_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage0) & (ap_block_pp1_stage0_11001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter1))) begin
        layer3_kernel_V_22_ce0 = 1'b1;
    end else begin
        layer3_kernel_V_22_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage0) & (ap_block_pp1_stage0_11001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter1))) begin
        layer3_kernel_V_23_ce0 = 1'b1;
    end else begin
        layer3_kernel_V_23_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage0) & (ap_block_pp1_stage0_11001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter1))) begin
        layer3_kernel_V_24_ce0 = 1'b1;
    end else begin
        layer3_kernel_V_24_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage0) & (ap_block_pp1_stage0_11001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter1))) begin
        layer3_kernel_V_25_ce0 = 1'b1;
    end else begin
        layer3_kernel_V_25_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage0) & (ap_block_pp1_stage0_11001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter1))) begin
        layer3_kernel_V_26_ce0 = 1'b1;
    end else begin
        layer3_kernel_V_26_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage0) & (ap_block_pp1_stage0_11001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter1))) begin
        layer3_kernel_V_27_ce0 = 1'b1;
    end else begin
        layer3_kernel_V_27_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage0) & (ap_block_pp1_stage0_11001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter1))) begin
        layer3_kernel_V_28_ce0 = 1'b1;
    end else begin
        layer3_kernel_V_28_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage0) & (ap_block_pp1_stage0_11001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter1))) begin
        layer3_kernel_V_29_ce0 = 1'b1;
    end else begin
        layer3_kernel_V_29_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage0) & (ap_block_pp1_stage0_11001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter1))) begin
        layer3_kernel_V_2_ce0 = 1'b1;
    end else begin
        layer3_kernel_V_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage0) & (ap_block_pp1_stage0_11001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter1))) begin
        layer3_kernel_V_30_ce0 = 1'b1;
    end else begin
        layer3_kernel_V_30_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage0) & (ap_block_pp1_stage0_11001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter1))) begin
        layer3_kernel_V_31_ce0 = 1'b1;
    end else begin
        layer3_kernel_V_31_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp1_iter0) & (1'b1 == ap_CS_fsm_pp1_stage1) & (ap_block_pp1_stage1_11001 == 1'b0))) begin
        layer3_kernel_V_3_ce0 = 1'b1;
    end else begin
        layer3_kernel_V_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp1_iter0) & (1'b1 == ap_CS_fsm_pp1_stage1) & (ap_block_pp1_stage1_11001 == 1'b0))) begin
        layer3_kernel_V_4_ce0 = 1'b1;
    end else begin
        layer3_kernel_V_4_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp1_iter0) & (1'b1 == ap_CS_fsm_pp1_stage1) & (ap_block_pp1_stage1_11001 == 1'b0))) begin
        layer3_kernel_V_5_ce0 = 1'b1;
    end else begin
        layer3_kernel_V_5_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp1_iter0) & (1'b1 == ap_CS_fsm_pp1_stage1) & (ap_block_pp1_stage1_11001 == 1'b0))) begin
        layer3_kernel_V_6_ce0 = 1'b1;
    end else begin
        layer3_kernel_V_6_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp1_iter0) & (1'b1 == ap_CS_fsm_pp1_stage1) & (ap_block_pp1_stage1_11001 == 1'b0))) begin
        layer3_kernel_V_7_ce0 = 1'b1;
    end else begin
        layer3_kernel_V_7_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp1_iter0) & (1'b1 == ap_CS_fsm_pp1_stage1) & (ap_block_pp1_stage1_11001 == 1'b0))) begin
        layer3_kernel_V_8_ce0 = 1'b1;
    end else begin
        layer3_kernel_V_8_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp1_iter0) & (1'b1 == ap_CS_fsm_pp1_stage1) & (ap_block_pp1_stage1_11001 == 1'b0))) begin
        layer3_kernel_V_9_ce0 = 1'b1;
    end else begin
        layer3_kernel_V_9_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp2_stage0 == 1'b0) & (1'b1 == ap_CS_fsm_pp2_stage0) & (1'b1 == ap_enable_reg_pp2_iter1))) begin
        layer3_matrix_V_address0 = tmp_4_cast_fu_2144_p1;
    end else if (((1'b1 == ap_CS_fsm_pp1_stage1) & (ap_block_pp1_stage1 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter2))) begin
        layer3_matrix_V_address0 = layer3_matrix_V_addr_1_reg_3138;
    end else if (((1'b1 == ap_CS_fsm_pp1_stage0) & (ap_block_pp1_stage0 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter2))) begin
        layer3_matrix_V_address0 = tmp_11_cast_fu_1947_p1;
    end else begin
        layer3_matrix_V_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp2_stage0) & (ap_block_pp2_stage0_11001 == 1'b0) & (1'b1 == ap_enable_reg_pp2_iter1)) | ((1'b1 == ap_CS_fsm_pp1_stage0) & (ap_block_pp1_stage0_11001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter2)) | ((1'b1 == ap_CS_fsm_pp1_stage1) & (ap_block_pp1_stage1_11001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter2)))) begin
        layer3_matrix_V_ce0 = 1'b1;
    end else begin
        layer3_matrix_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage1) & (ap_block_pp1_stage1_11001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter2) & (1'd0 == ap_reg_pp1_iter2_exitcond_flatten_reg_2738))) begin
        layer3_matrix_V_we0 = 1'b1;
    end else begin
        layer3_matrix_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp2_stage0 == 1'b0) & (1'b1 == ap_CS_fsm_pp2_stage0) & (exitcond_flatten1_reg_3158 == 1'd0) & (1'b1 == ap_enable_reg_pp2_iter1))) begin
        p_1_i_i_i_phi_fu_867_p4 = tmp_1_i_i_i_mid2_v_reg_3172;
    end else begin
        p_1_i_i_i_phi_fu_867_p4 = p_1_i_i_i_reg_863;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage0) & (1'd0 == exitcond_flatten_reg_2738) & (1'b1 == ap_enable_reg_pp1_iter1) & (ap_block_pp1_stage0 == 1'b0))) begin
        p_5_i_i_i_phi_fu_834_p4 = tmp_i_i_i_mid2_v_v_s_reg_2754;
    end else begin
        p_5_i_i_i_phi_fu_834_p4 = p_5_i_i_i_reg_830;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage0) & (1'd0 == exitcond_flatten_reg_2738) & (1'b1 == ap_enable_reg_pp1_iter1) & (ap_block_pp1_stage0 == 1'b0))) begin
        p_6_i_i_i_phi_fu_845_p4 = kw_V_reg_2862;
    end else begin
        p_6_i_i_i_phi_fu_845_p4 = p_6_i_i_i_reg_841;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp2_iter2) & (ap_block_pp2_stage0 == 1'b0) & (ap_reg_pp2_iter1_exitcond_flatten1_reg_3158 == 1'd0))) begin
        stream_o_V_V_blk_n = stream_o_V_V_full_n;
    end else begin
        stream_o_V_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp2_iter2) & (ap_reg_pp2_iter1_exitcond_flatten1_reg_3158 == 1'd0) & (ap_block_pp2_stage0_11001 == 1'b0))) begin
        stream_o_V_V_write = 1'b1;
    end else begin
        stream_o_V_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_enable_reg_pp0_iter1) & (ap_block_pp0_stage0 == 1'b0))) begin
        stream_res_1_V_V_blk_n = stream_res_1_V_V_empty_n;
    end else begin
        stream_res_1_V_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_enable_reg_pp0_iter1) & (ap_block_pp0_stage0_11001 == 1'b0))) begin
        stream_res_1_V_V_read = 1'b1;
    end else begin
        stream_res_1_V_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state1) & ~((1'b0 == ap_start) | (ap_done_reg == 1'b1)))) begin
        tmp_V_load_loc_blk_n = tmp_V_load_loc_empty_n;
    end else begin
        tmp_V_load_loc_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state1) & ~((1'b0 == ap_start) | (ap_done_reg == 1'b1) | (1'b0 == tmp_V_load_loc_empty_n)))) begin
        tmp_V_load_loc_read = 1'b1;
    end else begin
        tmp_V_load_loc_read = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((1'b1 == ap_CS_fsm_state1) & ~((1'b0 == ap_start) | (ap_done_reg == 1'b1) | (1'b0 == tmp_V_load_loc_empty_n)))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((1'b1 == ap_CS_fsm_state2) & (exitcond_flatten9_fu_885_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage0 : begin
            if (~((1'b1 == ap_enable_reg_pp0_iter0) & (ap_block_pp0_stage0_subdone == 1'b0) & (exitcond4_i_i_i_fu_925_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if (((1'b1 == ap_enable_reg_pp0_iter0) & (ap_block_pp0_stage0_subdone == 1'b0) & (exitcond4_i_i_i_fu_925_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_pp1_stage0;
        end
        ap_ST_fsm_pp1_stage0 : begin
            if (((ap_block_pp1_stage0_subdone == 1'b0) & ~((1'b1 == ap_enable_reg_pp1_iter0) & (ap_block_pp1_stage0_subdone == 1'b0) & (exitcond_flatten_fu_1325_p2 == 1'd1) & (ap_enable_reg_pp1_iter1 == 1'b0)))) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage1;
            end else if (((1'b1 == ap_enable_reg_pp1_iter0) & (ap_block_pp1_stage0_subdone == 1'b0) & (exitcond_flatten_fu_1325_p2 == 1'd1) & (ap_enable_reg_pp1_iter1 == 1'b0))) begin
                ap_NS_fsm = ap_ST_fsm_state12;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end
        end
        ap_ST_fsm_pp1_stage1 : begin
            if (((ap_block_pp1_stage1_subdone == 1'b0) & ~((1'b1 == ap_CS_fsm_pp1_stage1) & (ap_block_pp1_stage1_subdone == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter2) & (ap_enable_reg_pp1_iter1 == 1'b0)))) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end else if (((1'b1 == ap_CS_fsm_pp1_stage1) & (ap_block_pp1_stage1_subdone == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter2) & (ap_enable_reg_pp1_iter1 == 1'b0))) begin
                ap_NS_fsm = ap_ST_fsm_state12;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage1;
            end
        end
        ap_ST_fsm_state12 : begin
            ap_NS_fsm = ap_ST_fsm_state2;
        end
        ap_ST_fsm_pp2_stage0 : begin
            if ((~((1'b1 == ap_enable_reg_pp2_iter2) & (ap_block_pp2_stage0_subdone == 1'b0) & (ap_enable_reg_pp2_iter1 == 1'b0)) & ~((1'b1 == ap_enable_reg_pp2_iter0) & (ap_block_pp2_stage0_subdone == 1'b0) & (exitcond_flatten1_fu_2061_p2 == 1'd1) & (ap_enable_reg_pp2_iter1 == 1'b0)))) begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage0;
            end else if ((((1'b1 == ap_enable_reg_pp2_iter2) & (ap_block_pp2_stage0_subdone == 1'b0) & (ap_enable_reg_pp2_iter1 == 1'b0)) | ((1'b1 == ap_enable_reg_pp2_iter0) & (ap_block_pp2_stage0_subdone == 1'b0) & (exitcond_flatten1_fu_2061_p2 == 1'd1) & (ap_enable_reg_pp2_iter1 == 1'b0)))) begin
                ap_NS_fsm = ap_ST_fsm_state16;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage0;
            end
        end
        ap_ST_fsm_state16 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_pp1_stage0 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_pp1_stage1 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_pp2_stage0 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state12 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state16 = ap_CS_fsm[32'd8];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd3];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_11001 = ((1'b1 == ap_enable_reg_pp0_iter1) & (1'b0 == stream_res_1_V_V_empty_n));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = ((1'b1 == ap_enable_reg_pp0_iter1) & (1'b0 == stream_res_1_V_V_empty_n));
end

assign ap_block_pp1_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage1 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage1_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage1_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp2_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp2_stage0_01001 = ((1'b1 == ap_enable_reg_pp2_iter2) & (ap_reg_pp2_iter1_exitcond_flatten1_reg_3158 == 1'd0) & (1'b0 == stream_o_V_V_full_n));
end

always @ (*) begin
    ap_block_pp2_stage0_11001 = ((1'b1 == ap_enable_reg_pp2_iter2) & (ap_reg_pp2_iter1_exitcond_flatten1_reg_3158 == 1'd0) & (1'b0 == stream_o_V_V_full_n));
end

always @ (*) begin
    ap_block_pp2_stage0_subdone = ((1'b1 == ap_enable_reg_pp2_iter2) & (ap_reg_pp2_iter1_exitcond_flatten1_reg_3158 == 1'd0) & (1'b0 == stream_o_V_V_full_n));
end

always @ (*) begin
    ap_block_state1 = ((1'b0 == ap_start) | (ap_done_reg == 1'b1) | (1'b0 == tmp_V_load_loc_empty_n));
end

assign ap_block_state10_pp1_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state11_pp1_stage1_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state13_pp2_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state14_pp2_stage0_iter1 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state15_pp2_stage0_iter2 = ((ap_reg_pp2_iter1_exitcond_flatten1_reg_3158 == 1'd0) & (1'b0 == stream_o_V_V_full_n));
end

assign ap_block_state3_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state4_pp0_stage0_iter1 = (1'b0 == stream_res_1_V_V_empty_n);
end

assign ap_block_state6_pp1_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp1_stage1_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp1_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp1_stage1_iter1 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_pp1 = (ap_idle_pp1 ^ 1'b1);

assign ap_enable_pp2 = (ap_idle_pp2 ^ 1'b1);

assign c_V_10_fu_2197_p0 = tmp_i78_cast_i_i_i_reg_2628;

assign c_V_11_fu_2203_p0 = tmp_i83_cast_i_i_i_reg_2633;

assign c_V_12_fu_2209_p0 = tmp_i88_cast_i_i_i_reg_2638;

assign c_V_13_fu_2215_p0 = tmp_i93_cast_i_i_i_reg_2643;

assign c_V_14_fu_2221_p0 = tmp_i98_cast_i_i_i_reg_2648;

assign c_V_15_fu_2227_p0 = tmp_i103_cast_i_i_i_reg_2653;

assign c_V_16_fu_2233_p0 = tmp_i108_cast_i_i_i_reg_2658;

assign c_V_17_fu_2239_p0 = tmp_i113_cast_i_i_i_reg_2663;

assign c_V_18_fu_2245_p0 = tmp_i118_cast_i_i_i_reg_2668;

assign c_V_19_fu_2269_p0 = tmp_i123_cast_i_i_i_reg_2673;

assign c_V_1_fu_2257_p0 = tmp_i33_cast_i_i_i_reg_2583;

assign c_V_20_fu_2275_p0 = tmp_i128_cast_i_i_i_reg_2678;

assign c_V_21_fu_2281_p0 = tmp_i133_cast_i_i_i_reg_2683;

assign c_V_22_fu_2287_p0 = tmp_i138_cast_i_i_i_reg_2688;

assign c_V_23_fu_2293_p0 = tmp_i143_cast_i_i_i_reg_2693;

assign c_V_24_fu_2299_p0 = tmp_i148_cast_i_i_i_reg_2698;

assign c_V_25_fu_2305_p0 = tmp_i153_cast_i_i_i_reg_2703;

assign c_V_26_fu_2311_p0 = tmp_i158_cast_i_i_i_reg_2708;

assign c_V_27_fu_2317_p0 = tmp_i163_cast_i_i_i_reg_2713;

assign c_V_28_fu_2323_p0 = tmp_i168_cast_i_i_i_reg_2718;

assign c_V_29_fu_2329_p0 = tmp_i173_cast_i_i_i_reg_2723;

assign c_V_2_fu_2263_p0 = tmp_i38_cast_i_i_i_reg_2588;

assign c_V_30_fu_2335_p0 = tmp_i178_cast_i_i_i_reg_2728;

assign c_V_31_fu_2341_p0 = tmp_i183_cast_i_i_i_reg_2733;

assign c_V_3_fu_2155_p0 = tmp_i43_cast_i_i_i_reg_2593;

assign c_V_4_fu_2161_p0 = tmp_i48_cast_i_i_i_reg_2598;

assign c_V_5_fu_2167_p0 = tmp_i53_cast_i_i_i_reg_2603;

assign c_V_6_fu_2173_p0 = tmp_i58_cast_i_i_i_reg_2608;

assign c_V_7_fu_2179_p0 = tmp_i63_cast_i_i_i_reg_2613;

assign c_V_8_fu_2185_p0 = tmp_i68_cast_i_i_i_reg_2618;

assign c_V_9_fu_2191_p0 = tmp_i73_cast_i_i_i_reg_2623;

assign c_V_fu_2251_p0 = tmp_i_cast_i_i_i_reg_2578;

assign exitcond3_i_i_i_fu_903_p2 = ((p_2_i_i_i_reg_797 == 5'd25) ? 1'b1 : 1'b0);

assign exitcond4_i_i_i_fu_925_p2 = ((p_4_i_i_i_reg_808 == 6'd32) ? 1'b1 : 1'b0);

assign exitcond6_i_i_i_fu_1343_p2 = ((p_6_i_i_i_phi_fu_845_p4 == 3'd6) ? 1'b1 : 1'b0);

assign exitcond_flatten1_fu_2061_p2 = ((indvar_flatten1_reg_852 == 10'd784) ? 1'b1 : 1'b0);

assign exitcond_flatten9_fu_885_p2 = ((indvar_flatten7_reg_775 == 10'd625) ? 1'b1 : 1'b0);

assign exitcond_flatten_fu_1325_p2 = ((indvar_flatten_phi_fu_823_p4 == 6'd36) ? 1'b1 : 1'b0);

assign exitcond_i_i_i_fu_2079_p2 = ((p_3_i_i_i_reg_874 == 5'd29) ? 1'b1 : 1'b0);

assign ic_V_fu_931_p2 = (p_4_i_i_i_reg_808 + 6'd1);

assign ih_V_fu_897_p2 = (p_i_i_i_reg_786 + 5'd1);

assign indvar_flatten_next1_fu_2067_p2 = (indvar_flatten1_reg_852 + 10'd1);

assign indvar_flatten_next8_fu_891_p2 = (indvar_flatten7_reg_775 + 10'd1);

assign indvar_flatten_next_fu_1331_p2 = (indvar_flatten_phi_fu_823_p4 + 6'd1);

assign iw_V_fu_2056_p2 = (p_2_i_i_i_mid2_reg_2553 + 5'd1);

assign kh_V_fu_1337_p2 = (p_5_i_i_i_phi_fu_834_p4 + 3'd1);

assign kw_V_fu_1422_p2 = (p_6_i_i_i_mid2_reg_2747 + 3'd1);

assign layer3_kernel_V_0_address0 = tmp_12_cast_reg_2762;

assign layer3_kernel_V_10_address0 = tmp_12_cast_fu_1402_p1;

assign layer3_kernel_V_11_address0 = tmp_12_cast_fu_1402_p1;

assign layer3_kernel_V_12_address0 = tmp_12_cast_fu_1402_p1;

assign layer3_kernel_V_13_address0 = tmp_12_cast_fu_1402_p1;

assign layer3_kernel_V_14_address0 = tmp_12_cast_fu_1402_p1;

assign layer3_kernel_V_15_address0 = tmp_12_cast_fu_1402_p1;

assign layer3_kernel_V_16_address0 = tmp_12_cast_fu_1402_p1;

assign layer3_kernel_V_17_address0 = tmp_12_cast_fu_1402_p1;

assign layer3_kernel_V_18_address0 = tmp_12_cast_fu_1402_p1;

assign layer3_kernel_V_19_address0 = tmp_12_cast_reg_2762;

assign layer3_kernel_V_1_address0 = tmp_12_cast_reg_2762;

assign layer3_kernel_V_20_address0 = tmp_12_cast_reg_2762;

assign layer3_kernel_V_21_address0 = tmp_12_cast_reg_2762;

assign layer3_kernel_V_22_address0 = tmp_12_cast_reg_2762;

assign layer3_kernel_V_23_address0 = tmp_12_cast_reg_2762;

assign layer3_kernel_V_24_address0 = tmp_12_cast_reg_2762;

assign layer3_kernel_V_25_address0 = tmp_12_cast_reg_2762;

assign layer3_kernel_V_26_address0 = tmp_12_cast_reg_2762;

assign layer3_kernel_V_27_address0 = tmp_12_cast_reg_2762;

assign layer3_kernel_V_28_address0 = tmp_12_cast_reg_2762;

assign layer3_kernel_V_29_address0 = tmp_12_cast_reg_2762;

assign layer3_kernel_V_2_address0 = tmp_12_cast_reg_2762;

assign layer3_kernel_V_30_address0 = tmp_12_cast_reg_2762;

assign layer3_kernel_V_31_address0 = tmp_12_cast_reg_2762;

assign layer3_kernel_V_3_address0 = tmp_12_cast_fu_1402_p1;

assign layer3_kernel_V_4_address0 = tmp_12_cast_fu_1402_p1;

assign layer3_kernel_V_5_address0 = tmp_12_cast_fu_1402_p1;

assign layer3_kernel_V_6_address0 = tmp_12_cast_fu_1402_p1;

assign layer3_kernel_V_7_address0 = tmp_12_cast_fu_1402_p1;

assign layer3_kernel_V_8_address0 = tmp_12_cast_fu_1402_p1;

assign layer3_kernel_V_9_address0 = tmp_12_cast_fu_1402_p1;

assign layer3_matrix_V_d0 = (tmp_fu_2039_p2 + tmp15_fu_2045_p2);

assign oh_V_fu_2073_p2 = (p_1_i_i_i_phi_fu_867_p4 + 5'd1);

assign ow_V_fu_2101_p2 = (p_3_i_i_i_mid2_fu_2085_p3 + 5'd1);

assign p_2_i_i_i_mid2_fu_909_p3 = ((exitcond3_i_i_i_fu_903_p2[0:0] === 1'b1) ? 5'd0 : p_2_i_i_i_reg_797);

assign p_3_i_i_i_mid2_fu_2085_p3 = ((exitcond_i_i_i_fu_2079_p2[0:0] === 1'b1) ? 5'd1 : p_3_i_i_i_reg_874);

assign p_6_i_i_i_mid2_fu_1349_p3 = ((exitcond6_i_i_i_fu_1343_p2[0:0] === 1'b1) ? 3'd0 : p_6_i_i_i_phi_fu_845_p4);

assign p_i_i_i_mid2_fu_917_p3 = ((exitcond3_i_i_i_fu_903_p2[0:0] === 1'b1) ? ih_V_fu_897_p2 : p_i_i_i_reg_786);

assign p_shl1_cast_fu_2114_p1 = tmp_1_fu_2107_p3;

assign p_shl2_cast_fu_2125_p1 = tmp_2_fu_2118_p3;

assign p_shl3_cast_fu_1908_p1 = tmp_5_fu_1901_p3;

assign p_shl4_cast_fu_1919_p1 = tmp_6_fu_1912_p3;

assign p_shl5_cast_fu_1383_p1 = tmp_9_fu_1376_p3;

assign p_shl_cast_fu_1372_p1 = tmp_8_fu_1365_p3;

assign r_V_fu_1932_p2 = (rhs_V_cast_i_i_i_fu_1929_p1 + p_2_i_i_i_mid2_reg_2553);

assign rhs_V_cast_i_i_i_fu_1929_p1 = ap_reg_pp1_iter1_p_6_i_i_i_mid2_reg_2747;

assign stream_o_V_V_din = (layer3_matrix_V_q0 + tmp_V_load_loc_read_reg_2539);

assign tmp10_fu_1859_p2 = (agg_result_V_i72_i_i_reg_2972 + agg_result_V_i67_i_i_reg_2967);

assign tmp11_fu_1863_p2 = (agg_result_V_i82_i_i_reg_2982 + agg_result_V_i77_i_i_reg_2977);

assign tmp12_fu_1881_p2 = (tmp13_fu_1873_p2 + tmp14_fu_1877_p2);

assign tmp13_fu_1873_p2 = (agg_result_V_i92_i_i_reg_2992 + agg_result_V_i87_i_i_reg_2987);

assign tmp14_fu_1877_p2 = (agg_result_V_i102_i_s_reg_3002 + agg_result_V_i97_i_i_reg_2997);

assign tmp15_fu_2045_p2 = (tmp16_reg_3143 + tmp23_reg_3148);

assign tmp16_fu_1966_p2 = (tmp17_reg_3133 + tmp20_fu_1960_p2);

assign tmp17_fu_1895_p2 = (tmp18_fu_1887_p2 + tmp19_fu_1891_p2);

assign tmp18_fu_1887_p2 = (agg_result_V_i112_i_s_reg_3012 + agg_result_V_i107_i_s_reg_3007);

assign tmp19_fu_1891_p2 = (agg_result_V_i122_i_s_reg_3022 + agg_result_V_i117_i_s_reg_3017);

assign tmp1_fu_2029_p2 = (tmp2_fu_2019_p2 + tmp5_fu_2025_p2);

assign tmp20_fu_1960_p2 = (tmp21_fu_1952_p2 + tmp22_fu_1956_p2);

assign tmp21_fu_1952_p2 = (agg_result_V_i132_i_s_reg_3053 + agg_result_V_i127_i_s_reg_3048);

assign tmp22_fu_1956_p2 = (agg_result_V_i142_i_s_reg_3063 + agg_result_V_i137_i_s_reg_3058);

assign tmp23_fu_2004_p2 = (tmp24_fu_1979_p2 + tmp27_fu_1998_p2);

assign tmp24_fu_1979_p2 = (tmp25_fu_1971_p2 + tmp26_fu_1975_p2);

assign tmp25_fu_1971_p2 = (agg_result_V_i152_i_s_reg_3073 + agg_result_V_i147_i_s_reg_3068);

assign tmp26_fu_1975_p2 = (agg_result_V_i162_i_s_reg_3083 + agg_result_V_i157_i_s_reg_3078);

assign tmp27_fu_1998_p2 = (tmp28_fu_1985_p2 + tmp29_fu_1993_p2);

assign tmp28_fu_1985_p2 = (agg_result_V_i172_i_s_reg_3093 + agg_result_V_i167_i_s_reg_3088);

assign tmp29_fu_1993_p2 = (agg_result_V_i177_i_s_reg_3098 + tmp30_fu_1989_p2);

assign tmp2_fu_2019_p2 = (tmp3_fu_2010_p2 + tmp4_fu_2015_p2);

assign tmp30_fu_1989_p2 = (agg_result_V_i187_i_s_reg_3108 + agg_result_V_i182_i_s_reg_3103);

assign tmp3_fu_2010_p2 = (agg_result_V_i_i_i_i_reg_3033 + layer3_matrix_V_q0);

assign tmp4_fu_2015_p2 = (agg_result_V_i42_i_i_reg_3043 + agg_result_V_i37_i_i_reg_3038);

assign tmp5_fu_2025_p2 = (tmp6_reg_3113 + tmp7_reg_3118);

assign tmp6_fu_1851_p2 = (agg_result_V_i52_i_i_reg_2952 + agg_result_V_i47_i_i_reg_2947);

assign tmp7_fu_1855_p2 = (agg_result_V_i62_i_i_reg_2962 + agg_result_V_i57_i_i_reg_2957);

assign tmp8_fu_2035_p2 = (tmp9_reg_3123 + tmp12_reg_3128);

assign tmp9_fu_1867_p2 = (tmp10_fu_1859_p2 + tmp11_fu_1863_p2);

assign tmp_10_fu_1941_p2 = (tmp_7_fu_1923_p2 + tmp_3_i_i_i_cast_fu_1937_p1);

assign tmp_11_cast_fu_1947_p1 = $signed(tmp_10_fu_1941_p2);

assign tmp_11_fu_1396_p2 = (tmp_s_fu_1387_p2 + tmp_5_i_i_i_cast_fu_1393_p1);

assign tmp_12_cast_fu_1402_p1 = $signed(tmp_11_fu_1396_p2);

assign tmp_13_fu_937_p1 = p_4_i_i_i_reg_808[4:0];

assign tmp_1_fu_2107_p3 = {{tmp_1_i_i_i_mid2_v_reg_3172}, {5'd0}};

assign tmp_1_i_i_i_mid2_v_fu_2093_p3 = ((exitcond_i_i_i_fu_2079_p2[0:0] === 1'b1) ? oh_V_fu_2073_p2 : p_1_i_i_i_phi_fu_867_p4);

assign tmp_2_fu_2118_p3 = {{tmp_1_i_i_i_mid2_v_reg_3172}, {1'd0}};

assign tmp_3_fu_2129_p2 = (p_shl1_cast_fu_2114_p1 - p_shl2_cast_fu_2125_p1);

assign tmp_3_i_i_i_cast_fu_1937_p1 = r_V_fu_1932_p2;

assign tmp_4_cast_fu_2144_p1 = $signed(tmp_4_fu_2138_p2);

assign tmp_4_fu_2138_p2 = (tmp_3_fu_2129_p2 + tmp_4_i_i_i_cast_fu_2135_p1);

assign tmp_4_i_i_i_cast_fu_2135_p1 = p_3_i_i_i_mid2_reg_3167;

assign tmp_5_fu_1901_p3 = {{tmp_i_i_i_mid2_v_reg_3027}, {5'd0}};

assign tmp_5_i_i_i_cast_fu_1393_p1 = p_6_i_i_i_mid2_reg_2747;

assign tmp_6_fu_1912_p3 = {{tmp_i_i_i_mid2_v_reg_3027}, {1'd0}};

assign tmp_7_fu_1923_p2 = (p_shl3_cast_fu_1908_p1 - p_shl4_cast_fu_1919_p1);

assign tmp_8_fu_1365_p3 = {{tmp_i_i_i_mid2_v_v_s_reg_2754}, {3'd0}};

assign tmp_9_fu_1376_p3 = {{tmp_i_i_i_mid2_v_v_s_reg_2754}, {1'd0}};

assign tmp_fu_2039_p2 = (tmp1_fu_2029_p2 + tmp8_fu_2035_p2);

assign tmp_i103_cast_i_i_i_fu_1257_p1 = $signed(in_buf_V_15_1_i_i_i_fu_282);

assign tmp_i108_cast_i_i_i_fu_1261_p1 = $signed(in_buf_V_16_1_i_i_i_fu_286);

assign tmp_i113_cast_i_i_i_fu_1265_p1 = $signed(in_buf_V_17_1_i_i_i_fu_290);

assign tmp_i118_cast_i_i_i_fu_1269_p1 = $signed(in_buf_V_18_1_i_i_i_fu_294);

assign tmp_i123_cast_i_i_i_fu_1273_p1 = $signed(in_buf_V_19_1_i_i_i_fu_298);

assign tmp_i128_cast_i_i_i_fu_1277_p1 = $signed(in_buf_V_20_1_i_i_i_fu_302);

assign tmp_i133_cast_i_i_i_fu_1281_p1 = $signed(in_buf_V_21_1_i_i_i_fu_306);

assign tmp_i138_cast_i_i_i_fu_1285_p1 = $signed(in_buf_V_22_1_i_i_i_fu_310);

assign tmp_i143_cast_i_i_i_fu_1289_p1 = $signed(in_buf_V_23_1_i_i_i_fu_314);

assign tmp_i148_cast_i_i_i_fu_1293_p1 = $signed(in_buf_V_24_1_i_i_i_fu_318);

assign tmp_i153_cast_i_i_i_fu_1297_p1 = $signed(in_buf_V_25_1_i_i_i_fu_322);

assign tmp_i158_cast_i_i_i_fu_1301_p1 = $signed(in_buf_V_26_1_i_i_i_fu_326);

assign tmp_i163_cast_i_i_i_fu_1305_p1 = $signed(in_buf_V_27_1_i_i_i_fu_330);

assign tmp_i168_cast_i_i_i_fu_1309_p1 = $signed(in_buf_V_28_1_i_i_i_fu_334);

assign tmp_i173_cast_i_i_i_fu_1313_p1 = $signed(in_buf_V_29_1_i_i_i_fu_338);

assign tmp_i178_cast_i_i_i_fu_1317_p1 = $signed(in_buf_V_30_1_i_i_i_fu_342);

assign tmp_i183_cast_i_i_i_fu_1321_p1 = $signed(in_buf_V_31_1_i_i_i_fu_346);

assign tmp_i33_cast_i_i_i_fu_1201_p1 = $signed(in_buf_V_1_1_i_i_i_fu_226);

assign tmp_i38_cast_i_i_i_fu_1205_p1 = $signed(in_buf_V_2_1_i_i_i_fu_230);

assign tmp_i43_cast_i_i_i_fu_1209_p1 = $signed(in_buf_V_3_1_i_i_i_fu_234);

assign tmp_i48_cast_i_i_i_fu_1213_p1 = $signed(in_buf_V_4_1_i_i_i_fu_238);

assign tmp_i53_cast_i_i_i_fu_1217_p1 = $signed(in_buf_V_5_1_i_i_i_fu_242);

assign tmp_i58_cast_i_i_i_fu_1221_p1 = $signed(in_buf_V_6_1_i_i_i_fu_246);

assign tmp_i63_cast_i_i_i_fu_1225_p1 = $signed(in_buf_V_7_1_i_i_i_fu_250);

assign tmp_i68_cast_i_i_i_fu_1229_p1 = $signed(in_buf_V_8_1_i_i_i_fu_254);

assign tmp_i73_cast_i_i_i_fu_1233_p1 = $signed(in_buf_V_9_1_i_i_i_fu_258);

assign tmp_i78_cast_i_i_i_fu_1237_p1 = $signed(in_buf_V_10_1_i_i_i_fu_262);

assign tmp_i83_cast_i_i_i_fu_1241_p1 = $signed(in_buf_V_11_1_i_i_i_fu_266);

assign tmp_i88_cast_i_i_i_fu_1245_p1 = $signed(in_buf_V_12_1_i_i_i_fu_270);

assign tmp_i93_cast_i_i_i_fu_1249_p1 = $signed(in_buf_V_13_1_i_i_i_fu_274);

assign tmp_i98_cast_i_i_i_fu_1253_p1 = $signed(in_buf_V_14_1_i_i_i_fu_278);

assign tmp_i_cast_i_i_i_fu_1197_p1 = $signed(in_buf_V_0_1_i_i_i_fu_222);

assign tmp_i_i_i_mid2_v_fu_1638_p2 = (tmp_i_i_i_mid2_v_v_fu_1635_p1 + p_i_i_i_mid2_reg_2559);

assign tmp_i_i_i_mid2_v_v_fu_1635_p1 = ap_reg_pp1_iter1_tmp_i_i_i_mid2_v_v_s_reg_2754;

assign tmp_i_i_i_mid2_v_v_s_fu_1357_p3 = ((exitcond6_i_i_i_fu_1343_p2[0:0] === 1'b1) ? kh_V_fu_1337_p2 : p_5_i_i_i_phi_fu_834_p4);

assign tmp_s_fu_1387_p2 = (p_shl_cast_fu_1372_p1 - p_shl5_cast_fu_1383_p1);

endmodule //stream_deconv_387
