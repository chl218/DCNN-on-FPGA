// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2017.1
// Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module p_wt_kernel_385 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        kernel_i_V_V2_dout,
        kernel_i_V_V2_empty_n,
        kernel_i_V_V2_read,
        layer3_kernel_V_0_address0,
        layer3_kernel_V_0_ce0,
        layer3_kernel_V_0_we0,
        layer3_kernel_V_0_d0,
        layer3_kernel_V_1_address0,
        layer3_kernel_V_1_ce0,
        layer3_kernel_V_1_we0,
        layer3_kernel_V_1_d0,
        layer3_kernel_V_10_address0,
        layer3_kernel_V_10_ce0,
        layer3_kernel_V_10_we0,
        layer3_kernel_V_10_d0,
        layer3_kernel_V_11_address0,
        layer3_kernel_V_11_ce0,
        layer3_kernel_V_11_we0,
        layer3_kernel_V_11_d0,
        layer3_kernel_V_12_address0,
        layer3_kernel_V_12_ce0,
        layer3_kernel_V_12_we0,
        layer3_kernel_V_12_d0,
        layer3_kernel_V_13_address0,
        layer3_kernel_V_13_ce0,
        layer3_kernel_V_13_we0,
        layer3_kernel_V_13_d0,
        layer3_kernel_V_14_address0,
        layer3_kernel_V_14_ce0,
        layer3_kernel_V_14_we0,
        layer3_kernel_V_14_d0,
        layer3_kernel_V_15_address0,
        layer3_kernel_V_15_ce0,
        layer3_kernel_V_15_we0,
        layer3_kernel_V_15_d0,
        layer3_kernel_V_16_address0,
        layer3_kernel_V_16_ce0,
        layer3_kernel_V_16_we0,
        layer3_kernel_V_16_d0,
        layer3_kernel_V_17_address0,
        layer3_kernel_V_17_ce0,
        layer3_kernel_V_17_we0,
        layer3_kernel_V_17_d0,
        layer3_kernel_V_18_address0,
        layer3_kernel_V_18_ce0,
        layer3_kernel_V_18_we0,
        layer3_kernel_V_18_d0,
        layer3_kernel_V_19_address0,
        layer3_kernel_V_19_ce0,
        layer3_kernel_V_19_we0,
        layer3_kernel_V_19_d0,
        layer3_kernel_V_2_address0,
        layer3_kernel_V_2_ce0,
        layer3_kernel_V_2_we0,
        layer3_kernel_V_2_d0,
        layer3_kernel_V_20_address0,
        layer3_kernel_V_20_ce0,
        layer3_kernel_V_20_we0,
        layer3_kernel_V_20_d0,
        layer3_kernel_V_21_address0,
        layer3_kernel_V_21_ce0,
        layer3_kernel_V_21_we0,
        layer3_kernel_V_21_d0,
        layer3_kernel_V_22_address0,
        layer3_kernel_V_22_ce0,
        layer3_kernel_V_22_we0,
        layer3_kernel_V_22_d0,
        layer3_kernel_V_23_address0,
        layer3_kernel_V_23_ce0,
        layer3_kernel_V_23_we0,
        layer3_kernel_V_23_d0,
        layer3_kernel_V_24_address0,
        layer3_kernel_V_24_ce0,
        layer3_kernel_V_24_we0,
        layer3_kernel_V_24_d0,
        layer3_kernel_V_25_address0,
        layer3_kernel_V_25_ce0,
        layer3_kernel_V_25_we0,
        layer3_kernel_V_25_d0,
        layer3_kernel_V_26_address0,
        layer3_kernel_V_26_ce0,
        layer3_kernel_V_26_we0,
        layer3_kernel_V_26_d0,
        layer3_kernel_V_27_address0,
        layer3_kernel_V_27_ce0,
        layer3_kernel_V_27_we0,
        layer3_kernel_V_27_d0,
        layer3_kernel_V_28_address0,
        layer3_kernel_V_28_ce0,
        layer3_kernel_V_28_we0,
        layer3_kernel_V_28_d0,
        layer3_kernel_V_29_address0,
        layer3_kernel_V_29_ce0,
        layer3_kernel_V_29_we0,
        layer3_kernel_V_29_d0,
        layer3_kernel_V_3_address0,
        layer3_kernel_V_3_ce0,
        layer3_kernel_V_3_we0,
        layer3_kernel_V_3_d0,
        layer3_kernel_V_30_address0,
        layer3_kernel_V_30_ce0,
        layer3_kernel_V_30_we0,
        layer3_kernel_V_30_d0,
        layer3_kernel_V_31_address0,
        layer3_kernel_V_31_ce0,
        layer3_kernel_V_31_we0,
        layer3_kernel_V_31_d0,
        layer3_kernel_V_4_address0,
        layer3_kernel_V_4_ce0,
        layer3_kernel_V_4_we0,
        layer3_kernel_V_4_d0,
        layer3_kernel_V_5_address0,
        layer3_kernel_V_5_ce0,
        layer3_kernel_V_5_we0,
        layer3_kernel_V_5_d0,
        layer3_kernel_V_6_address0,
        layer3_kernel_V_6_ce0,
        layer3_kernel_V_6_we0,
        layer3_kernel_V_6_d0,
        layer3_kernel_V_7_address0,
        layer3_kernel_V_7_ce0,
        layer3_kernel_V_7_we0,
        layer3_kernel_V_7_d0,
        layer3_kernel_V_8_address0,
        layer3_kernel_V_8_ce0,
        layer3_kernel_V_8_we0,
        layer3_kernel_V_8_d0,
        layer3_kernel_V_9_address0,
        layer3_kernel_V_9_ce0,
        layer3_kernel_V_9_we0,
        layer3_kernel_V_9_d0
);

parameter    ap_ST_fsm_state1 = 34'd1;
parameter    ap_ST_fsm_pp0_stage0 = 34'd2;
parameter    ap_ST_fsm_pp0_stage1 = 34'd4;
parameter    ap_ST_fsm_pp0_stage2 = 34'd8;
parameter    ap_ST_fsm_pp0_stage3 = 34'd16;
parameter    ap_ST_fsm_pp0_stage4 = 34'd32;
parameter    ap_ST_fsm_pp0_stage5 = 34'd64;
parameter    ap_ST_fsm_pp0_stage6 = 34'd128;
parameter    ap_ST_fsm_pp0_stage7 = 34'd256;
parameter    ap_ST_fsm_pp0_stage8 = 34'd512;
parameter    ap_ST_fsm_pp0_stage9 = 34'd1024;
parameter    ap_ST_fsm_pp0_stage10 = 34'd2048;
parameter    ap_ST_fsm_pp0_stage11 = 34'd4096;
parameter    ap_ST_fsm_pp0_stage12 = 34'd8192;
parameter    ap_ST_fsm_pp0_stage13 = 34'd16384;
parameter    ap_ST_fsm_pp0_stage14 = 34'd32768;
parameter    ap_ST_fsm_pp0_stage15 = 34'd65536;
parameter    ap_ST_fsm_pp0_stage16 = 34'd131072;
parameter    ap_ST_fsm_pp0_stage17 = 34'd262144;
parameter    ap_ST_fsm_pp0_stage18 = 34'd524288;
parameter    ap_ST_fsm_pp0_stage19 = 34'd1048576;
parameter    ap_ST_fsm_pp0_stage20 = 34'd2097152;
parameter    ap_ST_fsm_pp0_stage21 = 34'd4194304;
parameter    ap_ST_fsm_pp0_stage22 = 34'd8388608;
parameter    ap_ST_fsm_pp0_stage23 = 34'd16777216;
parameter    ap_ST_fsm_pp0_stage24 = 34'd33554432;
parameter    ap_ST_fsm_pp0_stage25 = 34'd67108864;
parameter    ap_ST_fsm_pp0_stage26 = 34'd134217728;
parameter    ap_ST_fsm_pp0_stage27 = 34'd268435456;
parameter    ap_ST_fsm_pp0_stage28 = 34'd536870912;
parameter    ap_ST_fsm_pp0_stage29 = 34'd1073741824;
parameter    ap_ST_fsm_pp0_stage30 = 34'd2147483648;
parameter    ap_ST_fsm_pp0_stage31 = 34'd4294967296;
parameter    ap_ST_fsm_state35 = 34'd8589934592;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
input  [17:0] kernel_i_V_V2_dout;
input   kernel_i_V_V2_empty_n;
output   kernel_i_V_V2_read;
output  [5:0] layer3_kernel_V_0_address0;
output   layer3_kernel_V_0_ce0;
output   layer3_kernel_V_0_we0;
output  [17:0] layer3_kernel_V_0_d0;
output  [5:0] layer3_kernel_V_1_address0;
output   layer3_kernel_V_1_ce0;
output   layer3_kernel_V_1_we0;
output  [17:0] layer3_kernel_V_1_d0;
output  [5:0] layer3_kernel_V_10_address0;
output   layer3_kernel_V_10_ce0;
output   layer3_kernel_V_10_we0;
output  [17:0] layer3_kernel_V_10_d0;
output  [5:0] layer3_kernel_V_11_address0;
output   layer3_kernel_V_11_ce0;
output   layer3_kernel_V_11_we0;
output  [17:0] layer3_kernel_V_11_d0;
output  [5:0] layer3_kernel_V_12_address0;
output   layer3_kernel_V_12_ce0;
output   layer3_kernel_V_12_we0;
output  [17:0] layer3_kernel_V_12_d0;
output  [5:0] layer3_kernel_V_13_address0;
output   layer3_kernel_V_13_ce0;
output   layer3_kernel_V_13_we0;
output  [17:0] layer3_kernel_V_13_d0;
output  [5:0] layer3_kernel_V_14_address0;
output   layer3_kernel_V_14_ce0;
output   layer3_kernel_V_14_we0;
output  [17:0] layer3_kernel_V_14_d0;
output  [5:0] layer3_kernel_V_15_address0;
output   layer3_kernel_V_15_ce0;
output   layer3_kernel_V_15_we0;
output  [17:0] layer3_kernel_V_15_d0;
output  [5:0] layer3_kernel_V_16_address0;
output   layer3_kernel_V_16_ce0;
output   layer3_kernel_V_16_we0;
output  [17:0] layer3_kernel_V_16_d0;
output  [5:0] layer3_kernel_V_17_address0;
output   layer3_kernel_V_17_ce0;
output   layer3_kernel_V_17_we0;
output  [17:0] layer3_kernel_V_17_d0;
output  [5:0] layer3_kernel_V_18_address0;
output   layer3_kernel_V_18_ce0;
output   layer3_kernel_V_18_we0;
output  [17:0] layer3_kernel_V_18_d0;
output  [5:0] layer3_kernel_V_19_address0;
output   layer3_kernel_V_19_ce0;
output   layer3_kernel_V_19_we0;
output  [17:0] layer3_kernel_V_19_d0;
output  [5:0] layer3_kernel_V_2_address0;
output   layer3_kernel_V_2_ce0;
output   layer3_kernel_V_2_we0;
output  [17:0] layer3_kernel_V_2_d0;
output  [5:0] layer3_kernel_V_20_address0;
output   layer3_kernel_V_20_ce0;
output   layer3_kernel_V_20_we0;
output  [17:0] layer3_kernel_V_20_d0;
output  [5:0] layer3_kernel_V_21_address0;
output   layer3_kernel_V_21_ce0;
output   layer3_kernel_V_21_we0;
output  [17:0] layer3_kernel_V_21_d0;
output  [5:0] layer3_kernel_V_22_address0;
output   layer3_kernel_V_22_ce0;
output   layer3_kernel_V_22_we0;
output  [17:0] layer3_kernel_V_22_d0;
output  [5:0] layer3_kernel_V_23_address0;
output   layer3_kernel_V_23_ce0;
output   layer3_kernel_V_23_we0;
output  [17:0] layer3_kernel_V_23_d0;
output  [5:0] layer3_kernel_V_24_address0;
output   layer3_kernel_V_24_ce0;
output   layer3_kernel_V_24_we0;
output  [17:0] layer3_kernel_V_24_d0;
output  [5:0] layer3_kernel_V_25_address0;
output   layer3_kernel_V_25_ce0;
output   layer3_kernel_V_25_we0;
output  [17:0] layer3_kernel_V_25_d0;
output  [5:0] layer3_kernel_V_26_address0;
output   layer3_kernel_V_26_ce0;
output   layer3_kernel_V_26_we0;
output  [17:0] layer3_kernel_V_26_d0;
output  [5:0] layer3_kernel_V_27_address0;
output   layer3_kernel_V_27_ce0;
output   layer3_kernel_V_27_we0;
output  [17:0] layer3_kernel_V_27_d0;
output  [5:0] layer3_kernel_V_28_address0;
output   layer3_kernel_V_28_ce0;
output   layer3_kernel_V_28_we0;
output  [17:0] layer3_kernel_V_28_d0;
output  [5:0] layer3_kernel_V_29_address0;
output   layer3_kernel_V_29_ce0;
output   layer3_kernel_V_29_we0;
output  [17:0] layer3_kernel_V_29_d0;
output  [5:0] layer3_kernel_V_3_address0;
output   layer3_kernel_V_3_ce0;
output   layer3_kernel_V_3_we0;
output  [17:0] layer3_kernel_V_3_d0;
output  [5:0] layer3_kernel_V_30_address0;
output   layer3_kernel_V_30_ce0;
output   layer3_kernel_V_30_we0;
output  [17:0] layer3_kernel_V_30_d0;
output  [5:0] layer3_kernel_V_31_address0;
output   layer3_kernel_V_31_ce0;
output   layer3_kernel_V_31_we0;
output  [17:0] layer3_kernel_V_31_d0;
output  [5:0] layer3_kernel_V_4_address0;
output   layer3_kernel_V_4_ce0;
output   layer3_kernel_V_4_we0;
output  [17:0] layer3_kernel_V_4_d0;
output  [5:0] layer3_kernel_V_5_address0;
output   layer3_kernel_V_5_ce0;
output   layer3_kernel_V_5_we0;
output  [17:0] layer3_kernel_V_5_d0;
output  [5:0] layer3_kernel_V_6_address0;
output   layer3_kernel_V_6_ce0;
output   layer3_kernel_V_6_we0;
output  [17:0] layer3_kernel_V_6_d0;
output  [5:0] layer3_kernel_V_7_address0;
output   layer3_kernel_V_7_ce0;
output   layer3_kernel_V_7_we0;
output  [17:0] layer3_kernel_V_7_d0;
output  [5:0] layer3_kernel_V_8_address0;
output   layer3_kernel_V_8_ce0;
output   layer3_kernel_V_8_we0;
output  [17:0] layer3_kernel_V_8_d0;
output  [5:0] layer3_kernel_V_9_address0;
output   layer3_kernel_V_9_ce0;
output   layer3_kernel_V_9_we0;
output  [17:0] layer3_kernel_V_9_d0;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg kernel_i_V_V2_read;
reg layer3_kernel_V_0_ce0;
reg layer3_kernel_V_0_we0;
reg layer3_kernel_V_1_ce0;
reg layer3_kernel_V_1_we0;
reg layer3_kernel_V_10_ce0;
reg layer3_kernel_V_10_we0;
reg layer3_kernel_V_11_ce0;
reg layer3_kernel_V_11_we0;
reg layer3_kernel_V_12_ce0;
reg layer3_kernel_V_12_we0;
reg layer3_kernel_V_13_ce0;
reg layer3_kernel_V_13_we0;
reg layer3_kernel_V_14_ce0;
reg layer3_kernel_V_14_we0;
reg layer3_kernel_V_15_ce0;
reg layer3_kernel_V_15_we0;
reg layer3_kernel_V_16_ce0;
reg layer3_kernel_V_16_we0;
reg layer3_kernel_V_17_ce0;
reg layer3_kernel_V_17_we0;
reg layer3_kernel_V_18_ce0;
reg layer3_kernel_V_18_we0;
reg layer3_kernel_V_19_ce0;
reg layer3_kernel_V_19_we0;
reg layer3_kernel_V_2_ce0;
reg layer3_kernel_V_2_we0;
reg layer3_kernel_V_20_ce0;
reg layer3_kernel_V_20_we0;
reg layer3_kernel_V_21_ce0;
reg layer3_kernel_V_21_we0;
reg layer3_kernel_V_22_ce0;
reg layer3_kernel_V_22_we0;
reg layer3_kernel_V_23_ce0;
reg layer3_kernel_V_23_we0;
reg layer3_kernel_V_24_ce0;
reg layer3_kernel_V_24_we0;
reg layer3_kernel_V_25_ce0;
reg layer3_kernel_V_25_we0;
reg layer3_kernel_V_26_ce0;
reg layer3_kernel_V_26_we0;
reg layer3_kernel_V_27_ce0;
reg layer3_kernel_V_27_we0;
reg layer3_kernel_V_28_ce0;
reg layer3_kernel_V_28_we0;
reg layer3_kernel_V_29_ce0;
reg layer3_kernel_V_29_we0;
reg layer3_kernel_V_3_ce0;
reg layer3_kernel_V_3_we0;
reg layer3_kernel_V_30_ce0;
reg layer3_kernel_V_30_we0;
reg layer3_kernel_V_31_ce0;
reg layer3_kernel_V_31_we0;
reg layer3_kernel_V_4_ce0;
reg layer3_kernel_V_4_we0;
reg layer3_kernel_V_5_ce0;
reg layer3_kernel_V_5_we0;
reg layer3_kernel_V_6_ce0;
reg layer3_kernel_V_6_we0;
reg layer3_kernel_V_7_ce0;
reg layer3_kernel_V_7_we0;
reg layer3_kernel_V_8_ce0;
reg layer3_kernel_V_8_we0;
reg layer3_kernel_V_9_ce0;
reg layer3_kernel_V_9_we0;

reg    ap_done_reg;
(* fsm_encoding = "none" *) reg   [33:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    kernel_i_V_V2_blk_n;
wire    ap_CS_fsm_pp0_stage1;
reg    ap_enable_reg_pp0_iter0;
wire    ap_block_pp0_stage1;
reg   [0:0] exitcond_flatten_reg_656;
wire    ap_CS_fsm_pp0_stage2;
wire    ap_block_pp0_stage2;
wire    ap_CS_fsm_pp0_stage3;
wire    ap_block_pp0_stage3;
wire    ap_CS_fsm_pp0_stage4;
wire    ap_block_pp0_stage4;
wire    ap_CS_fsm_pp0_stage5;
wire    ap_block_pp0_stage5;
wire    ap_CS_fsm_pp0_stage6;
wire    ap_block_pp0_stage6;
wire    ap_CS_fsm_pp0_stage7;
wire    ap_block_pp0_stage7;
wire    ap_CS_fsm_pp0_stage8;
wire    ap_block_pp0_stage8;
wire    ap_CS_fsm_pp0_stage9;
wire    ap_block_pp0_stage9;
wire    ap_CS_fsm_pp0_stage10;
wire    ap_block_pp0_stage10;
wire    ap_CS_fsm_pp0_stage11;
wire    ap_block_pp0_stage11;
wire    ap_CS_fsm_pp0_stage12;
wire    ap_block_pp0_stage12;
wire    ap_CS_fsm_pp0_stage13;
wire    ap_block_pp0_stage13;
wire    ap_CS_fsm_pp0_stage14;
wire    ap_block_pp0_stage14;
wire    ap_CS_fsm_pp0_stage15;
wire    ap_block_pp0_stage15;
wire    ap_CS_fsm_pp0_stage16;
wire    ap_block_pp0_stage16;
wire    ap_CS_fsm_pp0_stage17;
wire    ap_block_pp0_stage17;
wire    ap_CS_fsm_pp0_stage18;
wire    ap_block_pp0_stage18;
wire    ap_CS_fsm_pp0_stage19;
wire    ap_block_pp0_stage19;
wire    ap_CS_fsm_pp0_stage20;
wire    ap_block_pp0_stage20;
wire    ap_CS_fsm_pp0_stage21;
wire    ap_block_pp0_stage21;
wire    ap_CS_fsm_pp0_stage22;
wire    ap_block_pp0_stage22;
wire    ap_CS_fsm_pp0_stage23;
wire    ap_block_pp0_stage23;
wire    ap_CS_fsm_pp0_stage24;
wire    ap_block_pp0_stage24;
wire    ap_CS_fsm_pp0_stage25;
wire    ap_block_pp0_stage25;
wire    ap_CS_fsm_pp0_stage26;
wire    ap_block_pp0_stage26;
wire    ap_CS_fsm_pp0_stage27;
wire    ap_block_pp0_stage27;
wire    ap_CS_fsm_pp0_stage28;
wire    ap_block_pp0_stage28;
wire    ap_CS_fsm_pp0_stage29;
wire    ap_block_pp0_stage29;
wire    ap_CS_fsm_pp0_stage30;
wire    ap_block_pp0_stage30;
wire    ap_CS_fsm_pp0_stage31;
wire    ap_block_pp0_stage31;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter1;
wire    ap_block_pp0_stage0;
reg   [5:0] indvar_flatten_reg_505;
reg   [2:0] p_02_i_reg_516;
reg   [2:0] p_i_reg_527;
wire   [0:0] exitcond_flatten_fu_538_p2;
wire    ap_block_state2_pp0_stage0_iter0;
reg    ap_block_state34_pp0_stage0_iter1;
reg    ap_block_pp0_stage0_11001;
wire   [5:0] indvar_flatten_next_fu_544_p2;
reg   [5:0] indvar_flatten_next_reg_660;
wire   [2:0] p_i_mid2_fu_562_p3;
reg   [2:0] p_i_mid2_reg_665;
wire   [2:0] tmp_i_mid2_v_fu_570_p3;
reg   [2:0] tmp_i_mid2_v_reg_671;
reg   [17:0] tmp_V_reg_678;
reg    ap_block_state3_pp0_stage1_iter0;
reg    ap_block_pp0_stage1_11001;
reg   [17:0] tmp_V_57_reg_683;
reg    ap_block_state4_pp0_stage2_iter0;
reg    ap_block_pp0_stage2_11001;
reg   [17:0] tmp_V_58_reg_688;
reg    ap_block_state5_pp0_stage3_iter0;
reg    ap_block_pp0_stage3_11001;
reg   [17:0] tmp_V_59_reg_693;
reg    ap_block_state6_pp0_stage4_iter0;
reg    ap_block_pp0_stage4_11001;
reg   [17:0] tmp_V_60_reg_698;
reg    ap_block_state7_pp0_stage5_iter0;
reg    ap_block_pp0_stage5_11001;
reg   [17:0] tmp_V_61_reg_703;
reg    ap_block_state8_pp0_stage6_iter0;
reg    ap_block_pp0_stage6_11001;
reg   [17:0] tmp_V_62_reg_708;
reg    ap_block_state9_pp0_stage7_iter0;
reg    ap_block_pp0_stage7_11001;
reg   [17:0] tmp_V_63_reg_713;
reg    ap_block_state10_pp0_stage8_iter0;
reg    ap_block_pp0_stage8_11001;
reg   [17:0] tmp_V_64_reg_718;
reg    ap_block_state11_pp0_stage9_iter0;
reg    ap_block_pp0_stage9_11001;
reg   [17:0] tmp_V_65_reg_723;
reg    ap_block_state12_pp0_stage10_iter0;
reg    ap_block_pp0_stage10_11001;
reg   [17:0] tmp_V_66_reg_728;
reg    ap_block_state13_pp0_stage11_iter0;
reg    ap_block_pp0_stage11_11001;
reg   [17:0] tmp_V_67_reg_733;
reg    ap_block_state14_pp0_stage12_iter0;
reg    ap_block_pp0_stage12_11001;
reg   [17:0] tmp_V_68_reg_738;
reg    ap_block_state15_pp0_stage13_iter0;
reg    ap_block_pp0_stage13_11001;
reg   [17:0] tmp_V_69_reg_743;
reg    ap_block_state16_pp0_stage14_iter0;
reg    ap_block_pp0_stage14_11001;
reg   [17:0] tmp_V_70_reg_748;
reg    ap_block_state17_pp0_stage15_iter0;
reg    ap_block_pp0_stage15_11001;
reg   [17:0] tmp_V_71_reg_753;
reg    ap_block_state18_pp0_stage16_iter0;
reg    ap_block_pp0_stage16_11001;
reg   [17:0] tmp_V_72_reg_758;
reg    ap_block_state19_pp0_stage17_iter0;
reg    ap_block_pp0_stage17_11001;
reg   [17:0] tmp_V_73_reg_763;
reg    ap_block_state20_pp0_stage18_iter0;
reg    ap_block_pp0_stage18_11001;
reg   [17:0] tmp_V_74_reg_768;
reg    ap_block_state21_pp0_stage19_iter0;
reg    ap_block_pp0_stage19_11001;
reg   [17:0] tmp_V_75_reg_773;
reg    ap_block_state22_pp0_stage20_iter0;
reg    ap_block_pp0_stage20_11001;
reg   [17:0] tmp_V_76_reg_778;
reg    ap_block_state23_pp0_stage21_iter0;
reg    ap_block_pp0_stage21_11001;
reg   [17:0] tmp_V_77_reg_783;
reg    ap_block_state24_pp0_stage22_iter0;
reg    ap_block_pp0_stage22_11001;
reg   [17:0] tmp_V_78_reg_788;
reg    ap_block_state25_pp0_stage23_iter0;
reg    ap_block_pp0_stage23_11001;
reg   [17:0] tmp_V_79_reg_793;
reg    ap_block_state26_pp0_stage24_iter0;
reg    ap_block_pp0_stage24_11001;
reg   [17:0] tmp_V_80_reg_798;
reg    ap_block_state27_pp0_stage25_iter0;
reg    ap_block_pp0_stage25_11001;
reg   [17:0] tmp_V_81_reg_803;
reg    ap_block_state28_pp0_stage26_iter0;
reg    ap_block_pp0_stage26_11001;
reg   [17:0] tmp_V_82_reg_808;
reg    ap_block_state29_pp0_stage27_iter0;
reg    ap_block_pp0_stage27_11001;
reg   [17:0] tmp_V_83_reg_813;
reg    ap_block_state30_pp0_stage28_iter0;
reg    ap_block_pp0_stage28_11001;
reg   [17:0] tmp_V_84_reg_818;
reg    ap_block_state31_pp0_stage29_iter0;
reg    ap_block_pp0_stage29_11001;
reg   [17:0] tmp_V_85_reg_823;
reg    ap_block_state32_pp0_stage30_iter0;
reg    ap_block_pp0_stage30_11001;
reg   [17:0] tmp_V_86_reg_828;
reg    ap_block_state33_pp0_stage31_iter0;
reg    ap_block_pp0_stage31_11001;
wire   [2:0] kw_V_fu_578_p2;
reg   [2:0] kw_V_reg_833;
reg    ap_block_state1;
reg    ap_block_pp0_stage0_subdone;
reg    ap_condition_pp0_exit_iter0_state2;
reg    ap_block_pp0_stage31_subdone;
reg   [5:0] indvar_flatten_phi_fu_509_p4;
reg   [2:0] p_02_i_phi_fu_520_p4;
reg   [2:0] p_i_phi_fu_531_p4;
wire  signed [31:0] tmp_295_cast_fu_620_p1;
wire   [0:0] exitcond19_i_fu_556_p2;
wire   [2:0] kh_V_fu_550_p2;
wire   [5:0] tmp_fu_583_p3;
wire   [3:0] tmp_s_fu_594_p3;
wire   [6:0] p_shl_cast_fu_590_p1;
wire   [6:0] p_shl1_cast_fu_601_p1;
wire   [6:0] tmp_208_fu_605_p2;
wire   [6:0] tmp_i_cast_fu_611_p1;
wire   [6:0] tmp_209_fu_614_p2;
wire    ap_CS_fsm_state35;
reg   [33:0] ap_NS_fsm;
reg    ap_block_pp0_stage1_subdone;
reg    ap_block_pp0_stage2_subdone;
reg    ap_block_pp0_stage3_subdone;
reg    ap_block_pp0_stage4_subdone;
reg    ap_block_pp0_stage5_subdone;
reg    ap_block_pp0_stage6_subdone;
reg    ap_block_pp0_stage7_subdone;
reg    ap_block_pp0_stage8_subdone;
reg    ap_block_pp0_stage9_subdone;
reg    ap_block_pp0_stage10_subdone;
reg    ap_block_pp0_stage11_subdone;
reg    ap_block_pp0_stage12_subdone;
reg    ap_block_pp0_stage13_subdone;
reg    ap_block_pp0_stage14_subdone;
reg    ap_block_pp0_stage15_subdone;
reg    ap_block_pp0_stage16_subdone;
reg    ap_block_pp0_stage17_subdone;
reg    ap_block_pp0_stage18_subdone;
reg    ap_block_pp0_stage19_subdone;
reg    ap_block_pp0_stage20_subdone;
reg    ap_block_pp0_stage21_subdone;
reg    ap_block_pp0_stage22_subdone;
reg    ap_block_pp0_stage23_subdone;
reg    ap_block_pp0_stage24_subdone;
reg    ap_block_pp0_stage25_subdone;
reg    ap_block_pp0_stage26_subdone;
reg    ap_block_pp0_stage27_subdone;
reg    ap_block_pp0_stage28_subdone;
reg    ap_block_pp0_stage29_subdone;
reg    ap_block_pp0_stage30_subdone;
reg    ap_idle_pp0;
wire    ap_enable_pp0;

// power-on initialization
initial begin
#0 ap_done_reg = 1'b0;
#0 ap_CS_fsm = 34'd1;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_continue)) begin
            ap_done_reg <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state35)) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_block_pp0_stage0_subdone == 1'b0) & (1'b1 == ap_condition_pp0_exit_iter0_state2))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if (((1'b1 == ap_CS_fsm_state1) & ~((1'b0 == ap_start) | (ap_done_reg == 1'b1)))) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b1 == ap_condition_pp0_exit_iter0_state2) & (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_block_pp0_stage0_subdone == 1'b0)) | ((1'b1 == ap_CS_fsm_pp0_stage31) & (ap_block_pp0_stage31_subdone == 1'b0))))) begin
            ap_enable_reg_pp0_iter1 <= (ap_condition_pp0_exit_iter0_state2 ^ 1'b1);
        end else if ((((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_block_pp0_stage0_subdone == 1'b0)) | ((1'b1 == ap_CS_fsm_pp0_stage31) & (ap_block_pp0_stage31_subdone == 1'b0)))) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end else if (((1'b1 == ap_CS_fsm_state1) & ~((1'b0 == ap_start) | (ap_done_reg == 1'b1)))) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_flatten_reg_656 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_enable_reg_pp0_iter1) & (ap_block_pp0_stage0_11001 == 1'b0))) begin
        indvar_flatten_reg_505 <= indvar_flatten_next_reg_660;
    end else if (((1'b1 == ap_CS_fsm_state1) & ~((1'b0 == ap_start) | (ap_done_reg == 1'b1)))) begin
        indvar_flatten_reg_505 <= 6'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_flatten_reg_656 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_enable_reg_pp0_iter1) & (ap_block_pp0_stage0_11001 == 1'b0))) begin
        p_02_i_reg_516 <= tmp_i_mid2_v_reg_671;
    end else if (((1'b1 == ap_CS_fsm_state1) & ~((1'b0 == ap_start) | (ap_done_reg == 1'b1)))) begin
        p_02_i_reg_516 <= 3'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_flatten_reg_656 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_enable_reg_pp0_iter1) & (ap_block_pp0_stage0_11001 == 1'b0))) begin
        p_i_reg_527 <= kw_V_reg_833;
    end else if (((1'b1 == ap_CS_fsm_state1) & ~((1'b0 == ap_start) | (ap_done_reg == 1'b1)))) begin
        p_i_reg_527 <= 3'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_block_pp0_stage0_11001 == 1'b0))) begin
        exitcond_flatten_reg_656 <= exitcond_flatten_fu_538_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_block_pp0_stage0_11001 == 1'b0))) begin
        indvar_flatten_next_reg_660 <= indvar_flatten_next_fu_544_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_enable_reg_pp0_iter0) & (exitcond_flatten_reg_656 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage31) & (ap_block_pp0_stage31_11001 == 1'b0))) begin
        kw_V_reg_833 <= kw_V_fu_578_p2;
        tmp_V_86_reg_828 <= kernel_i_V_V2_dout;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_block_pp0_stage0_11001 == 1'b0) & (1'd0 == exitcond_flatten_fu_538_p2))) begin
        p_i_mid2_reg_665 <= p_i_mid2_fu_562_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_enable_reg_pp0_iter0) & (exitcond_flatten_reg_656 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage2) & (ap_block_pp0_stage2_11001 == 1'b0))) begin
        tmp_V_57_reg_683 <= kernel_i_V_V2_dout;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_enable_reg_pp0_iter0) & (exitcond_flatten_reg_656 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage3) & (ap_block_pp0_stage3_11001 == 1'b0))) begin
        tmp_V_58_reg_688 <= kernel_i_V_V2_dout;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_enable_reg_pp0_iter0) & (exitcond_flatten_reg_656 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage4) & (ap_block_pp0_stage4_11001 == 1'b0))) begin
        tmp_V_59_reg_693 <= kernel_i_V_V2_dout;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_enable_reg_pp0_iter0) & (exitcond_flatten_reg_656 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage5) & (ap_block_pp0_stage5_11001 == 1'b0))) begin
        tmp_V_60_reg_698 <= kernel_i_V_V2_dout;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_enable_reg_pp0_iter0) & (exitcond_flatten_reg_656 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage6) & (ap_block_pp0_stage6_11001 == 1'b0))) begin
        tmp_V_61_reg_703 <= kernel_i_V_V2_dout;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_enable_reg_pp0_iter0) & (exitcond_flatten_reg_656 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage7) & (ap_block_pp0_stage7_11001 == 1'b0))) begin
        tmp_V_62_reg_708 <= kernel_i_V_V2_dout;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_enable_reg_pp0_iter0) & (exitcond_flatten_reg_656 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage8) & (ap_block_pp0_stage8_11001 == 1'b0))) begin
        tmp_V_63_reg_713 <= kernel_i_V_V2_dout;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_enable_reg_pp0_iter0) & (exitcond_flatten_reg_656 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage9) & (ap_block_pp0_stage9_11001 == 1'b0))) begin
        tmp_V_64_reg_718 <= kernel_i_V_V2_dout;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_enable_reg_pp0_iter0) & (exitcond_flatten_reg_656 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage10) & (ap_block_pp0_stage10_11001 == 1'b0))) begin
        tmp_V_65_reg_723 <= kernel_i_V_V2_dout;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_enable_reg_pp0_iter0) & (exitcond_flatten_reg_656 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage11) & (ap_block_pp0_stage11_11001 == 1'b0))) begin
        tmp_V_66_reg_728 <= kernel_i_V_V2_dout;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_enable_reg_pp0_iter0) & (exitcond_flatten_reg_656 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage12) & (ap_block_pp0_stage12_11001 == 1'b0))) begin
        tmp_V_67_reg_733 <= kernel_i_V_V2_dout;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_enable_reg_pp0_iter0) & (exitcond_flatten_reg_656 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage13) & (ap_block_pp0_stage13_11001 == 1'b0))) begin
        tmp_V_68_reg_738 <= kernel_i_V_V2_dout;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_enable_reg_pp0_iter0) & (exitcond_flatten_reg_656 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage14) & (ap_block_pp0_stage14_11001 == 1'b0))) begin
        tmp_V_69_reg_743 <= kernel_i_V_V2_dout;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_enable_reg_pp0_iter0) & (exitcond_flatten_reg_656 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage15) & (ap_block_pp0_stage15_11001 == 1'b0))) begin
        tmp_V_70_reg_748 <= kernel_i_V_V2_dout;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_enable_reg_pp0_iter0) & (exitcond_flatten_reg_656 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage16) & (ap_block_pp0_stage16_11001 == 1'b0))) begin
        tmp_V_71_reg_753 <= kernel_i_V_V2_dout;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_enable_reg_pp0_iter0) & (exitcond_flatten_reg_656 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage17) & (ap_block_pp0_stage17_11001 == 1'b0))) begin
        tmp_V_72_reg_758 <= kernel_i_V_V2_dout;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_enable_reg_pp0_iter0) & (exitcond_flatten_reg_656 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage18) & (ap_block_pp0_stage18_11001 == 1'b0))) begin
        tmp_V_73_reg_763 <= kernel_i_V_V2_dout;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_enable_reg_pp0_iter0) & (exitcond_flatten_reg_656 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage19) & (ap_block_pp0_stage19_11001 == 1'b0))) begin
        tmp_V_74_reg_768 <= kernel_i_V_V2_dout;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_enable_reg_pp0_iter0) & (exitcond_flatten_reg_656 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage20) & (ap_block_pp0_stage20_11001 == 1'b0))) begin
        tmp_V_75_reg_773 <= kernel_i_V_V2_dout;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_enable_reg_pp0_iter0) & (exitcond_flatten_reg_656 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage21) & (ap_block_pp0_stage21_11001 == 1'b0))) begin
        tmp_V_76_reg_778 <= kernel_i_V_V2_dout;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_enable_reg_pp0_iter0) & (exitcond_flatten_reg_656 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage22) & (ap_block_pp0_stage22_11001 == 1'b0))) begin
        tmp_V_77_reg_783 <= kernel_i_V_V2_dout;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_enable_reg_pp0_iter0) & (exitcond_flatten_reg_656 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage23) & (ap_block_pp0_stage23_11001 == 1'b0))) begin
        tmp_V_78_reg_788 <= kernel_i_V_V2_dout;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_enable_reg_pp0_iter0) & (exitcond_flatten_reg_656 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage24) & (ap_block_pp0_stage24_11001 == 1'b0))) begin
        tmp_V_79_reg_793 <= kernel_i_V_V2_dout;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_enable_reg_pp0_iter0) & (exitcond_flatten_reg_656 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage25) & (ap_block_pp0_stage25_11001 == 1'b0))) begin
        tmp_V_80_reg_798 <= kernel_i_V_V2_dout;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_enable_reg_pp0_iter0) & (exitcond_flatten_reg_656 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage26) & (ap_block_pp0_stage26_11001 == 1'b0))) begin
        tmp_V_81_reg_803 <= kernel_i_V_V2_dout;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_enable_reg_pp0_iter0) & (exitcond_flatten_reg_656 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage27) & (ap_block_pp0_stage27_11001 == 1'b0))) begin
        tmp_V_82_reg_808 <= kernel_i_V_V2_dout;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_enable_reg_pp0_iter0) & (exitcond_flatten_reg_656 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage28) & (ap_block_pp0_stage28_11001 == 1'b0))) begin
        tmp_V_83_reg_813 <= kernel_i_V_V2_dout;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_enable_reg_pp0_iter0) & (exitcond_flatten_reg_656 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage29) & (ap_block_pp0_stage29_11001 == 1'b0))) begin
        tmp_V_84_reg_818 <= kernel_i_V_V2_dout;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_enable_reg_pp0_iter0) & (exitcond_flatten_reg_656 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage30) & (ap_block_pp0_stage30_11001 == 1'b0))) begin
        tmp_V_85_reg_823 <= kernel_i_V_V2_dout;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b1 == ap_enable_reg_pp0_iter0) & (exitcond_flatten_reg_656 == 1'd0) & (ap_block_pp0_stage1_11001 == 1'b0))) begin
        tmp_V_reg_678 <= kernel_i_V_V2_dout;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_block_pp0_stage0_11001 == 1'b0) & (1'd0 == exitcond_flatten_fu_538_p2))) begin
        tmp_i_mid2_v_reg_671 <= tmp_i_mid2_v_fu_570_p3;
    end
end

always @ (*) begin
    if ((exitcond_flatten_fu_538_p2 == 1'd1)) begin
        ap_condition_pp0_exit_iter0_state2 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter0_state2 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state35)) begin
        ap_done = 1'b1;
    end else begin
        ap_done = ap_done_reg;
    end
end

always @ (*) begin
    if (((1'b0 == ap_start) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_enable_reg_pp0_iter0) & (1'b0 == ap_enable_reg_pp0_iter1))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state35)) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((exitcond_flatten_reg_656 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_enable_reg_pp0_iter1) & (ap_block_pp0_stage0 == 1'b0))) begin
        indvar_flatten_phi_fu_509_p4 = indvar_flatten_next_reg_660;
    end else begin
        indvar_flatten_phi_fu_509_p4 = indvar_flatten_reg_505;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b1 == ap_enable_reg_pp0_iter0) & (ap_block_pp0_stage1 == 1'b0) & (exitcond_flatten_reg_656 == 1'd0)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (exitcond_flatten_reg_656 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage2) & (ap_block_pp0_stage2 == 1'b0)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (exitcond_flatten_reg_656 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage3) & (ap_block_pp0_stage3 == 1'b0)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (exitcond_flatten_reg_656 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage4) & (ap_block_pp0_stage4 == 1'b0)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (exitcond_flatten_reg_656 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage5) & (ap_block_pp0_stage5 == 1'b0)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (exitcond_flatten_reg_656 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage6) & (ap_block_pp0_stage6 == 1'b0)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (exitcond_flatten_reg_656 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage7) & (ap_block_pp0_stage7 == 1'b0)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (exitcond_flatten_reg_656 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage8) & (ap_block_pp0_stage8 == 1'b0)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (exitcond_flatten_reg_656 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage9) & (ap_block_pp0_stage9 == 1'b0)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (exitcond_flatten_reg_656 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage10) & (ap_block_pp0_stage10 == 1'b0)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (exitcond_flatten_reg_656 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage11) & (ap_block_pp0_stage11 == 1'b0)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (exitcond_flatten_reg_656 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage12) & (ap_block_pp0_stage12 == 1'b0)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (exitcond_flatten_reg_656 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage13) & (ap_block_pp0_stage13 == 1'b0)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (exitcond_flatten_reg_656 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage14) & (ap_block_pp0_stage14 == 1'b0)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (exitcond_flatten_reg_656 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage15) & (ap_block_pp0_stage15 == 1'b0)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (exitcond_flatten_reg_656 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage16) & (ap_block_pp0_stage16 == 1'b0)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (exitcond_flatten_reg_656 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage17) & (ap_block_pp0_stage17 == 1'b0)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (exitcond_flatten_reg_656 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage18) & (ap_block_pp0_stage18 == 1'b0)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (exitcond_flatten_reg_656 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage19) & (ap_block_pp0_stage19 == 1'b0)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (exitcond_flatten_reg_656 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage20) & (ap_block_pp0_stage20 == 1'b0)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (exitcond_flatten_reg_656 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage21) & (ap_block_pp0_stage21 == 1'b0)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (exitcond_flatten_reg_656 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage22) & (ap_block_pp0_stage22 == 1'b0)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (exitcond_flatten_reg_656 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage23) & (ap_block_pp0_stage23 == 1'b0)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (exitcond_flatten_reg_656 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage24) & (ap_block_pp0_stage24 == 1'b0)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (exitcond_flatten_reg_656 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage25) & (ap_block_pp0_stage25 == 1'b0)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (exitcond_flatten_reg_656 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage26) & (ap_block_pp0_stage26 == 1'b0)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (exitcond_flatten_reg_656 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage27) & (ap_block_pp0_stage27 == 1'b0)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (exitcond_flatten_reg_656 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage28) & (ap_block_pp0_stage28 == 1'b0)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (exitcond_flatten_reg_656 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage29) & (ap_block_pp0_stage29 == 1'b0)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (exitcond_flatten_reg_656 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage30) & (ap_block_pp0_stage30 == 1'b0)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (exitcond_flatten_reg_656 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage31) & (ap_block_pp0_stage31 == 1'b0)) | ((exitcond_flatten_reg_656 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_enable_reg_pp0_iter1) & (ap_block_pp0_stage0 == 1'b0)))) begin
        kernel_i_V_V2_blk_n = kernel_i_V_V2_empty_n;
    end else begin
        kernel_i_V_V2_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b1 == ap_enable_reg_pp0_iter0) & (exitcond_flatten_reg_656 == 1'd0) & (ap_block_pp0_stage1_11001 == 1'b0)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (exitcond_flatten_reg_656 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage2) & (ap_block_pp0_stage2_11001 == 1'b0)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (exitcond_flatten_reg_656 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage3) & (ap_block_pp0_stage3_11001 == 1'b0)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (exitcond_flatten_reg_656 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage4) & (ap_block_pp0_stage4_11001 == 1'b0)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (exitcond_flatten_reg_656 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage5) & (ap_block_pp0_stage5_11001 == 1'b0)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (exitcond_flatten_reg_656 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage6) & (ap_block_pp0_stage6_11001 == 1'b0)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (exitcond_flatten_reg_656 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage7) & (ap_block_pp0_stage7_11001 == 1'b0)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (exitcond_flatten_reg_656 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage8) & (ap_block_pp0_stage8_11001 == 1'b0)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (exitcond_flatten_reg_656 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage9) & (ap_block_pp0_stage9_11001 == 1'b0)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (exitcond_flatten_reg_656 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage10) & (ap_block_pp0_stage10_11001 == 1'b0)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (exitcond_flatten_reg_656 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage11) & (ap_block_pp0_stage11_11001 == 1'b0)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (exitcond_flatten_reg_656 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage12) & (ap_block_pp0_stage12_11001 == 1'b0)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (exitcond_flatten_reg_656 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage13) & (ap_block_pp0_stage13_11001 == 1'b0)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (exitcond_flatten_reg_656 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage14) & (ap_block_pp0_stage14_11001 == 1'b0)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (exitcond_flatten_reg_656 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage15) & (ap_block_pp0_stage15_11001 == 1'b0)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (exitcond_flatten_reg_656 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage16) & (ap_block_pp0_stage16_11001 == 1'b0)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (exitcond_flatten_reg_656 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage17) & (ap_block_pp0_stage17_11001 == 1'b0)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (exitcond_flatten_reg_656 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage18) & (ap_block_pp0_stage18_11001 == 1'b0)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (exitcond_flatten_reg_656 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage19) & (ap_block_pp0_stage19_11001 == 1'b0)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (exitcond_flatten_reg_656 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage20) & (ap_block_pp0_stage20_11001 == 1'b0)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (exitcond_flatten_reg_656 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage21) & (ap_block_pp0_stage21_11001 == 1'b0)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (exitcond_flatten_reg_656 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage22) & (ap_block_pp0_stage22_11001 == 1'b0)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (exitcond_flatten_reg_656 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage23) & (ap_block_pp0_stage23_11001 == 1'b0)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (exitcond_flatten_reg_656 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage24) & (ap_block_pp0_stage24_11001 == 1'b0)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (exitcond_flatten_reg_656 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage25) & (ap_block_pp0_stage25_11001 == 1'b0)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (exitcond_flatten_reg_656 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage26) & (ap_block_pp0_stage26_11001 == 1'b0)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (exitcond_flatten_reg_656 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage27) & (ap_block_pp0_stage27_11001 == 1'b0)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (exitcond_flatten_reg_656 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage28) & (ap_block_pp0_stage28_11001 == 1'b0)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (exitcond_flatten_reg_656 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage29) & (ap_block_pp0_stage29_11001 == 1'b0)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (exitcond_flatten_reg_656 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage30) & (ap_block_pp0_stage30_11001 == 1'b0)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (exitcond_flatten_reg_656 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage31) & (ap_block_pp0_stage31_11001 == 1'b0)) | ((exitcond_flatten_reg_656 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_enable_reg_pp0_iter1) & (ap_block_pp0_stage0_11001 == 1'b0)))) begin
        kernel_i_V_V2_read = 1'b1;
    end else begin
        kernel_i_V_V2_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_enable_reg_pp0_iter1) & (ap_block_pp0_stage0_11001 == 1'b0))) begin
        layer3_kernel_V_0_ce0 = 1'b1;
    end else begin
        layer3_kernel_V_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((exitcond_flatten_reg_656 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_enable_reg_pp0_iter1) & (ap_block_pp0_stage0_11001 == 1'b0))) begin
        layer3_kernel_V_0_we0 = 1'b1;
    end else begin
        layer3_kernel_V_0_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_enable_reg_pp0_iter1) & (ap_block_pp0_stage0_11001 == 1'b0))) begin
        layer3_kernel_V_10_ce0 = 1'b1;
    end else begin
        layer3_kernel_V_10_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((exitcond_flatten_reg_656 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_enable_reg_pp0_iter1) & (ap_block_pp0_stage0_11001 == 1'b0))) begin
        layer3_kernel_V_10_we0 = 1'b1;
    end else begin
        layer3_kernel_V_10_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_enable_reg_pp0_iter1) & (ap_block_pp0_stage0_11001 == 1'b0))) begin
        layer3_kernel_V_11_ce0 = 1'b1;
    end else begin
        layer3_kernel_V_11_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((exitcond_flatten_reg_656 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_enable_reg_pp0_iter1) & (ap_block_pp0_stage0_11001 == 1'b0))) begin
        layer3_kernel_V_11_we0 = 1'b1;
    end else begin
        layer3_kernel_V_11_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_enable_reg_pp0_iter1) & (ap_block_pp0_stage0_11001 == 1'b0))) begin
        layer3_kernel_V_12_ce0 = 1'b1;
    end else begin
        layer3_kernel_V_12_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((exitcond_flatten_reg_656 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_enable_reg_pp0_iter1) & (ap_block_pp0_stage0_11001 == 1'b0))) begin
        layer3_kernel_V_12_we0 = 1'b1;
    end else begin
        layer3_kernel_V_12_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_enable_reg_pp0_iter1) & (ap_block_pp0_stage0_11001 == 1'b0))) begin
        layer3_kernel_V_13_ce0 = 1'b1;
    end else begin
        layer3_kernel_V_13_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((exitcond_flatten_reg_656 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_enable_reg_pp0_iter1) & (ap_block_pp0_stage0_11001 == 1'b0))) begin
        layer3_kernel_V_13_we0 = 1'b1;
    end else begin
        layer3_kernel_V_13_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_enable_reg_pp0_iter1) & (ap_block_pp0_stage0_11001 == 1'b0))) begin
        layer3_kernel_V_14_ce0 = 1'b1;
    end else begin
        layer3_kernel_V_14_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((exitcond_flatten_reg_656 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_enable_reg_pp0_iter1) & (ap_block_pp0_stage0_11001 == 1'b0))) begin
        layer3_kernel_V_14_we0 = 1'b1;
    end else begin
        layer3_kernel_V_14_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_enable_reg_pp0_iter1) & (ap_block_pp0_stage0_11001 == 1'b0))) begin
        layer3_kernel_V_15_ce0 = 1'b1;
    end else begin
        layer3_kernel_V_15_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((exitcond_flatten_reg_656 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_enable_reg_pp0_iter1) & (ap_block_pp0_stage0_11001 == 1'b0))) begin
        layer3_kernel_V_15_we0 = 1'b1;
    end else begin
        layer3_kernel_V_15_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_enable_reg_pp0_iter1) & (ap_block_pp0_stage0_11001 == 1'b0))) begin
        layer3_kernel_V_16_ce0 = 1'b1;
    end else begin
        layer3_kernel_V_16_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((exitcond_flatten_reg_656 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_enable_reg_pp0_iter1) & (ap_block_pp0_stage0_11001 == 1'b0))) begin
        layer3_kernel_V_16_we0 = 1'b1;
    end else begin
        layer3_kernel_V_16_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_enable_reg_pp0_iter1) & (ap_block_pp0_stage0_11001 == 1'b0))) begin
        layer3_kernel_V_17_ce0 = 1'b1;
    end else begin
        layer3_kernel_V_17_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((exitcond_flatten_reg_656 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_enable_reg_pp0_iter1) & (ap_block_pp0_stage0_11001 == 1'b0))) begin
        layer3_kernel_V_17_we0 = 1'b1;
    end else begin
        layer3_kernel_V_17_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_enable_reg_pp0_iter1) & (ap_block_pp0_stage0_11001 == 1'b0))) begin
        layer3_kernel_V_18_ce0 = 1'b1;
    end else begin
        layer3_kernel_V_18_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((exitcond_flatten_reg_656 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_enable_reg_pp0_iter1) & (ap_block_pp0_stage0_11001 == 1'b0))) begin
        layer3_kernel_V_18_we0 = 1'b1;
    end else begin
        layer3_kernel_V_18_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_enable_reg_pp0_iter1) & (ap_block_pp0_stage0_11001 == 1'b0))) begin
        layer3_kernel_V_19_ce0 = 1'b1;
    end else begin
        layer3_kernel_V_19_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((exitcond_flatten_reg_656 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_enable_reg_pp0_iter1) & (ap_block_pp0_stage0_11001 == 1'b0))) begin
        layer3_kernel_V_19_we0 = 1'b1;
    end else begin
        layer3_kernel_V_19_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_enable_reg_pp0_iter1) & (ap_block_pp0_stage0_11001 == 1'b0))) begin
        layer3_kernel_V_1_ce0 = 1'b1;
    end else begin
        layer3_kernel_V_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((exitcond_flatten_reg_656 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_enable_reg_pp0_iter1) & (ap_block_pp0_stage0_11001 == 1'b0))) begin
        layer3_kernel_V_1_we0 = 1'b1;
    end else begin
        layer3_kernel_V_1_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_enable_reg_pp0_iter1) & (ap_block_pp0_stage0_11001 == 1'b0))) begin
        layer3_kernel_V_20_ce0 = 1'b1;
    end else begin
        layer3_kernel_V_20_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((exitcond_flatten_reg_656 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_enable_reg_pp0_iter1) & (ap_block_pp0_stage0_11001 == 1'b0))) begin
        layer3_kernel_V_20_we0 = 1'b1;
    end else begin
        layer3_kernel_V_20_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_enable_reg_pp0_iter1) & (ap_block_pp0_stage0_11001 == 1'b0))) begin
        layer3_kernel_V_21_ce0 = 1'b1;
    end else begin
        layer3_kernel_V_21_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((exitcond_flatten_reg_656 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_enable_reg_pp0_iter1) & (ap_block_pp0_stage0_11001 == 1'b0))) begin
        layer3_kernel_V_21_we0 = 1'b1;
    end else begin
        layer3_kernel_V_21_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_enable_reg_pp0_iter1) & (ap_block_pp0_stage0_11001 == 1'b0))) begin
        layer3_kernel_V_22_ce0 = 1'b1;
    end else begin
        layer3_kernel_V_22_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((exitcond_flatten_reg_656 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_enable_reg_pp0_iter1) & (ap_block_pp0_stage0_11001 == 1'b0))) begin
        layer3_kernel_V_22_we0 = 1'b1;
    end else begin
        layer3_kernel_V_22_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_enable_reg_pp0_iter1) & (ap_block_pp0_stage0_11001 == 1'b0))) begin
        layer3_kernel_V_23_ce0 = 1'b1;
    end else begin
        layer3_kernel_V_23_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((exitcond_flatten_reg_656 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_enable_reg_pp0_iter1) & (ap_block_pp0_stage0_11001 == 1'b0))) begin
        layer3_kernel_V_23_we0 = 1'b1;
    end else begin
        layer3_kernel_V_23_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_enable_reg_pp0_iter1) & (ap_block_pp0_stage0_11001 == 1'b0))) begin
        layer3_kernel_V_24_ce0 = 1'b1;
    end else begin
        layer3_kernel_V_24_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((exitcond_flatten_reg_656 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_enable_reg_pp0_iter1) & (ap_block_pp0_stage0_11001 == 1'b0))) begin
        layer3_kernel_V_24_we0 = 1'b1;
    end else begin
        layer3_kernel_V_24_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_enable_reg_pp0_iter1) & (ap_block_pp0_stage0_11001 == 1'b0))) begin
        layer3_kernel_V_25_ce0 = 1'b1;
    end else begin
        layer3_kernel_V_25_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((exitcond_flatten_reg_656 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_enable_reg_pp0_iter1) & (ap_block_pp0_stage0_11001 == 1'b0))) begin
        layer3_kernel_V_25_we0 = 1'b1;
    end else begin
        layer3_kernel_V_25_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_enable_reg_pp0_iter1) & (ap_block_pp0_stage0_11001 == 1'b0))) begin
        layer3_kernel_V_26_ce0 = 1'b1;
    end else begin
        layer3_kernel_V_26_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((exitcond_flatten_reg_656 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_enable_reg_pp0_iter1) & (ap_block_pp0_stage0_11001 == 1'b0))) begin
        layer3_kernel_V_26_we0 = 1'b1;
    end else begin
        layer3_kernel_V_26_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_enable_reg_pp0_iter1) & (ap_block_pp0_stage0_11001 == 1'b0))) begin
        layer3_kernel_V_27_ce0 = 1'b1;
    end else begin
        layer3_kernel_V_27_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((exitcond_flatten_reg_656 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_enable_reg_pp0_iter1) & (ap_block_pp0_stage0_11001 == 1'b0))) begin
        layer3_kernel_V_27_we0 = 1'b1;
    end else begin
        layer3_kernel_V_27_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_enable_reg_pp0_iter1) & (ap_block_pp0_stage0_11001 == 1'b0))) begin
        layer3_kernel_V_28_ce0 = 1'b1;
    end else begin
        layer3_kernel_V_28_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((exitcond_flatten_reg_656 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_enable_reg_pp0_iter1) & (ap_block_pp0_stage0_11001 == 1'b0))) begin
        layer3_kernel_V_28_we0 = 1'b1;
    end else begin
        layer3_kernel_V_28_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_enable_reg_pp0_iter1) & (ap_block_pp0_stage0_11001 == 1'b0))) begin
        layer3_kernel_V_29_ce0 = 1'b1;
    end else begin
        layer3_kernel_V_29_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((exitcond_flatten_reg_656 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_enable_reg_pp0_iter1) & (ap_block_pp0_stage0_11001 == 1'b0))) begin
        layer3_kernel_V_29_we0 = 1'b1;
    end else begin
        layer3_kernel_V_29_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_enable_reg_pp0_iter1) & (ap_block_pp0_stage0_11001 == 1'b0))) begin
        layer3_kernel_V_2_ce0 = 1'b1;
    end else begin
        layer3_kernel_V_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((exitcond_flatten_reg_656 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_enable_reg_pp0_iter1) & (ap_block_pp0_stage0_11001 == 1'b0))) begin
        layer3_kernel_V_2_we0 = 1'b1;
    end else begin
        layer3_kernel_V_2_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_enable_reg_pp0_iter1) & (ap_block_pp0_stage0_11001 == 1'b0))) begin
        layer3_kernel_V_30_ce0 = 1'b1;
    end else begin
        layer3_kernel_V_30_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((exitcond_flatten_reg_656 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_enable_reg_pp0_iter1) & (ap_block_pp0_stage0_11001 == 1'b0))) begin
        layer3_kernel_V_30_we0 = 1'b1;
    end else begin
        layer3_kernel_V_30_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_enable_reg_pp0_iter1) & (ap_block_pp0_stage0_11001 == 1'b0))) begin
        layer3_kernel_V_31_ce0 = 1'b1;
    end else begin
        layer3_kernel_V_31_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((exitcond_flatten_reg_656 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_enable_reg_pp0_iter1) & (ap_block_pp0_stage0_11001 == 1'b0))) begin
        layer3_kernel_V_31_we0 = 1'b1;
    end else begin
        layer3_kernel_V_31_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_enable_reg_pp0_iter1) & (ap_block_pp0_stage0_11001 == 1'b0))) begin
        layer3_kernel_V_3_ce0 = 1'b1;
    end else begin
        layer3_kernel_V_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((exitcond_flatten_reg_656 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_enable_reg_pp0_iter1) & (ap_block_pp0_stage0_11001 == 1'b0))) begin
        layer3_kernel_V_3_we0 = 1'b1;
    end else begin
        layer3_kernel_V_3_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_enable_reg_pp0_iter1) & (ap_block_pp0_stage0_11001 == 1'b0))) begin
        layer3_kernel_V_4_ce0 = 1'b1;
    end else begin
        layer3_kernel_V_4_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((exitcond_flatten_reg_656 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_enable_reg_pp0_iter1) & (ap_block_pp0_stage0_11001 == 1'b0))) begin
        layer3_kernel_V_4_we0 = 1'b1;
    end else begin
        layer3_kernel_V_4_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_enable_reg_pp0_iter1) & (ap_block_pp0_stage0_11001 == 1'b0))) begin
        layer3_kernel_V_5_ce0 = 1'b1;
    end else begin
        layer3_kernel_V_5_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((exitcond_flatten_reg_656 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_enable_reg_pp0_iter1) & (ap_block_pp0_stage0_11001 == 1'b0))) begin
        layer3_kernel_V_5_we0 = 1'b1;
    end else begin
        layer3_kernel_V_5_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_enable_reg_pp0_iter1) & (ap_block_pp0_stage0_11001 == 1'b0))) begin
        layer3_kernel_V_6_ce0 = 1'b1;
    end else begin
        layer3_kernel_V_6_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((exitcond_flatten_reg_656 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_enable_reg_pp0_iter1) & (ap_block_pp0_stage0_11001 == 1'b0))) begin
        layer3_kernel_V_6_we0 = 1'b1;
    end else begin
        layer3_kernel_V_6_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_enable_reg_pp0_iter1) & (ap_block_pp0_stage0_11001 == 1'b0))) begin
        layer3_kernel_V_7_ce0 = 1'b1;
    end else begin
        layer3_kernel_V_7_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((exitcond_flatten_reg_656 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_enable_reg_pp0_iter1) & (ap_block_pp0_stage0_11001 == 1'b0))) begin
        layer3_kernel_V_7_we0 = 1'b1;
    end else begin
        layer3_kernel_V_7_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_enable_reg_pp0_iter1) & (ap_block_pp0_stage0_11001 == 1'b0))) begin
        layer3_kernel_V_8_ce0 = 1'b1;
    end else begin
        layer3_kernel_V_8_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((exitcond_flatten_reg_656 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_enable_reg_pp0_iter1) & (ap_block_pp0_stage0_11001 == 1'b0))) begin
        layer3_kernel_V_8_we0 = 1'b1;
    end else begin
        layer3_kernel_V_8_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_enable_reg_pp0_iter1) & (ap_block_pp0_stage0_11001 == 1'b0))) begin
        layer3_kernel_V_9_ce0 = 1'b1;
    end else begin
        layer3_kernel_V_9_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((exitcond_flatten_reg_656 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_enable_reg_pp0_iter1) & (ap_block_pp0_stage0_11001 == 1'b0))) begin
        layer3_kernel_V_9_we0 = 1'b1;
    end else begin
        layer3_kernel_V_9_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((exitcond_flatten_reg_656 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_enable_reg_pp0_iter1) & (ap_block_pp0_stage0 == 1'b0))) begin
        p_02_i_phi_fu_520_p4 = tmp_i_mid2_v_reg_671;
    end else begin
        p_02_i_phi_fu_520_p4 = p_02_i_reg_516;
    end
end

always @ (*) begin
    if (((exitcond_flatten_reg_656 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_enable_reg_pp0_iter1) & (ap_block_pp0_stage0 == 1'b0))) begin
        p_i_phi_fu_531_p4 = kw_V_reg_833;
    end else begin
        p_i_phi_fu_531_p4 = p_i_reg_527;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((1'b1 == ap_CS_fsm_state1) & ~((1'b0 == ap_start) | (ap_done_reg == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_pp0_stage0 : begin
            if (((ap_block_pp0_stage0_subdone == 1'b0) & ~((1'b1 == ap_enable_reg_pp0_iter0) & (ap_block_pp0_stage0_subdone == 1'b0) & (exitcond_flatten_fu_538_p2 == 1'd1)))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end else if (((1'b1 == ap_enable_reg_pp0_iter0) & (ap_block_pp0_stage0_subdone == 1'b0) & (exitcond_flatten_fu_538_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state35;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage1 : begin
            if ((ap_block_pp0_stage1_subdone == 1'b0)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end
        end
        ap_ST_fsm_pp0_stage2 : begin
            if ((ap_block_pp0_stage2_subdone == 1'b0)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end
        end
        ap_ST_fsm_pp0_stage3 : begin
            if ((ap_block_pp0_stage3_subdone == 1'b0)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end
        end
        ap_ST_fsm_pp0_stage4 : begin
            if ((ap_block_pp0_stage4_subdone == 1'b0)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage4;
            end
        end
        ap_ST_fsm_pp0_stage5 : begin
            if ((ap_block_pp0_stage5_subdone == 1'b0)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage6;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage5;
            end
        end
        ap_ST_fsm_pp0_stage6 : begin
            if ((ap_block_pp0_stage6_subdone == 1'b0)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage7;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage6;
            end
        end
        ap_ST_fsm_pp0_stage7 : begin
            if ((ap_block_pp0_stage7_subdone == 1'b0)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage8;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage7;
            end
        end
        ap_ST_fsm_pp0_stage8 : begin
            if ((ap_block_pp0_stage8_subdone == 1'b0)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage9;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage8;
            end
        end
        ap_ST_fsm_pp0_stage9 : begin
            if ((ap_block_pp0_stage9_subdone == 1'b0)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage10;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage9;
            end
        end
        ap_ST_fsm_pp0_stage10 : begin
            if ((ap_block_pp0_stage10_subdone == 1'b0)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage11;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage10;
            end
        end
        ap_ST_fsm_pp0_stage11 : begin
            if ((ap_block_pp0_stage11_subdone == 1'b0)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage12;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage11;
            end
        end
        ap_ST_fsm_pp0_stage12 : begin
            if ((ap_block_pp0_stage12_subdone == 1'b0)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage13;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage12;
            end
        end
        ap_ST_fsm_pp0_stage13 : begin
            if ((ap_block_pp0_stage13_subdone == 1'b0)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage14;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage13;
            end
        end
        ap_ST_fsm_pp0_stage14 : begin
            if ((ap_block_pp0_stage14_subdone == 1'b0)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage15;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage14;
            end
        end
        ap_ST_fsm_pp0_stage15 : begin
            if ((ap_block_pp0_stage15_subdone == 1'b0)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage16;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage15;
            end
        end
        ap_ST_fsm_pp0_stage16 : begin
            if ((ap_block_pp0_stage16_subdone == 1'b0)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage17;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage16;
            end
        end
        ap_ST_fsm_pp0_stage17 : begin
            if ((ap_block_pp0_stage17_subdone == 1'b0)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage18;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage17;
            end
        end
        ap_ST_fsm_pp0_stage18 : begin
            if ((ap_block_pp0_stage18_subdone == 1'b0)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage19;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage18;
            end
        end
        ap_ST_fsm_pp0_stage19 : begin
            if ((ap_block_pp0_stage19_subdone == 1'b0)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage20;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage19;
            end
        end
        ap_ST_fsm_pp0_stage20 : begin
            if ((ap_block_pp0_stage20_subdone == 1'b0)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage21;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage20;
            end
        end
        ap_ST_fsm_pp0_stage21 : begin
            if ((ap_block_pp0_stage21_subdone == 1'b0)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage22;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage21;
            end
        end
        ap_ST_fsm_pp0_stage22 : begin
            if ((ap_block_pp0_stage22_subdone == 1'b0)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage23;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage22;
            end
        end
        ap_ST_fsm_pp0_stage23 : begin
            if ((ap_block_pp0_stage23_subdone == 1'b0)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage24;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage23;
            end
        end
        ap_ST_fsm_pp0_stage24 : begin
            if ((ap_block_pp0_stage24_subdone == 1'b0)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage25;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage24;
            end
        end
        ap_ST_fsm_pp0_stage25 : begin
            if ((ap_block_pp0_stage25_subdone == 1'b0)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage26;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage25;
            end
        end
        ap_ST_fsm_pp0_stage26 : begin
            if ((ap_block_pp0_stage26_subdone == 1'b0)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage27;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage26;
            end
        end
        ap_ST_fsm_pp0_stage27 : begin
            if ((ap_block_pp0_stage27_subdone == 1'b0)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage28;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage27;
            end
        end
        ap_ST_fsm_pp0_stage28 : begin
            if ((ap_block_pp0_stage28_subdone == 1'b0)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage29;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage28;
            end
        end
        ap_ST_fsm_pp0_stage29 : begin
            if ((ap_block_pp0_stage29_subdone == 1'b0)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage30;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage29;
            end
        end
        ap_ST_fsm_pp0_stage30 : begin
            if ((ap_block_pp0_stage30_subdone == 1'b0)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage31;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage30;
            end
        end
        ap_ST_fsm_pp0_stage31 : begin
            if ((ap_block_pp0_stage31_subdone == 1'b0)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage31;
            end
        end
        ap_ST_fsm_state35 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_pp0_stage1 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_pp0_stage10 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_pp0_stage11 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_pp0_stage12 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_pp0_stage13 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_pp0_stage14 = ap_CS_fsm[32'd15];

assign ap_CS_fsm_pp0_stage15 = ap_CS_fsm[32'd16];

assign ap_CS_fsm_pp0_stage16 = ap_CS_fsm[32'd17];

assign ap_CS_fsm_pp0_stage17 = ap_CS_fsm[32'd18];

assign ap_CS_fsm_pp0_stage18 = ap_CS_fsm[32'd19];

assign ap_CS_fsm_pp0_stage19 = ap_CS_fsm[32'd20];

assign ap_CS_fsm_pp0_stage2 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_pp0_stage20 = ap_CS_fsm[32'd21];

assign ap_CS_fsm_pp0_stage21 = ap_CS_fsm[32'd22];

assign ap_CS_fsm_pp0_stage22 = ap_CS_fsm[32'd23];

assign ap_CS_fsm_pp0_stage23 = ap_CS_fsm[32'd24];

assign ap_CS_fsm_pp0_stage24 = ap_CS_fsm[32'd25];

assign ap_CS_fsm_pp0_stage25 = ap_CS_fsm[32'd26];

assign ap_CS_fsm_pp0_stage26 = ap_CS_fsm[32'd27];

assign ap_CS_fsm_pp0_stage27 = ap_CS_fsm[32'd28];

assign ap_CS_fsm_pp0_stage28 = ap_CS_fsm[32'd29];

assign ap_CS_fsm_pp0_stage29 = ap_CS_fsm[32'd30];

assign ap_CS_fsm_pp0_stage3 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_pp0_stage30 = ap_CS_fsm[32'd31];

assign ap_CS_fsm_pp0_stage31 = ap_CS_fsm[32'd32];

assign ap_CS_fsm_pp0_stage4 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_pp0_stage5 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_pp0_stage6 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_pp0_stage7 = ap_CS_fsm[32'd8];

assign ap_CS_fsm_pp0_stage8 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_pp0_stage9 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state35 = ap_CS_fsm[32'd33];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_11001 = ((exitcond_flatten_reg_656 == 1'd0) & (1'b1 == ap_enable_reg_pp0_iter1) & (1'b0 == kernel_i_V_V2_empty_n));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = ((exitcond_flatten_reg_656 == 1'd0) & (1'b1 == ap_enable_reg_pp0_iter1) & (1'b0 == kernel_i_V_V2_empty_n));
end

assign ap_block_pp0_stage1 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage10 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage10_11001 = ((1'b1 == ap_enable_reg_pp0_iter0) & (exitcond_flatten_reg_656 == 1'd0) & (1'b0 == kernel_i_V_V2_empty_n));
end

always @ (*) begin
    ap_block_pp0_stage10_subdone = ((1'b1 == ap_enable_reg_pp0_iter0) & (exitcond_flatten_reg_656 == 1'd0) & (1'b0 == kernel_i_V_V2_empty_n));
end

assign ap_block_pp0_stage11 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage11_11001 = ((1'b1 == ap_enable_reg_pp0_iter0) & (exitcond_flatten_reg_656 == 1'd0) & (1'b0 == kernel_i_V_V2_empty_n));
end

always @ (*) begin
    ap_block_pp0_stage11_subdone = ((1'b1 == ap_enable_reg_pp0_iter0) & (exitcond_flatten_reg_656 == 1'd0) & (1'b0 == kernel_i_V_V2_empty_n));
end

assign ap_block_pp0_stage12 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage12_11001 = ((1'b1 == ap_enable_reg_pp0_iter0) & (exitcond_flatten_reg_656 == 1'd0) & (1'b0 == kernel_i_V_V2_empty_n));
end

always @ (*) begin
    ap_block_pp0_stage12_subdone = ((1'b1 == ap_enable_reg_pp0_iter0) & (exitcond_flatten_reg_656 == 1'd0) & (1'b0 == kernel_i_V_V2_empty_n));
end

assign ap_block_pp0_stage13 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage13_11001 = ((1'b1 == ap_enable_reg_pp0_iter0) & (exitcond_flatten_reg_656 == 1'd0) & (1'b0 == kernel_i_V_V2_empty_n));
end

always @ (*) begin
    ap_block_pp0_stage13_subdone = ((1'b1 == ap_enable_reg_pp0_iter0) & (exitcond_flatten_reg_656 == 1'd0) & (1'b0 == kernel_i_V_V2_empty_n));
end

assign ap_block_pp0_stage14 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage14_11001 = ((1'b1 == ap_enable_reg_pp0_iter0) & (exitcond_flatten_reg_656 == 1'd0) & (1'b0 == kernel_i_V_V2_empty_n));
end

always @ (*) begin
    ap_block_pp0_stage14_subdone = ((1'b1 == ap_enable_reg_pp0_iter0) & (exitcond_flatten_reg_656 == 1'd0) & (1'b0 == kernel_i_V_V2_empty_n));
end

assign ap_block_pp0_stage15 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage15_11001 = ((1'b1 == ap_enable_reg_pp0_iter0) & (exitcond_flatten_reg_656 == 1'd0) & (1'b0 == kernel_i_V_V2_empty_n));
end

always @ (*) begin
    ap_block_pp0_stage15_subdone = ((1'b1 == ap_enable_reg_pp0_iter0) & (exitcond_flatten_reg_656 == 1'd0) & (1'b0 == kernel_i_V_V2_empty_n));
end

assign ap_block_pp0_stage16 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage16_11001 = ((1'b1 == ap_enable_reg_pp0_iter0) & (exitcond_flatten_reg_656 == 1'd0) & (1'b0 == kernel_i_V_V2_empty_n));
end

always @ (*) begin
    ap_block_pp0_stage16_subdone = ((1'b1 == ap_enable_reg_pp0_iter0) & (exitcond_flatten_reg_656 == 1'd0) & (1'b0 == kernel_i_V_V2_empty_n));
end

assign ap_block_pp0_stage17 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage17_11001 = ((1'b1 == ap_enable_reg_pp0_iter0) & (exitcond_flatten_reg_656 == 1'd0) & (1'b0 == kernel_i_V_V2_empty_n));
end

always @ (*) begin
    ap_block_pp0_stage17_subdone = ((1'b1 == ap_enable_reg_pp0_iter0) & (exitcond_flatten_reg_656 == 1'd0) & (1'b0 == kernel_i_V_V2_empty_n));
end

assign ap_block_pp0_stage18 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage18_11001 = ((1'b1 == ap_enable_reg_pp0_iter0) & (exitcond_flatten_reg_656 == 1'd0) & (1'b0 == kernel_i_V_V2_empty_n));
end

always @ (*) begin
    ap_block_pp0_stage18_subdone = ((1'b1 == ap_enable_reg_pp0_iter0) & (exitcond_flatten_reg_656 == 1'd0) & (1'b0 == kernel_i_V_V2_empty_n));
end

assign ap_block_pp0_stage19 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage19_11001 = ((1'b1 == ap_enable_reg_pp0_iter0) & (exitcond_flatten_reg_656 == 1'd0) & (1'b0 == kernel_i_V_V2_empty_n));
end

always @ (*) begin
    ap_block_pp0_stage19_subdone = ((1'b1 == ap_enable_reg_pp0_iter0) & (exitcond_flatten_reg_656 == 1'd0) & (1'b0 == kernel_i_V_V2_empty_n));
end

always @ (*) begin
    ap_block_pp0_stage1_11001 = ((1'b1 == ap_enable_reg_pp0_iter0) & (exitcond_flatten_reg_656 == 1'd0) & (1'b0 == kernel_i_V_V2_empty_n));
end

always @ (*) begin
    ap_block_pp0_stage1_subdone = ((1'b1 == ap_enable_reg_pp0_iter0) & (exitcond_flatten_reg_656 == 1'd0) & (1'b0 == kernel_i_V_V2_empty_n));
end

assign ap_block_pp0_stage2 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage20 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage20_11001 = ((1'b1 == ap_enable_reg_pp0_iter0) & (exitcond_flatten_reg_656 == 1'd0) & (1'b0 == kernel_i_V_V2_empty_n));
end

always @ (*) begin
    ap_block_pp0_stage20_subdone = ((1'b1 == ap_enable_reg_pp0_iter0) & (exitcond_flatten_reg_656 == 1'd0) & (1'b0 == kernel_i_V_V2_empty_n));
end

assign ap_block_pp0_stage21 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage21_11001 = ((1'b1 == ap_enable_reg_pp0_iter0) & (exitcond_flatten_reg_656 == 1'd0) & (1'b0 == kernel_i_V_V2_empty_n));
end

always @ (*) begin
    ap_block_pp0_stage21_subdone = ((1'b1 == ap_enable_reg_pp0_iter0) & (exitcond_flatten_reg_656 == 1'd0) & (1'b0 == kernel_i_V_V2_empty_n));
end

assign ap_block_pp0_stage22 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage22_11001 = ((1'b1 == ap_enable_reg_pp0_iter0) & (exitcond_flatten_reg_656 == 1'd0) & (1'b0 == kernel_i_V_V2_empty_n));
end

always @ (*) begin
    ap_block_pp0_stage22_subdone = ((1'b1 == ap_enable_reg_pp0_iter0) & (exitcond_flatten_reg_656 == 1'd0) & (1'b0 == kernel_i_V_V2_empty_n));
end

assign ap_block_pp0_stage23 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage23_11001 = ((1'b1 == ap_enable_reg_pp0_iter0) & (exitcond_flatten_reg_656 == 1'd0) & (1'b0 == kernel_i_V_V2_empty_n));
end

always @ (*) begin
    ap_block_pp0_stage23_subdone = ((1'b1 == ap_enable_reg_pp0_iter0) & (exitcond_flatten_reg_656 == 1'd0) & (1'b0 == kernel_i_V_V2_empty_n));
end

assign ap_block_pp0_stage24 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage24_11001 = ((1'b1 == ap_enable_reg_pp0_iter0) & (exitcond_flatten_reg_656 == 1'd0) & (1'b0 == kernel_i_V_V2_empty_n));
end

always @ (*) begin
    ap_block_pp0_stage24_subdone = ((1'b1 == ap_enable_reg_pp0_iter0) & (exitcond_flatten_reg_656 == 1'd0) & (1'b0 == kernel_i_V_V2_empty_n));
end

assign ap_block_pp0_stage25 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage25_11001 = ((1'b1 == ap_enable_reg_pp0_iter0) & (exitcond_flatten_reg_656 == 1'd0) & (1'b0 == kernel_i_V_V2_empty_n));
end

always @ (*) begin
    ap_block_pp0_stage25_subdone = ((1'b1 == ap_enable_reg_pp0_iter0) & (exitcond_flatten_reg_656 == 1'd0) & (1'b0 == kernel_i_V_V2_empty_n));
end

assign ap_block_pp0_stage26 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage26_11001 = ((1'b1 == ap_enable_reg_pp0_iter0) & (exitcond_flatten_reg_656 == 1'd0) & (1'b0 == kernel_i_V_V2_empty_n));
end

always @ (*) begin
    ap_block_pp0_stage26_subdone = ((1'b1 == ap_enable_reg_pp0_iter0) & (exitcond_flatten_reg_656 == 1'd0) & (1'b0 == kernel_i_V_V2_empty_n));
end

assign ap_block_pp0_stage27 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage27_11001 = ((1'b1 == ap_enable_reg_pp0_iter0) & (exitcond_flatten_reg_656 == 1'd0) & (1'b0 == kernel_i_V_V2_empty_n));
end

always @ (*) begin
    ap_block_pp0_stage27_subdone = ((1'b1 == ap_enable_reg_pp0_iter0) & (exitcond_flatten_reg_656 == 1'd0) & (1'b0 == kernel_i_V_V2_empty_n));
end

assign ap_block_pp0_stage28 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage28_11001 = ((1'b1 == ap_enable_reg_pp0_iter0) & (exitcond_flatten_reg_656 == 1'd0) & (1'b0 == kernel_i_V_V2_empty_n));
end

always @ (*) begin
    ap_block_pp0_stage28_subdone = ((1'b1 == ap_enable_reg_pp0_iter0) & (exitcond_flatten_reg_656 == 1'd0) & (1'b0 == kernel_i_V_V2_empty_n));
end

assign ap_block_pp0_stage29 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage29_11001 = ((1'b1 == ap_enable_reg_pp0_iter0) & (exitcond_flatten_reg_656 == 1'd0) & (1'b0 == kernel_i_V_V2_empty_n));
end

always @ (*) begin
    ap_block_pp0_stage29_subdone = ((1'b1 == ap_enable_reg_pp0_iter0) & (exitcond_flatten_reg_656 == 1'd0) & (1'b0 == kernel_i_V_V2_empty_n));
end

always @ (*) begin
    ap_block_pp0_stage2_11001 = ((1'b1 == ap_enable_reg_pp0_iter0) & (exitcond_flatten_reg_656 == 1'd0) & (1'b0 == kernel_i_V_V2_empty_n));
end

always @ (*) begin
    ap_block_pp0_stage2_subdone = ((1'b1 == ap_enable_reg_pp0_iter0) & (exitcond_flatten_reg_656 == 1'd0) & (1'b0 == kernel_i_V_V2_empty_n));
end

assign ap_block_pp0_stage3 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage30 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage30_11001 = ((1'b1 == ap_enable_reg_pp0_iter0) & (exitcond_flatten_reg_656 == 1'd0) & (1'b0 == kernel_i_V_V2_empty_n));
end

always @ (*) begin
    ap_block_pp0_stage30_subdone = ((1'b1 == ap_enable_reg_pp0_iter0) & (exitcond_flatten_reg_656 == 1'd0) & (1'b0 == kernel_i_V_V2_empty_n));
end

assign ap_block_pp0_stage31 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage31_11001 = ((1'b1 == ap_enable_reg_pp0_iter0) & (exitcond_flatten_reg_656 == 1'd0) & (1'b0 == kernel_i_V_V2_empty_n));
end

always @ (*) begin
    ap_block_pp0_stage31_subdone = ((1'b1 == ap_enable_reg_pp0_iter0) & (exitcond_flatten_reg_656 == 1'd0) & (1'b0 == kernel_i_V_V2_empty_n));
end

always @ (*) begin
    ap_block_pp0_stage3_11001 = ((1'b1 == ap_enable_reg_pp0_iter0) & (exitcond_flatten_reg_656 == 1'd0) & (1'b0 == kernel_i_V_V2_empty_n));
end

always @ (*) begin
    ap_block_pp0_stage3_subdone = ((1'b1 == ap_enable_reg_pp0_iter0) & (exitcond_flatten_reg_656 == 1'd0) & (1'b0 == kernel_i_V_V2_empty_n));
end

assign ap_block_pp0_stage4 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage4_11001 = ((1'b1 == ap_enable_reg_pp0_iter0) & (exitcond_flatten_reg_656 == 1'd0) & (1'b0 == kernel_i_V_V2_empty_n));
end

always @ (*) begin
    ap_block_pp0_stage4_subdone = ((1'b1 == ap_enable_reg_pp0_iter0) & (exitcond_flatten_reg_656 == 1'd0) & (1'b0 == kernel_i_V_V2_empty_n));
end

assign ap_block_pp0_stage5 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage5_11001 = ((1'b1 == ap_enable_reg_pp0_iter0) & (exitcond_flatten_reg_656 == 1'd0) & (1'b0 == kernel_i_V_V2_empty_n));
end

always @ (*) begin
    ap_block_pp0_stage5_subdone = ((1'b1 == ap_enable_reg_pp0_iter0) & (exitcond_flatten_reg_656 == 1'd0) & (1'b0 == kernel_i_V_V2_empty_n));
end

assign ap_block_pp0_stage6 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage6_11001 = ((1'b1 == ap_enable_reg_pp0_iter0) & (exitcond_flatten_reg_656 == 1'd0) & (1'b0 == kernel_i_V_V2_empty_n));
end

always @ (*) begin
    ap_block_pp0_stage6_subdone = ((1'b1 == ap_enable_reg_pp0_iter0) & (exitcond_flatten_reg_656 == 1'd0) & (1'b0 == kernel_i_V_V2_empty_n));
end

assign ap_block_pp0_stage7 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage7_11001 = ((1'b1 == ap_enable_reg_pp0_iter0) & (exitcond_flatten_reg_656 == 1'd0) & (1'b0 == kernel_i_V_V2_empty_n));
end

always @ (*) begin
    ap_block_pp0_stage7_subdone = ((1'b1 == ap_enable_reg_pp0_iter0) & (exitcond_flatten_reg_656 == 1'd0) & (1'b0 == kernel_i_V_V2_empty_n));
end

assign ap_block_pp0_stage8 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage8_11001 = ((1'b1 == ap_enable_reg_pp0_iter0) & (exitcond_flatten_reg_656 == 1'd0) & (1'b0 == kernel_i_V_V2_empty_n));
end

always @ (*) begin
    ap_block_pp0_stage8_subdone = ((1'b1 == ap_enable_reg_pp0_iter0) & (exitcond_flatten_reg_656 == 1'd0) & (1'b0 == kernel_i_V_V2_empty_n));
end

assign ap_block_pp0_stage9 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage9_11001 = ((1'b1 == ap_enable_reg_pp0_iter0) & (exitcond_flatten_reg_656 == 1'd0) & (1'b0 == kernel_i_V_V2_empty_n));
end

always @ (*) begin
    ap_block_pp0_stage9_subdone = ((1'b1 == ap_enable_reg_pp0_iter0) & (exitcond_flatten_reg_656 == 1'd0) & (1'b0 == kernel_i_V_V2_empty_n));
end

always @ (*) begin
    ap_block_state1 = ((1'b0 == ap_start) | (ap_done_reg == 1'b1));
end

always @ (*) begin
    ap_block_state10_pp0_stage8_iter0 = ((exitcond_flatten_reg_656 == 1'd0) & (1'b0 == kernel_i_V_V2_empty_n));
end

always @ (*) begin
    ap_block_state11_pp0_stage9_iter0 = ((exitcond_flatten_reg_656 == 1'd0) & (1'b0 == kernel_i_V_V2_empty_n));
end

always @ (*) begin
    ap_block_state12_pp0_stage10_iter0 = ((exitcond_flatten_reg_656 == 1'd0) & (1'b0 == kernel_i_V_V2_empty_n));
end

always @ (*) begin
    ap_block_state13_pp0_stage11_iter0 = ((exitcond_flatten_reg_656 == 1'd0) & (1'b0 == kernel_i_V_V2_empty_n));
end

always @ (*) begin
    ap_block_state14_pp0_stage12_iter0 = ((exitcond_flatten_reg_656 == 1'd0) & (1'b0 == kernel_i_V_V2_empty_n));
end

always @ (*) begin
    ap_block_state15_pp0_stage13_iter0 = ((exitcond_flatten_reg_656 == 1'd0) & (1'b0 == kernel_i_V_V2_empty_n));
end

always @ (*) begin
    ap_block_state16_pp0_stage14_iter0 = ((exitcond_flatten_reg_656 == 1'd0) & (1'b0 == kernel_i_V_V2_empty_n));
end

always @ (*) begin
    ap_block_state17_pp0_stage15_iter0 = ((exitcond_flatten_reg_656 == 1'd0) & (1'b0 == kernel_i_V_V2_empty_n));
end

always @ (*) begin
    ap_block_state18_pp0_stage16_iter0 = ((exitcond_flatten_reg_656 == 1'd0) & (1'b0 == kernel_i_V_V2_empty_n));
end

always @ (*) begin
    ap_block_state19_pp0_stage17_iter0 = ((exitcond_flatten_reg_656 == 1'd0) & (1'b0 == kernel_i_V_V2_empty_n));
end

always @ (*) begin
    ap_block_state20_pp0_stage18_iter0 = ((exitcond_flatten_reg_656 == 1'd0) & (1'b0 == kernel_i_V_V2_empty_n));
end

always @ (*) begin
    ap_block_state21_pp0_stage19_iter0 = ((exitcond_flatten_reg_656 == 1'd0) & (1'b0 == kernel_i_V_V2_empty_n));
end

always @ (*) begin
    ap_block_state22_pp0_stage20_iter0 = ((exitcond_flatten_reg_656 == 1'd0) & (1'b0 == kernel_i_V_V2_empty_n));
end

always @ (*) begin
    ap_block_state23_pp0_stage21_iter0 = ((exitcond_flatten_reg_656 == 1'd0) & (1'b0 == kernel_i_V_V2_empty_n));
end

always @ (*) begin
    ap_block_state24_pp0_stage22_iter0 = ((exitcond_flatten_reg_656 == 1'd0) & (1'b0 == kernel_i_V_V2_empty_n));
end

always @ (*) begin
    ap_block_state25_pp0_stage23_iter0 = ((exitcond_flatten_reg_656 == 1'd0) & (1'b0 == kernel_i_V_V2_empty_n));
end

always @ (*) begin
    ap_block_state26_pp0_stage24_iter0 = ((exitcond_flatten_reg_656 == 1'd0) & (1'b0 == kernel_i_V_V2_empty_n));
end

always @ (*) begin
    ap_block_state27_pp0_stage25_iter0 = ((exitcond_flatten_reg_656 == 1'd0) & (1'b0 == kernel_i_V_V2_empty_n));
end

always @ (*) begin
    ap_block_state28_pp0_stage26_iter0 = ((exitcond_flatten_reg_656 == 1'd0) & (1'b0 == kernel_i_V_V2_empty_n));
end

always @ (*) begin
    ap_block_state29_pp0_stage27_iter0 = ((exitcond_flatten_reg_656 == 1'd0) & (1'b0 == kernel_i_V_V2_empty_n));
end

assign ap_block_state2_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state30_pp0_stage28_iter0 = ((exitcond_flatten_reg_656 == 1'd0) & (1'b0 == kernel_i_V_V2_empty_n));
end

always @ (*) begin
    ap_block_state31_pp0_stage29_iter0 = ((exitcond_flatten_reg_656 == 1'd0) & (1'b0 == kernel_i_V_V2_empty_n));
end

always @ (*) begin
    ap_block_state32_pp0_stage30_iter0 = ((exitcond_flatten_reg_656 == 1'd0) & (1'b0 == kernel_i_V_V2_empty_n));
end

always @ (*) begin
    ap_block_state33_pp0_stage31_iter0 = ((exitcond_flatten_reg_656 == 1'd0) & (1'b0 == kernel_i_V_V2_empty_n));
end

always @ (*) begin
    ap_block_state34_pp0_stage0_iter1 = ((exitcond_flatten_reg_656 == 1'd0) & (1'b0 == kernel_i_V_V2_empty_n));
end

always @ (*) begin
    ap_block_state3_pp0_stage1_iter0 = ((exitcond_flatten_reg_656 == 1'd0) & (1'b0 == kernel_i_V_V2_empty_n));
end

always @ (*) begin
    ap_block_state4_pp0_stage2_iter0 = ((exitcond_flatten_reg_656 == 1'd0) & (1'b0 == kernel_i_V_V2_empty_n));
end

always @ (*) begin
    ap_block_state5_pp0_stage3_iter0 = ((exitcond_flatten_reg_656 == 1'd0) & (1'b0 == kernel_i_V_V2_empty_n));
end

always @ (*) begin
    ap_block_state6_pp0_stage4_iter0 = ((exitcond_flatten_reg_656 == 1'd0) & (1'b0 == kernel_i_V_V2_empty_n));
end

always @ (*) begin
    ap_block_state7_pp0_stage5_iter0 = ((exitcond_flatten_reg_656 == 1'd0) & (1'b0 == kernel_i_V_V2_empty_n));
end

always @ (*) begin
    ap_block_state8_pp0_stage6_iter0 = ((exitcond_flatten_reg_656 == 1'd0) & (1'b0 == kernel_i_V_V2_empty_n));
end

always @ (*) begin
    ap_block_state9_pp0_stage7_iter0 = ((exitcond_flatten_reg_656 == 1'd0) & (1'b0 == kernel_i_V_V2_empty_n));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign exitcond19_i_fu_556_p2 = ((p_i_phi_fu_531_p4 == 3'd6) ? 1'b1 : 1'b0);

assign exitcond_flatten_fu_538_p2 = ((indvar_flatten_phi_fu_509_p4 == 6'd36) ? 1'b1 : 1'b0);

assign indvar_flatten_next_fu_544_p2 = (indvar_flatten_phi_fu_509_p4 + 6'd1);

assign kh_V_fu_550_p2 = (p_02_i_phi_fu_520_p4 + 3'd1);

assign kw_V_fu_578_p2 = (p_i_mid2_reg_665 + 3'd1);

assign layer3_kernel_V_0_address0 = tmp_295_cast_fu_620_p1;

assign layer3_kernel_V_0_d0 = tmp_V_reg_678;

assign layer3_kernel_V_10_address0 = tmp_295_cast_fu_620_p1;

assign layer3_kernel_V_10_d0 = tmp_V_66_reg_728;

assign layer3_kernel_V_11_address0 = tmp_295_cast_fu_620_p1;

assign layer3_kernel_V_11_d0 = tmp_V_67_reg_733;

assign layer3_kernel_V_12_address0 = tmp_295_cast_fu_620_p1;

assign layer3_kernel_V_12_d0 = tmp_V_68_reg_738;

assign layer3_kernel_V_13_address0 = tmp_295_cast_fu_620_p1;

assign layer3_kernel_V_13_d0 = tmp_V_69_reg_743;

assign layer3_kernel_V_14_address0 = tmp_295_cast_fu_620_p1;

assign layer3_kernel_V_14_d0 = tmp_V_70_reg_748;

assign layer3_kernel_V_15_address0 = tmp_295_cast_fu_620_p1;

assign layer3_kernel_V_15_d0 = tmp_V_71_reg_753;

assign layer3_kernel_V_16_address0 = tmp_295_cast_fu_620_p1;

assign layer3_kernel_V_16_d0 = tmp_V_72_reg_758;

assign layer3_kernel_V_17_address0 = tmp_295_cast_fu_620_p1;

assign layer3_kernel_V_17_d0 = tmp_V_73_reg_763;

assign layer3_kernel_V_18_address0 = tmp_295_cast_fu_620_p1;

assign layer3_kernel_V_18_d0 = tmp_V_74_reg_768;

assign layer3_kernel_V_19_address0 = tmp_295_cast_fu_620_p1;

assign layer3_kernel_V_19_d0 = tmp_V_75_reg_773;

assign layer3_kernel_V_1_address0 = tmp_295_cast_fu_620_p1;

assign layer3_kernel_V_1_d0 = tmp_V_57_reg_683;

assign layer3_kernel_V_20_address0 = tmp_295_cast_fu_620_p1;

assign layer3_kernel_V_20_d0 = tmp_V_76_reg_778;

assign layer3_kernel_V_21_address0 = tmp_295_cast_fu_620_p1;

assign layer3_kernel_V_21_d0 = tmp_V_77_reg_783;

assign layer3_kernel_V_22_address0 = tmp_295_cast_fu_620_p1;

assign layer3_kernel_V_22_d0 = tmp_V_78_reg_788;

assign layer3_kernel_V_23_address0 = tmp_295_cast_fu_620_p1;

assign layer3_kernel_V_23_d0 = tmp_V_79_reg_793;

assign layer3_kernel_V_24_address0 = tmp_295_cast_fu_620_p1;

assign layer3_kernel_V_24_d0 = tmp_V_80_reg_798;

assign layer3_kernel_V_25_address0 = tmp_295_cast_fu_620_p1;

assign layer3_kernel_V_25_d0 = tmp_V_81_reg_803;

assign layer3_kernel_V_26_address0 = tmp_295_cast_fu_620_p1;

assign layer3_kernel_V_26_d0 = tmp_V_82_reg_808;

assign layer3_kernel_V_27_address0 = tmp_295_cast_fu_620_p1;

assign layer3_kernel_V_27_d0 = tmp_V_83_reg_813;

assign layer3_kernel_V_28_address0 = tmp_295_cast_fu_620_p1;

assign layer3_kernel_V_28_d0 = tmp_V_84_reg_818;

assign layer3_kernel_V_29_address0 = tmp_295_cast_fu_620_p1;

assign layer3_kernel_V_29_d0 = tmp_V_85_reg_823;

assign layer3_kernel_V_2_address0 = tmp_295_cast_fu_620_p1;

assign layer3_kernel_V_2_d0 = tmp_V_58_reg_688;

assign layer3_kernel_V_30_address0 = tmp_295_cast_fu_620_p1;

assign layer3_kernel_V_30_d0 = tmp_V_86_reg_828;

assign layer3_kernel_V_31_address0 = tmp_295_cast_fu_620_p1;

assign layer3_kernel_V_31_d0 = kernel_i_V_V2_dout;

assign layer3_kernel_V_3_address0 = tmp_295_cast_fu_620_p1;

assign layer3_kernel_V_3_d0 = tmp_V_59_reg_693;

assign layer3_kernel_V_4_address0 = tmp_295_cast_fu_620_p1;

assign layer3_kernel_V_4_d0 = tmp_V_60_reg_698;

assign layer3_kernel_V_5_address0 = tmp_295_cast_fu_620_p1;

assign layer3_kernel_V_5_d0 = tmp_V_61_reg_703;

assign layer3_kernel_V_6_address0 = tmp_295_cast_fu_620_p1;

assign layer3_kernel_V_6_d0 = tmp_V_62_reg_708;

assign layer3_kernel_V_7_address0 = tmp_295_cast_fu_620_p1;

assign layer3_kernel_V_7_d0 = tmp_V_63_reg_713;

assign layer3_kernel_V_8_address0 = tmp_295_cast_fu_620_p1;

assign layer3_kernel_V_8_d0 = tmp_V_64_reg_718;

assign layer3_kernel_V_9_address0 = tmp_295_cast_fu_620_p1;

assign layer3_kernel_V_9_d0 = tmp_V_65_reg_723;

assign p_i_mid2_fu_562_p3 = ((exitcond19_i_fu_556_p2[0:0] === 1'b1) ? 3'd0 : p_i_phi_fu_531_p4);

assign p_shl1_cast_fu_601_p1 = tmp_s_fu_594_p3;

assign p_shl_cast_fu_590_p1 = tmp_fu_583_p3;

assign tmp_208_fu_605_p2 = (p_shl_cast_fu_590_p1 - p_shl1_cast_fu_601_p1);

assign tmp_209_fu_614_p2 = (tmp_208_fu_605_p2 + tmp_i_cast_fu_611_p1);

assign tmp_295_cast_fu_620_p1 = $signed(tmp_209_fu_614_p2);

assign tmp_fu_583_p3 = {{tmp_i_mid2_v_reg_671}, {3'd0}};

assign tmp_i_cast_fu_611_p1 = p_i_mid2_reg_665;

assign tmp_i_mid2_v_fu_570_p3 = ((exitcond19_i_fu_556_p2[0:0] === 1'b1) ? kh_V_fu_550_p2 : p_02_i_phi_fu_520_p4);

assign tmp_s_fu_594_p3 = {{tmp_i_mid2_v_reg_671}, {1'd0}};

endmodule //p_wt_kernel_385
