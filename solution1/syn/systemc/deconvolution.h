// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2017.1
// Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _deconvolution_HH_
#define _deconvolution_HH_

#include "systemc.h"
#include "AESL_pkg.h"


namespace ap_rtl {

struct deconvolution : public sc_module {
    // Port declarations 16
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_out< sc_lv<11> > kernel_V_address0;
    sc_out< sc_logic > kernel_V_ce0;
    sc_in< sc_lv<8> > kernel_V_q0;
    sc_out< sc_lv<11> > ifeat_V_address0;
    sc_out< sc_logic > ifeat_V_ce0;
    sc_in< sc_lv<8> > ifeat_V_q0;
    sc_out< sc_lv<13> > ofeat_V_address0;
    sc_out< sc_logic > ofeat_V_ce0;
    sc_out< sc_logic > ofeat_V_we0;
    sc_out< sc_lv<8> > ofeat_V_d0;


    // Module declarations
    deconvolution(sc_module_name name);
    SC_HAS_PROCESS(deconvolution);

    ~deconvolution();

    sc_trace_file* mVcdFile;

    ofstream mHdltvinHandle;
    ofstream mHdltvoutHandle;
    sc_signal< sc_lv<9> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_lv<9> > id_cast8_cast_fu_165_p1;
    sc_signal< sc_lv<9> > id_cast8_cast_reg_472;
    sc_signal< sc_logic > ap_CS_fsm_state2;
    sc_signal< sc_lv<9> > tmp_4_cast_fu_177_p1;
    sc_signal< sc_lv<9> > tmp_4_cast_reg_477;
    sc_signal< sc_lv<4> > id_1_fu_187_p2;
    sc_signal< sc_lv<4> > id_1_reg_485;
    sc_signal< sc_lv<13> > tmp_10_cast_fu_202_p3;
    sc_signal< sc_lv<13> > tmp_10_cast_reg_490;
    sc_signal< sc_logic > ap_CS_fsm_state3;
    sc_signal< sc_lv<5> > ir_1_fu_216_p2;
    sc_signal< sc_lv<5> > ir_1_reg_498;
    sc_signal< sc_lv<11> > ifeat_V_addr_reg_503;
    sc_signal< sc_logic > ap_CS_fsm_state4;
    sc_signal< sc_lv<5> > ic_1_fu_242_p2;
    sc_signal< sc_lv<5> > ic_1_reg_511;
    sc_signal< sc_lv<32> > tmp_12_fu_281_p2;
    sc_signal< sc_lv<32> > tmp_12_reg_516;
    sc_signal< sc_logic > ap_CS_fsm_state5;
    sc_signal< sc_lv<10> > tmp_15_fu_311_p2;
    sc_signal< sc_lv<10> > tmp_15_reg_521;
    sc_signal< sc_lv<5> > oc_1_fu_323_p2;
    sc_signal< sc_lv<5> > oc_1_reg_529;
    sc_signal< sc_lv<12> > tmp_19_fu_358_p2;
    sc_signal< sc_lv<12> > tmp_19_reg_534;
    sc_signal< sc_logic > ap_CS_fsm_state6;
    sc_signal< sc_lv<2> > kr_1_fu_370_p2;
    sc_signal< sc_lv<2> > kr_1_reg_542;
    sc_signal< sc_lv<14> > tmp_22_fu_411_p2;
    sc_signal< sc_lv<14> > tmp_22_reg_547;
    sc_signal< sc_lv<1> > tmp_7_fu_364_p2;
    sc_signal< sc_logic > ap_CS_fsm_state7;
    sc_signal< sc_lv<2> > kc_1_fu_441_p2;
    sc_signal< sc_lv<2> > kc_1_reg_560;
    sc_signal< sc_lv<14> > tmp_24_fu_457_p2;
    sc_signal< sc_lv<14> > tmp_24_reg_565;
    sc_signal< sc_lv<1> > tmp_9_fu_435_p2;
    sc_signal< sc_lv<8> > tmp_s_fu_462_p2;
    sc_signal< sc_lv<8> > tmp_s_reg_570;
    sc_signal< sc_logic > ap_CS_fsm_state8;
    sc_signal< sc_lv<4> > id_reg_97;
    sc_signal< sc_lv<1> > tmp_1_fu_210_p2;
    sc_signal< sc_lv<5> > ir_reg_108;
    sc_signal< sc_lv<1> > tmp_3_fu_236_p2;
    sc_signal< sc_lv<1> > tmp_fu_181_p2;
    sc_signal< sc_lv<5> > ic_reg_120;
    sc_signal< sc_lv<1> > tmp_5_fu_317_p2;
    sc_signal< sc_lv<5> > oc_reg_132;
    sc_signal< sc_lv<2> > kr_reg_143;
    sc_signal< sc_lv<2> > kc_reg_154;
    sc_signal< sc_logic > ap_CS_fsm_state9;
    sc_signal< sc_lv<32> > tmp_11_cast_fu_231_p1;
    sc_signal< sc_lv<32> > tmp_27_cast_fu_430_p1;
    sc_signal< sc_lv<32> > tmp_28_cast_fu_468_p1;
    sc_signal< sc_lv<8> > tmp_2_fu_169_p3;
    sc_signal< sc_lv<9> > ir_cast7_cast_fu_193_p1;
    sc_signal< sc_lv<9> > tmp_6_fu_197_p2;
    sc_signal< sc_lv<13> > ic_cast6_cast_fu_222_p1;
    sc_signal< sc_lv<13> > tmp_4_fu_226_p2;
    sc_signal< sc_lv<8> > tmp_8_fu_248_p3;
    sc_signal< sc_lv<9> > tmp_13_cast_fu_256_p1;
    sc_signal< sc_lv<9> > tmp_10_fu_260_p2;
    sc_signal< sc_lv<11> > tmp_11_fu_269_p3;
    sc_signal< sc_lv<32> > p_shl2_fu_277_p1;
    sc_signal< sc_lv<32> > tmp_14_cast_fu_265_p1;
    sc_signal< sc_lv<9> > tmp_13_fu_287_p3;
    sc_signal< sc_lv<6> > tmp_14_fu_299_p3;
    sc_signal< sc_lv<10> > p_shl1_cast_fu_307_p1;
    sc_signal< sc_lv<10> > p_shl_cast_fu_295_p1;
    sc_signal< sc_lv<32> > kr_cast3_fu_333_p1;
    sc_signal< sc_lv<32> > tmp_16_fu_337_p2;
    sc_signal< sc_lv<10> > tmp_18_fu_346_p1;
    sc_signal< sc_lv<12> > p_shl3_cast_fu_350_p3;
    sc_signal< sc_lv<12> > tmp_17_fu_342_p1;
    sc_signal< sc_lv<5> > kr_cast4_fu_329_p1;
    sc_signal< sc_lv<5> > p_or_fu_376_p2;
    sc_signal< sc_lv<10> > p_or_cast_cast_fu_382_p1;
    sc_signal< sc_lv<10> > tmp_20_fu_386_p2;
    sc_signal< sc_lv<11> > tmp_21_fu_399_p3;
    sc_signal< sc_lv<14> > p_shl4_cast_fu_391_p3;
    sc_signal< sc_lv<14> > p_shl5_cast_fu_407_p1;
    sc_signal< sc_lv<12> > kc_cast1_cast_fu_421_p1;
    sc_signal< sc_lv<12> > tmp_23_fu_425_p2;
    sc_signal< sc_lv<5> > kc_cast2_fu_417_p1;
    sc_signal< sc_lv<5> > p_oc_fu_447_p2;
    sc_signal< sc_lv<14> > p_oc_cast_cast_fu_453_p1;
    sc_signal< sc_lv<8> > tmp_s_fu_462_p0;
    sc_signal< sc_lv<8> > tmp_s_fu_462_p1;
    sc_signal< sc_lv<9> > ap_NS_fsm;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<9> ap_ST_fsm_state1;
    static const sc_lv<9> ap_ST_fsm_state2;
    static const sc_lv<9> ap_ST_fsm_state3;
    static const sc_lv<9> ap_ST_fsm_state4;
    static const sc_lv<9> ap_ST_fsm_state5;
    static const sc_lv<9> ap_ST_fsm_state6;
    static const sc_lv<9> ap_ST_fsm_state7;
    static const sc_lv<9> ap_ST_fsm_state8;
    static const sc_lv<9> ap_ST_fsm_state9;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<32> ap_const_lv32_3;
    static const sc_lv<32> ap_const_lv32_4;
    static const sc_lv<32> ap_const_lv32_5;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<32> ap_const_lv32_6;
    static const sc_lv<32> ap_const_lv32_7;
    static const sc_lv<4> ap_const_lv4_0;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<5> ap_const_lv5_0;
    static const sc_lv<2> ap_const_lv2_0;
    static const sc_lv<32> ap_const_lv32_8;
    static const sc_lv<4> ap_const_lv4_8;
    static const sc_lv<4> ap_const_lv4_1;
    static const sc_lv<5> ap_const_lv5_10;
    static const sc_lv<5> ap_const_lv5_1;
    static const sc_lv<3> ap_const_lv3_0;
    static const sc_lv<2> ap_const_lv2_3;
    static const sc_lv<2> ap_const_lv2_1;
    static const bool ap_const_boolean_1;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state2();
    void thread_ap_CS_fsm_state3();
    void thread_ap_CS_fsm_state4();
    void thread_ap_CS_fsm_state5();
    void thread_ap_CS_fsm_state6();
    void thread_ap_CS_fsm_state7();
    void thread_ap_CS_fsm_state8();
    void thread_ap_CS_fsm_state9();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_ready();
    void thread_ic_1_fu_242_p2();
    void thread_ic_cast6_cast_fu_222_p1();
    void thread_id_1_fu_187_p2();
    void thread_id_cast8_cast_fu_165_p1();
    void thread_ifeat_V_address0();
    void thread_ifeat_V_ce0();
    void thread_ir_1_fu_216_p2();
    void thread_ir_cast7_cast_fu_193_p1();
    void thread_kc_1_fu_441_p2();
    void thread_kc_cast1_cast_fu_421_p1();
    void thread_kc_cast2_fu_417_p1();
    void thread_kernel_V_address0();
    void thread_kernel_V_ce0();
    void thread_kr_1_fu_370_p2();
    void thread_kr_cast3_fu_333_p1();
    void thread_kr_cast4_fu_329_p1();
    void thread_oc_1_fu_323_p2();
    void thread_ofeat_V_address0();
    void thread_ofeat_V_ce0();
    void thread_ofeat_V_d0();
    void thread_ofeat_V_we0();
    void thread_p_oc_cast_cast_fu_453_p1();
    void thread_p_oc_fu_447_p2();
    void thread_p_or_cast_cast_fu_382_p1();
    void thread_p_or_fu_376_p2();
    void thread_p_shl1_cast_fu_307_p1();
    void thread_p_shl2_fu_277_p1();
    void thread_p_shl3_cast_fu_350_p3();
    void thread_p_shl4_cast_fu_391_p3();
    void thread_p_shl5_cast_fu_407_p1();
    void thread_p_shl_cast_fu_295_p1();
    void thread_tmp_10_cast_fu_202_p3();
    void thread_tmp_10_fu_260_p2();
    void thread_tmp_11_cast_fu_231_p1();
    void thread_tmp_11_fu_269_p3();
    void thread_tmp_12_fu_281_p2();
    void thread_tmp_13_cast_fu_256_p1();
    void thread_tmp_13_fu_287_p3();
    void thread_tmp_14_cast_fu_265_p1();
    void thread_tmp_14_fu_299_p3();
    void thread_tmp_15_fu_311_p2();
    void thread_tmp_16_fu_337_p2();
    void thread_tmp_17_fu_342_p1();
    void thread_tmp_18_fu_346_p1();
    void thread_tmp_19_fu_358_p2();
    void thread_tmp_1_fu_210_p2();
    void thread_tmp_20_fu_386_p2();
    void thread_tmp_21_fu_399_p3();
    void thread_tmp_22_fu_411_p2();
    void thread_tmp_23_fu_425_p2();
    void thread_tmp_24_fu_457_p2();
    void thread_tmp_27_cast_fu_430_p1();
    void thread_tmp_28_cast_fu_468_p1();
    void thread_tmp_2_fu_169_p3();
    void thread_tmp_3_fu_236_p2();
    void thread_tmp_4_cast_fu_177_p1();
    void thread_tmp_4_fu_226_p2();
    void thread_tmp_5_fu_317_p2();
    void thread_tmp_6_fu_197_p2();
    void thread_tmp_7_fu_364_p2();
    void thread_tmp_8_fu_248_p3();
    void thread_tmp_9_fu_435_p2();
    void thread_tmp_fu_181_p2();
    void thread_tmp_s_fu_462_p0();
    void thread_tmp_s_fu_462_p1();
    void thread_tmp_s_fu_462_p2();
    void thread_ap_NS_fsm();
    void thread_hdltv_gen();
};

}

using namespace ap_rtl;

#endif
