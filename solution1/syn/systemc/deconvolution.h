// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2017.1
// Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _deconvolution_HH_
#define _deconvolution_HH_

#include "systemc.h"
#include "AESL_pkg.h"


namespace ap_rtl {

struct deconvolution : public sc_module {
    // Port declarations 16
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_out< sc_lv<11> > kernel_address0;
    sc_out< sc_logic > kernel_ce0;
    sc_in< sc_lv<32> > kernel_q0;
    sc_out< sc_lv<11> > ifeat_address0;
    sc_out< sc_logic > ifeat_ce0;
    sc_in< sc_lv<32> > ifeat_q0;
    sc_out< sc_lv<13> > ofeat_address0;
    sc_out< sc_logic > ofeat_ce0;
    sc_out< sc_logic > ofeat_we0;
    sc_out< sc_lv<32> > ofeat_d0;


    // Module declarations
    deconvolution(sc_module_name name);
    SC_HAS_PROCESS(deconvolution);

    ~deconvolution();

    sc_trace_file* mVcdFile;

    ofstream mHdltvinHandle;
    ofstream mHdltvoutHandle;
    sc_signal< sc_lv<7> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_lv<32> > tmp_3_fu_134_p2;
    sc_signal< sc_lv<32> > tmp_3_reg_306;
    sc_signal< sc_logic > ap_CS_fsm_state2;
    sc_signal< sc_lv<32> > tmp_8_fu_152_p2;
    sc_signal< sc_lv<32> > tmp_8_reg_312;
    sc_signal< sc_lv<32> > oc_1_fu_158_p2;
    sc_signal< sc_lv<32> > oc_1_reg_317;
    sc_signal< sc_lv<12> > tmp_s_fu_204_p2;
    sc_signal< sc_lv<12> > tmp_s_reg_322;
    sc_signal< sc_logic > ap_CS_fsm_state3;
    sc_signal< sc_lv<14> > tmp_14_fu_239_p2;
    sc_signal< sc_lv<14> > tmp_14_reg_327;
    sc_signal< sc_lv<2> > kr_fu_251_p2;
    sc_signal< sc_lv<2> > kr_reg_335;
    sc_signal< sc_logic > ap_CS_fsm_state4;
    sc_signal< sc_lv<13> > ofeat_addr_reg_345;
    sc_signal< sc_lv<2> > kc_fu_291_p2;
    sc_signal< sc_lv<2> > kc_reg_353;
    sc_signal< sc_lv<32> > ifeat_load_reg_358;
    sc_signal< sc_logic > ap_CS_fsm_state5;
    sc_signal< sc_lv<32> > kernel_load_reg_363;
    sc_signal< sc_lv<32> > tmp_6_fu_297_p2;
    sc_signal< sc_lv<32> > tmp_6_reg_368;
    sc_signal< sc_logic > ap_CS_fsm_state6;
    sc_signal< sc_lv<32> > oc_reg_89;
    sc_signal< sc_lv<1> > tmp_2_fu_245_p2;
    sc_signal< sc_lv<2> > p_or_reg_100;
    sc_signal< sc_lv<1> > tmp_4_fu_285_p2;
    sc_signal< sc_lv<2> > p_oc_reg_111;
    sc_signal< sc_logic > ap_CS_fsm_state7;
    sc_signal< sc_lv<32> > tmp_19_cast_fu_270_p1;
    sc_signal< sc_lv<32> > tmp_20_cast_fu_280_p1;
    sc_signal< sc_lv<32> > tmp_fu_122_p2;
    sc_signal< sc_lv<32> > tmp_1_fu_128_p2;
    sc_signal< sc_lv<32> > tmp_7_fu_146_p2;
    sc_signal< sc_lv<32> > tmp_5_fu_140_p2;
    sc_signal< sc_lv<10> > tmp_9_fu_168_p4;
    sc_signal< sc_lv<8> > tmp_10_fu_185_p4;
    sc_signal< sc_lv<12> > p_shl6_cast_fu_194_p4;
    sc_signal< sc_lv<12> > tmp_12_cast_fu_177_p3;
    sc_signal< sc_lv<32> > p_or_cast2_fu_164_p1;
    sc_signal< sc_lv<32> > tmp_11_fu_210_p2;
    sc_signal< sc_lv<10> > tmp_12_fu_215_p1;
    sc_signal< sc_lv<13> > tmp_13_fu_227_p1;
    sc_signal< sc_lv<14> > p_shl5_cast_fu_231_p3;
    sc_signal< sc_lv<14> > p_shl4_cast_fu_219_p3;
    sc_signal< sc_lv<12> > p_oc_cast1_cast_fu_261_p1;
    sc_signal< sc_lv<12> > tmp_15_fu_265_p2;
    sc_signal< sc_lv<14> > p_oc_cast1_cast7_fu_257_p1;
    sc_signal< sc_lv<14> > tmp_16_fu_275_p2;
    sc_signal< sc_lv<7> > ap_NS_fsm;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<7> ap_ST_fsm_state1;
    static const sc_lv<7> ap_ST_fsm_state2;
    static const sc_lv<7> ap_ST_fsm_state3;
    static const sc_lv<7> ap_ST_fsm_state4;
    static const sc_lv<7> ap_ST_fsm_state5;
    static const sc_lv<7> ap_ST_fsm_state6;
    static const sc_lv<7> ap_ST_fsm_state7;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<32> ap_const_lv32_3;
    static const sc_lv<32> ap_const_lv32_4;
    static const sc_lv<32> ap_const_lv32_5;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<2> ap_const_lv2_0;
    static const sc_lv<32> ap_const_lv32_6;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<32> ap_const_lv32_B;
    static const sc_lv<32> ap_const_lv32_9;
    static const sc_lv<4> ap_const_lv4_0;
    static const sc_lv<2> ap_const_lv2_3;
    static const sc_lv<2> ap_const_lv2_1;
    static const bool ap_const_boolean_1;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state2();
    void thread_ap_CS_fsm_state3();
    void thread_ap_CS_fsm_state4();
    void thread_ap_CS_fsm_state5();
    void thread_ap_CS_fsm_state6();
    void thread_ap_CS_fsm_state7();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_ready();
    void thread_ifeat_address0();
    void thread_ifeat_ce0();
    void thread_kc_fu_291_p2();
    void thread_kernel_address0();
    void thread_kernel_ce0();
    void thread_kr_fu_251_p2();
    void thread_oc_1_fu_158_p2();
    void thread_ofeat_address0();
    void thread_ofeat_ce0();
    void thread_ofeat_d0();
    void thread_ofeat_we0();
    void thread_p_oc_cast1_cast7_fu_257_p1();
    void thread_p_oc_cast1_cast_fu_261_p1();
    void thread_p_or_cast2_fu_164_p1();
    void thread_p_shl4_cast_fu_219_p3();
    void thread_p_shl5_cast_fu_231_p3();
    void thread_p_shl6_cast_fu_194_p4();
    void thread_tmp_10_fu_185_p4();
    void thread_tmp_11_fu_210_p2();
    void thread_tmp_12_cast_fu_177_p3();
    void thread_tmp_12_fu_215_p1();
    void thread_tmp_13_fu_227_p1();
    void thread_tmp_14_fu_239_p2();
    void thread_tmp_15_fu_265_p2();
    void thread_tmp_16_fu_275_p2();
    void thread_tmp_19_cast_fu_270_p1();
    void thread_tmp_1_fu_128_p2();
    void thread_tmp_20_cast_fu_280_p1();
    void thread_tmp_2_fu_245_p2();
    void thread_tmp_3_fu_134_p2();
    void thread_tmp_4_fu_285_p2();
    void thread_tmp_5_fu_140_p2();
    void thread_tmp_6_fu_297_p2();
    void thread_tmp_7_fu_146_p2();
    void thread_tmp_8_fu_152_p2();
    void thread_tmp_9_fu_168_p4();
    void thread_tmp_fu_122_p2();
    void thread_tmp_s_fu_204_p2();
    void thread_ap_NS_fsm();
    void thread_hdltv_gen();
};

}

using namespace ap_rtl;

#endif
